{"version":3,"sources":["app/routes/admin/index.js","app/routes/adminTest/index.js","app/components/UI/Accordian.js","app/components/UI/Toast.js","app/components/UI/Wrappers/Minimizer.js","app/components/admin-controls/BannerControls.js","app/components/admin-controls/MainTextControls.js","app/components/admin-controls/TestimonialsControls.js","app/containers/Admin/Navigation/TabItems.js/TabItems.js","app/containers/Admin/Navigation/TabsMenu.js","app/components/Forms/NewPageForm.js","app/containers/Admin/media/ImgGridList.js","app/containers/Admin/media/Media.js","app/containers/Admin/template/Template.js","app/containers/Admin/homepage/Homepage.js","app/components/UI/MultiSelect.js","app/containers/Admin/plugins/contactUsPlugin/ContactUsPlugin.js","app/containers/Admin/plugins/bookingPlugin/BookingPlugin.js","app/containers/Admin/plugins/testimonialPlugin/TestimonialPlugin.js","app/containers/Admin/plugins/Plugins.js","app/containers/Auth/AuthModal.js","app/containers/Admin/Admin.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","_components_page__WEBPACK_IMPORTED_MODULE_2__","_containers_Admin_Admin__WEBPACK_IMPORTED_MODULE_3__","connect","state","currentUser","auth","_ref","a","createElement","id","title","noCrawl","_components_page__WEBPACK_IMPORTED_MODULE_1__","_containers_Admin_Admin__WEBPACK_IMPORTED_MODULE_2__","Admin_TEST","props","console","log","StyledAccordian","styled","div","_templateObject","theme","primaryBackGroundColour","accordian","react_default","ExpansionPanel_default","onChange","onClick","name","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","children","Toast","open","handleClick","_this","setState","handleClose","event","reason","this","toastColour","error","success","StyledSnackBar","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","aria-describedby","message","action","IconButton_default","key","aria-label","color","Close_default","Component","Toast_templateObject","Minimizer","isOpen","handleMinimizer","StyledMinimizer","padding","Flex","margin","RemoveCircle_default","AddCircle_default","Collapse_default","in","className","Emtpy","emptyHeight","Minimizer_templateObject","_templateObject2","BannerControls","_this$props","pos","data","handleCheckbox","handleChange","handleMediaModal","clearInput","handleColourPicker","content","Object","keys","filter","fc","includes","map","c","replace","objectSpread","defineProperty","_content","Banner3D","BannerHalfwidth","BannerImgSize","BannerHWbackImg","BannerHWBackColour","BannerImgRoundHW","BannerImg3dHW","BannerTxtRightSide","BannerTxtLightTheme","BannerLogo","Bannerfade","BannerTitle","BannerSubtitle","BannerDescription","BannerBtnText","BannerLink","BannerTextBkgrnd","BannerTextBkgrndColor","BannerTextBkgrndAngled","BannerTextBkgrndRounded","Wrappers_Minimizer","Box","Input","inputtype","sideLabel","concat","checked","Fragment","label","value","mobile","type","min","max","changeColour","items","availableRoutes","MainTextContols","mainTextPosition","mainTextCenterTitle","mainTextRightSide","mainTextBackColour","mainTextImg","mainTextImgAlign","mainTextImgWidth","mainTextImgHeight","positionArray","Grid","cols","colsSmall","pageId","TestimonialsContols","testimonials_A","testimonials_B","testimonials_C","testimonials_D","testimonials_E","StyledTabItems","TabItems_templateObject","Preview","TabItems_templateObject2","DeletePageIcon","_templateObject3","TabItems","itemProps","dropdownPages","TabsMenu_TabMenu","navigationItems","parentId","parent","handlePageDelete","openMediaModal","updatePageSubmit","isUpdating","cancelUpdate","stateBackup","template","plugins","preventDefault","target","check","newevent","inputName","_props$itemProps$cont","topBanner","topBannerHalfwidth","midBanner","midBannerHalfwidth","bottomBanner","bottomBannerHalfwidth","mainText","testimonialsPosition","Paper_default","elevation","admin_controls_BannerControls","helpKey","MainTextControls","TestimonialsControls","pageID","Dashboard","assign","pageInfo","overlayBlocker","justifyContent","Button","Spinner","Delete_default","fontSize","TabMenu","disableTabText","topBannerOptions","midBannerOptions","bottomBannerOptions","prevProps","_this2","tabLabels","tabitems","index","item","Tab_default","TabItems_js_TabItems","StyledTabs","Tooltip_default","AppBar_default","position","Tabs_default","variant","scrollButtons","isError","UI_Toast","TabsMenu_templateObject","NewPageForm","_Component","_getPrototypeOf2","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","selectVal","onInputChange","_event$target","scrubbedVal","inherits","createClass","prop","handleSubmit","disabled","loading","TitlebarGridList","columns","spacing","activeIndex","selectedValue","selectedName","handleResize","windowSize","window","innerWidth","handleSelect","tile","selectedImage","addEventListener","removeEventListener","tileData","StyledGrid","GridList_default","cellHeight","GridListTile_default","style","height","ListSubheader_default","component","gridTileClass","selectedIndex","e","src","img","alt","GridListTileBar_default","actionIcon","isModal","deleteImage","ImgGridList_templateObject","Media","uploadOpen","customURL","customURLtext","deleteImgOpen","getImageUrls","that","assertThisInitialized","imageContainer","imageCount","currentImages","returnedCount","storageRef","firebase","storage","ref","i","child","process","getDownloadURL","then","url","toConsumableArray","setMediaImages","catch","onDrop","acceptedFiles","rejectedFiles","file","checkFileAlreadyExists","put","snapshot","addImageRefToDb","err","isTimedOut","newPostKey","database","push","updates","update","refreshState","handleCustomURL","confirmImage","_this$state","tabItemReference","image","onChangePageState","imgUrl","confirmDelete","imageURLs","find","remove","delete","handleUploadOpen","isAuthenticated","_this$state2","dropZone","mediaTemplate","noMediaMessage","dist_es","multiple","accept","getRootProps","getInputProps","isDragActive","StyledDropArea","classNames","dropzone--isActive","selectedLabel","IsMediaModal","opacity","ImgGridList","placeholder","Divider_default","Modal","description","Media_templateObject","Media_templateObject2","Template","changeTemplateState","handlesubmit","templateChangeSubmit","buttonStyle","_this$props$template","navButtons","siteButtons","transparentHeader","navLightTheme","siteLogo","version","StyledTemplate","colsLarge","colsMed","Template_templateObject","Homepage","previewOpen","changeHomepageState","homepageChangeSubmit","homePage","_this$props$homePage$","StyledHomePage","Homepage_Preview","mobileMargin","Homepage_templateObject","Homepage_templateObject2","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","width","MultiSelect","StyledSelect","FormControl_default","InputLabel_default","htmlFor","Select_default","input","Input_default","renderValue","selected","Chip_default","MenuItem_default","React","MultiSelect_templateObject","minwidth","ContactUsPlugin","plugin","_props$plugin","contactUsActive","contactUsPages","contactUsEmail","contactUsSubjectStrict","contactUsSubjectSelections","parentObj","UI_MultiSelect","BookingPlugin","bookingActive","bookingPages","bookingEmail","bookingCalendarID","bookingForm","bookingApiKey","bookingTimeSlotsAvailable","bookingTimeSlots","bookingGetCalandarAdvance","bookingSessions","bookingSubjectStrict","bookingSubjectSelections","TestimonialsPlugin","testimonialsActive","testimonialsPages","testimonialsEmail","Plugins","contactUsPlugin","accordianClick","changePluginState","pluginsChangeSubmit","route","split","pop","unshift","StyledPlugins","contactUsPlugin_ContactUsPlugin","contactUs","bookingPlugin_BookingPlugin","booking","TestimonialPlugin","testimonials","Plugins_templateObject","AuthModal","email","password","onFormChange","submitHandler","onAuth","admin","backToHome","history","errorMessage","mainState","userId","dispatch","actions","Admin","homepage_accordian","navigation_accordian","template_accordian","media_accordian","showSignIn","newPageOpen","deletePageModal","pageToDelete","mediaModalTabItemRef","mediaImages","newPageToast","logoutHandler","signOut","onLogoutClick","parentKey","closeMediaModal","handleNewPageButton","submitNewPage","newPage_State","toLowerCase","defaultContent","Date","now","newPageObj","subpageIndex","newPage","code","onInitWebsiteState","handleDeletePageModal","submitDeletePage","_this$state$pageToDel","updatePage","eventTarget","URL","onUpdatePageSubmit","timedOutUser","plugins_accordian","StyledAdminPage","Auth_AuthModal","Accordian","media_Media","images","template_Template","onRevertChanges","homepage_Homepage","home","Forms_NewPageForm","plugins_Plugins","updatePageToast","Admin_templateObject","state_copy","pageUpdateToast","routes"],"mappings":"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","file":"static/js/admin.5ef01a73.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Page from \"../../components/page\";\r\n\r\nimport Admin from \"../../containers/Admin/Admin\";\r\n\r\nconst AdminRoute = ({ currentUser }) => (\r\n  <Page id=\"admin\" title=\"Admin\" noCrawl>\r\n    <Admin />\r\n  </Page>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: state.auth.currentUser\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(AdminRoute);\r\n","import React from \"react\";\r\nimport Page from \"../../components/page\";\r\n\r\nimport Admin from \"../../containers/Admin/Admin\";\r\n\r\nconst Admin_TEST = props => {\r\n  console.log(\"admin_TEST.props\", props);\r\n  return (\r\n    <Page id=\"admin\" title=\"Admin\" noCrawl>\r\n      <Admin {...props}/>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Admin_TEST;\r\n","import React from \"react\";\r\n\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst accordian = props => (\r\n  <StyledAccordian>\r\n    <ExpansionPanel onChange={() => props.onClick(props.name)}>\r\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n        <div>{props.title}</div>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        {props.children ? props.children : <div />}\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  </StyledAccordian>\r\n);\r\n\r\nconst StyledAccordian = styled.div`\r\n    margin: 15px 5px;\r\n  \r\n    /* > div {\r\n        height: 20px !important;\r\n        width: 20px !important;\r\n        margin: \"theme.spacing.unit * 2\";\r\n        color: ${props => props.theme.primaryBackGroundColour};\r\n\r\n    } */\r\n`;\r\n\r\nexport default accordian;\r\n","import React, { Component } from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nclass Toast extends Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ open: true });\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    let toastColour = \"rgb(49, 49, 49)\";\r\n    if (this.props.error) toastColour = \"rgb(220, 52, 54)\";\r\n    if (this.props.success) toastColour = \"rgb(70,154,16)\";\r\n\r\n    return (\r\n      <StyledSnackBar toastColour={toastColour}>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"center\"\r\n          }}\r\n          open={this.state.open}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleClose}\r\n          ContentProps={{\r\n            \"aria-describedby\": \"message-id\"\r\n          }}\r\n          message={<span id=\"message-id\">{this.props.message}</span>}\r\n          action={[\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"Close\"\r\n              color=\"inherit\"\r\n              onClick={this.handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          ]}\r\n        />\r\n      </StyledSnackBar>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledSnackBar = styled.div`\r\n  > div div {\r\n    background-color: ${props => props.toastColour};\r\n    font-weight: ${props => (props.error ? \"bold\" : \"initial\")};\r\n  }\r\n`;\r\n\r\nexport default Toast;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport AddIcon from \"@material-ui/icons/AddCircle\";\r\nimport MinusIcon from \"@material-ui/icons/RemoveCircle\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Flex from \"./Flex\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\n\r\nclass Minimizer extends Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n\r\n  handleMinimizer = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  };\r\n\r\n  render() {\r\n    const { isOpen } = this.state;\r\n\r\n    return (\r\n      <StyledMinimizer padding={this.props.padding}>\r\n        <Flex margin=\"0\">\r\n          <IconButton\r\n            aria-label=\"Add\"\r\n            color=\"primary\"\r\n            onClick={this.handleMinimizer}\r\n          >\r\n            {isOpen ? <MinusIcon /> : <AddIcon />}\r\n          </IconButton>\r\n          {isOpen ? (\r\n            <small onClick={this.handleMinimizer}>\r\n              Click to minimise options\r\n            </small>\r\n          ) : (\r\n            <small onClick={this.handleMinimizer}>\r\n              Click to expand further options\r\n            </small>\r\n          )}\r\n        </Flex>\r\n        <Collapse in={isOpen}>\r\n          {isOpen ? (\r\n            <div className=\"minimized_children\">{this.props.children}</div>\r\n          ) : (\r\n            <Emtpy emptyHeight={this.props.emptyHeight} />\r\n          )}\r\n        </Collapse>\r\n      </StyledMinimizer>\r\n    );\r\n  }\r\n}\r\n\r\nconst Emtpy = styled.div`\r\n  height: ${props => props.emptyHeight || \"500px\"};\r\n`;\r\n\r\nconst StyledMinimizer = styled.div`\r\n  border: 2px solid rgba(0, 0, 0, 0.2);\r\n  border-top: 0;\r\n  border-bottom-left-radius: 8px;\r\n  border-bottom-right-radius: 8px;\r\n  margin-bottom: 35px;\r\n\r\n  > div small {\r\n    cursor: pointer;\r\n  }\r\n\r\n  .minimized_children {\r\n    padding: ${props => props.padding || \"auto\"};\r\n  }\r\n`;\r\n\r\nexport default Minimizer;\r\n","import React, { Component } from 'react';\r\n\r\nimport Input from \"../UI/Input\";\r\nimport Flex from \"../UI/Wrappers/Flex\";\r\nimport Box from \"../UI/Wrappers/Box\";\r\nimport Minimizer from \"../UI/Wrappers/Minimizer\";\r\n\r\n\r\nclass BannerControls extends Component {\r\n\r\n    render() {\r\n        const { pos, data, handleCheckbox, handleChange, handleMediaModal, clearInput, handleColourPicker } = this.props\r\n        let content = {}\r\n\r\n        Object.keys(data)\r\n        .filter(fc => fc.includes(pos+'Banner'))\r\n        .map(c => {\r\n            const key = c.replace(pos, '')\r\n            return content = {...content, [key]: data[c] }\r\n        });\r\n\r\n        const {\r\n          Banner3D,\r\n          BannerHalfwidth,\r\n          BannerImgSize,\r\n          BannerHWbackImg,\r\n          BannerHWBackColour,\r\n          BannerImgRoundHW,\r\n          BannerImg3dHW,\r\n          BannerTxtRightSide,\r\n          BannerTxtLightTheme,\r\n          BannerLogo,\r\n          Bannerfade,\r\n          BannerTitle,\r\n          BannerSubtitle,\r\n          BannerDescription,\r\n          BannerBtnText,\r\n          BannerLink,\r\n          BannerTextBkgrnd,\r\n          BannerTextBkgrndColor,\r\n          BannerTextBkgrndAngled,\r\n          BannerTextBkgrndRounded\r\n\r\n        } = content\r\n\r\n        return (\r\n            <Minimizer>\r\n              <Box>\r\n                <Input\r\n                  inputtype=\"checkbox\"\r\n                  sideLabel={`Use the ${pos} banner image inside the banner`}\r\n                  name={pos+\"BannerHalfwidth\"}\r\n                  checked={BannerHalfwidth}\r\n                  handleChange={handleCheckbox}\r\n                />\r\n\r\n                <Input\r\n                  inputtype=\"checkbox\"\r\n                  sideLabel={`3d Shadow around the banner`}\r\n                  name={pos+\"Banner3D\"}\r\n                  checked={Banner3D}\r\n                  handleChange={handleCheckbox}\r\n                />\r\n                \r\n                {BannerHalfwidth && (\r\n                  <>\r\n                    <Input\r\n                      inputtype=\"checkbox\"\r\n                      sideLabel={`Inner Banner image 3d shadow`}\r\n                      name={pos+\"BannerImg3dHW\"}\r\n                      checked={BannerImg3dHW}\r\n                      handleChange={handleCheckbox}\r\n                    />\r\n                    <Input\r\n                      inputtype=\"inputSelector\"\r\n                      label=\"Banner Background Image\"\r\n                      name={pos+\"BannerHWbackImg\"}\r\n                      value={BannerHWbackImg}\r\n                      onChange={handleChange}\r\n                      onClick={handleMediaModal}\r\n                      clearInput={clearInput}\r\n                    />\r\n                    <Flex mobile>\r\n                      <Input\r\n                        inputtype=\"input\"\r\n                        type=\"number\"\r\n                        label=\"Inner Image Size (-100 to 100)\"\r\n                        name={pos+\"BannerImgSize\"}\r\n                        value={BannerImgSize}\r\n                        onChange={handleChange}\r\n                        min={'-100'}\r\n                        max={'100'}\r\n                        \r\n                      />\r\n                      <Input\r\n                        inputtype=\"input\"\r\n                        type=\"number\"\r\n                        label=\"Inner Image rounded (0 to 50)\"\r\n                        name={pos+\"BannerImgRoundHW\"}\r\n                        value={BannerImgRoundHW}\r\n                        onChange={handleChange}\r\n                        min={'0'}\r\n                        max={'50'}\r\n                        margin={'0 0 0 15px'}\r\n                      />\r\n                      \r\n                    </Flex>\r\n                    <Input\r\n                        inputtype=\"inputColourPicker\"\r\n                        label=\"Banner Background Colour\"\r\n                        name={pos+\"BannerHWBackColour\"}\r\n                        value={BannerHWBackColour}\r\n                        changeColour={handleColourPicker}\r\n                    />\r\n                  </>\r\n                )}\r\n\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Banner Text has a Background\"\r\n                    name={pos+\"BannerTextBkgrnd\"}\r\n                    checked={BannerTextBkgrnd}\r\n                    handleChange={handleCheckbox}\r\n                  />\r\n\r\n                  {BannerTextBkgrnd &&\r\n                    <>\r\n                    <Flex mobile>\r\n                      <Input\r\n                        inputtype=\"input\"\r\n                        type={'number'}\r\n                        label=\"Text Background angled (-50 to 50)\"\r\n                        name={pos+\"BannerTextBkgrndAngled\"}\r\n                        value={BannerTextBkgrndAngled}\r\n                        onChange={handleChange}\r\n                        min={'-50'}\r\n                        max={'50'}\r\n                      />\r\n                      <Input\r\n                        inputtype=\"input\"\r\n                        type={'number'}\r\n                        label=\"Text Background round edges (0-50)\"\r\n                        name={pos+\"BannerTextBkgrndRounded\"}\r\n                        value={BannerTextBkgrndRounded}\r\n                        onChange={handleChange}\r\n                        min={'0'}\r\n                        max={'50'}\r\n                      />\r\n                    </Flex>\r\n                    <Input\r\n                      inputtype=\"inputColourPicker\"\r\n                      label=\"Banner Text Background Colour\"\r\n                      name={pos+\"BannerTextBkgrndColor\"}\r\n                      value={BannerTextBkgrndColor}\r\n                      changeColour={handleColourPicker}\r\n                     \r\n                    />\r\n                    </>\r\n                  }\r\n\r\n                <Flex mobile>\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Banner Text Right Side\"\r\n                    name={pos+\"BannerTxtRightSide\"}\r\n                    checked={BannerTxtRightSide}\r\n                    handleChange={handleCheckbox}\r\n                  />\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Banner Light Text Color\"\r\n                    name={pos+\"BannerTxtLightTheme\"}\r\n                    checked={BannerTxtLightTheme}\r\n                    handleChange={handleCheckbox}\r\n                  />\r\n                </Flex>\r\n\r\n                <Flex mobile>\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Use Logo in banner\"\r\n                    name={pos+\"BannerLogo\"}\r\n                    checked={BannerLogo}\r\n                    handleChange={handleCheckbox}\r\n                  />\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Banner content fade in effect\"\r\n                    name={pos+\"Bannerfade\"}\r\n                    checked={Bannerfade}\r\n                    handleChange={handleCheckbox}\r\n                  />\r\n                </Flex>\r\n                <Input\r\n                  inputtype=\"input\"\r\n                  label=\"Banner Title\"\r\n                  name={pos+\"BannerTitle\"}\r\n                  value={BannerTitle}\r\n                  onChange={handleChange}\r\n                />\r\n                <Input\r\n                  inputtype=\"input\"\r\n                  label=\"Banner Subtitle\"\r\n                  name={pos+\"BannerSubtitle\"}\r\n                  value={BannerSubtitle}\r\n                  onChange={handleChange}\r\n                />\r\n                <Input\r\n                  inputtype=\"input\"\r\n                  label=\"Banner Description\"\r\n                  name={pos+\"BannerDescription\"}\r\n                  value={BannerDescription}\r\n                  onChange={handleChange}\r\n                />\r\n                <Flex mobile>\r\n                  <Input\r\n                    inputtype=\"input\"\r\n                    label=\"Banner Button Text\"\r\n                    name={pos+\"BannerBtnText\"}\r\n                    value={BannerBtnText}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Input\r\n                    inputtype=\"select\"\r\n                    label=\"Banner Link\"\r\n                    name={pos+\"BannerLink\"}\r\n                    value={BannerLink}\r\n                    items={this.props.availableRoutes}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Flex>\r\n              </Box>\r\n            </Minimizer>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default BannerControls;","import React from 'react';\r\n\r\nimport Input from \"../UI/Input\";\r\nimport Flex from \"../UI/Wrappers/Flex\";\r\nimport Grid from \"../UI/Wrappers/Grid\";\r\nimport Box from \"../UI/Wrappers/Box\";\r\nimport Minimizer from \"../UI/Wrappers/Minimizer\";\r\n\r\nconst MainTextContols = (props) => {\r\n\r\n    const {data} = props\r\n    let content = {}\r\n\r\n    Object.keys(data)\r\n        .filter(fc => fc.includes('mainText'))\r\n        .map(c => {\r\n            return content = {...content, [c]: data[c] }\r\n        });\r\n    \r\n    console.log('content', content)\r\n    \r\n    const {\r\n      mainTextPosition,\r\n      mainTextCenterTitle,\r\n      mainTextRightSide,\r\n      mainTextBackColour,\r\n      mainTextImg,\r\n      mainTextImgAlign,\r\n      mainTextImgWidth,\r\n      mainTextImgHeight\r\n    } = content;\r\n    \r\n    const floatArray = [{ value: \"left\" }, { value: \"right\" }];\r\n\r\n    return (\r\n        <Minimizer>\r\n          <Box>\r\n            <Flex mobile>\r\n                <Input\r\n                inputtype=\"checkbox\"\r\n                sideLabel=\"Center Header text\"\r\n                name=\"mainTextCenterTitle\"\r\n                checked={mainTextCenterTitle}\r\n                handleChange={props.handleCheckbox}\r\n                />\r\n                <Input\r\n                inputtype=\"checkbox\"\r\n                sideLabel=\"Align Text Right Side\"\r\n                name=\"mainTextRightSide\"\r\n                checked={mainTextRightSide}\r\n                handleChange={props.handleCheckbox}\r\n                />\r\n            </Flex>\r\n            <Input\r\n                inputtype=\"select\"\r\n                label=\"Main Text Page Position\"\r\n                name=\"mainTextPosition\"\r\n                value={mainTextPosition}\r\n                items={props.positionArray}\r\n                onChange={props.handleChange}\r\n            />\r\n            <Input\r\n                inputtype=\"inputSelector\"\r\n                label=\"Add a Small Image\"\r\n                name=\"mainTextImg\"\r\n                value={mainTextImg}\r\n                onChange={props.handleChange}\r\n                onClick={props.handleMediaModal}\r\n                clearInput={props.clearInput}\r\n            />\r\n            <Grid cols={\"33% 33% 33%\"} margin={\"0 15px 0 0\"} colsSmall={'100%'}>\r\n                <Input\r\n                inputtype=\"select\"\r\n                label=\"Image align position\"\r\n                name=\"mainTextImgAlign\"\r\n                value={mainTextImgAlign}\r\n                items={floatArray}\r\n                onChange={props.handleChange}\r\n                />\r\n                <Input\r\n                inputtype=\"input\"\r\n                type=\"number\"\r\n                label=\"Banner Image Width\"\r\n                name=\"mainTextImgWidth\"\r\n                value={mainTextImgWidth || 200}\r\n                onChange={props.handleChange}\r\n                />\r\n                <Input\r\n                inputtype=\"input\"\r\n                type=\"number\"\r\n                label=\"Banner Image Height\"\r\n                name=\"mainTextImgHeight\"\r\n                value={mainTextImgHeight || 135}\r\n                onChange={props.handleChange}\r\n                />\r\n            </Grid>\r\n            <Input\r\n                inputtype=\"inputColourPicker\"\r\n                label=\"Banner Background Colour\"\r\n                name=\"mainTextBackColour\"\r\n                value={mainTextBackColour}\r\n                changeColour={props.handleColourPicker}\r\n                pageId={\"home\"}\r\n            />\r\n            </Box>\r\n        </Minimizer>\r\n    );\r\n};\r\n\r\nexport default MainTextContols;","import React from 'react';\r\n\r\nimport Input from \"../UI/Input\";\r\nimport Flex from \"../UI/Wrappers/Flex\";\r\nimport Grid from \"../UI/Wrappers/Grid\";\r\nimport Box from \"../UI/Wrappers/Box\";\r\nimport Minimizer from \"../UI/Wrappers/Minimizer\";\r\n\r\nconst TestimonialsContols = (props) => {\r\n\r\n    const {data} = props\r\n    let content = {}\r\n\r\n    Object.keys(data)\r\n        .filter(fc => fc.includes('testimonials'))\r\n        .map(c => {\r\n            return content = {...content, [c]: data[c] }\r\n        });\r\n    \r\n    console.log('content', content)\r\n    \r\n    const {\r\n        testimonials_A,\r\n        testimonials_B,\r\n        testimonials_C,\r\n        testimonials_D,\r\n        testimonials_E\r\n    } = content;\r\n\r\n    return (\r\n        <Minimizer>\r\n          <Box>\r\n            <Input\r\n                inputtype=\"input\"\r\n                label=\"Testimonial One\"\r\n                name=\"testimonials_A\"\r\n                value={testimonials_A}\r\n                onChange={props.handleChange}\r\n            />\r\n            <Input\r\n                inputtype=\"input\"\r\n                label=\"Testimonial Two\"\r\n                name=\"testimonials_B\"\r\n                value={testimonials_B}\r\n                onChange={props.handleChange}\r\n            />\r\n            <Input\r\n                inputtype=\"input\"\r\n                label=\"Testimonial Three\"\r\n                name=\"testimonials_C\"\r\n                value={testimonials_C}\r\n                onChange={props.handleChange}\r\n            />\r\n            <Input\r\n                inputtype=\"input\"\r\n                label=\"Testimonial Four\"\r\n                name=\"testimonials_D\"\r\n                value={testimonials_D}\r\n                onChange={props.handleChange}\r\n            />\r\n            <Input\r\n                inputtype=\"input\"\r\n                label=\"Testimonial Five\"\r\n                name=\"testimonials_E\"\r\n                value={testimonials_E}\r\n                onChange={props.handleChange}\r\n            />\r\n            {/* <Input\r\n                inputtype=\"select\"\r\n                label=\"Main Text Page Position\"\r\n                name=\"testimonialsPosition\"\r\n                value={testimonialsPosition}\r\n                items={props.positionArray}\r\n                onChange={props.handleChange}\r\n            />\r\n            <Input\r\n                inputtype=\"inputSelector\"\r\n                label=\"Add a Small Image\"\r\n                name=\"testimonialsImg\"\r\n                value={testimonialsImg}\r\n                onChange={props.handleChange}\r\n                onClick={props.handleMediaModal}\r\n                clearInput={props.clearInput}\r\n            />\r\n            <Grid cols={\"33% 33% 33%\"} margin={\"0 15px 0 0\"} colsSmall={'100%'}>\r\n                <Input\r\n                inputtype=\"select\"\r\n                label=\"Image align position\"\r\n                name=\"testimonialsImgAlign\"\r\n                value={testimonialsImgAlign}\r\n                items={floatArray}\r\n                onChange={props.handleChange}\r\n                />\r\n                <Input\r\n                inputtype=\"input\"\r\n                type=\"number\"\r\n                label=\"Banner Image Width\"\r\n                name=\"testimonialsImgWidth\"\r\n                value={testimonialsImgWidth || 200}\r\n                onChange={props.handleChange}\r\n                />\r\n                <Input\r\n                inputtype=\"input\"\r\n                type=\"number\"\r\n                label=\"Banner Image Height\"\r\n                name=\"testimonialsImgHeight\"\r\n                value={testimonialsImgHeight || 135}\r\n                onChange={props.handleChange}\r\n                />\r\n            </Grid>\r\n            <Input\r\n                inputtype=\"inputColourPicker\"\r\n                label=\"Banner Background Colour\"\r\n                name=\"testimonialsBackColour\"\r\n                value={testimonialsBackColour}\r\n                changeColour={props.handleColourPicker}\r\n                pageId={\"home\"}\r\n            /> */}\r\n            </Box>\r\n        </Minimizer>\r\n    );\r\n};\r\n\r\nexport default TestimonialsContols;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Input from \"../../../../components/UI/Input\";\r\nimport TabMenu from \"../TabsMenu\";\r\nimport Button from \"../../../../components/UI/Buttons/Button\";\r\nimport Flex from \"../../../../components/UI/Wrappers/Flex\";\r\nimport Spinner from \"../../../../components/UI/Spinner\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport Dashboard from \"../../../Dashboard/Dashboard\";\r\n\r\nimport BannerControls from '../../../../components/admin-controls/BannerControls'\r\nimport MainTextControls from '../../../../components/admin-controls/MainTextControls'\r\nimport TestimonialsControls from '../../../../components/admin-controls/TestimonialsControls';\r\n\r\nconst TabItems = props => {\r\n  console.log(\"tabItems props\", props);\r\n  if (props.itemProps.dropdownPages) {\r\n    return (\r\n      <TabMenu\r\n        navigationItems={props.itemProps.dropdownPages}\r\n        parentId={props.pageId}\r\n        parent={props.children}\r\n        onChange={props.onChange}\r\n        handlePageDelete={props.handlePageDelete}\r\n        openMediaModal={props.openMediaModal}\r\n        updatePageSubmit={props.updatePageSubmit}\r\n        isUpdating={props.isUpdating}\r\n        cancelUpdate={props.cancelUpdate}\r\n        stateBackup={props.stateBackup}\r\n        availableRoutes={props.availableRoutes}\r\n        template={props.template}\r\n        plugins={props.plugins}\r\n      />\r\n    );\r\n  }\r\n\r\n  const handleChange = event => {\r\n    event.preventDefault();\r\n    props.onChange(event.target, props.pageId, props.parentId);\r\n  };\r\n\r\n  const handleCheckbox = check => event => {\r\n    console.log(check, event.target.checked);\r\n    const newevent = {\r\n      name: event.target.name,\r\n      value: event.target.checked\r\n    };\r\n    props.onChange(newevent, props.pageId, props.parentId);\r\n  };\r\n\r\n  const handleMediaModal = event => {\r\n    event.preventDefault();\r\n    props.openMediaModal(event.target, props.pageId, props.parentId);\r\n  };\r\n\r\n  const handleColourPicker = event => {\r\n    props.onChange(event.target, props.pageId, props.parentId);\r\n  };\r\n\r\n  const handlesubmit = event => {\r\n    event.preventDefault();\r\n    props.updatePageSubmit(\r\n      props.itemProps.content,\r\n      props.pageId,\r\n      props.parentId\r\n    );\r\n  };\r\n\r\n  const clearInput = inputName => {\r\n    const event = { name: inputName, value: \"\" };\r\n    props.onChange(event, props.pageId, props.parentId);\r\n  };\r\n\r\n  const deletePage = () => {\r\n    props.handlePageDelete(props.pageId, props.parentId);\r\n  };\r\n\r\n  const {\r\n    topBanner,\r\n    topBannerHalfwidth,\r\n    midBanner,\r\n    midBannerHalfwidth,\r\n    bottomBanner,\r\n    bottomBannerHalfwidth,\r\n    mainText,\r\n    testimonialsPosition,\r\n  } = props.itemProps.content;\r\n\r\n  const positionArray = [\r\n    { value: \"Top\" },\r\n    { value: \"Middle\" },\r\n    { value: \"Bottom\" }\r\n  ];\r\n\r\n  return (\r\n    <Paper elevation={20}>\r\n      <StyledTabItems>\r\n        <div>\r\n          {props.children}\r\n          <Input\r\n            inputtype=\"inputSelector\"\r\n            label={`${\r\n              topBannerHalfwidth\r\n                ? \"Top Banner Image (Inside Banner)\"\r\n                : \"Top Banner Image\"\r\n            }`}\r\n            name=\"topBanner\"\r\n            value={topBanner}\r\n            onChange={handleChange}\r\n            onClick={handleMediaModal}\r\n            clearInput={clearInput}\r\n          />\r\n          {topBanner && \r\n            <BannerControls \r\n              pos={'top'} \r\n              data={props.itemProps.content} \r\n              handleCheckbox={handleCheckbox}\r\n              handleChange={handleChange}\r\n              handleMediaModal={handleMediaModal}\r\n              clearInput={clearInput}\r\n              handleColourPicker={handleColourPicker}\r\n              availableRoutes={props.availableRoutes}\r\n              />\r\n          }\r\n\r\n          <Input\r\n            inputtype=\"inputSelector\"\r\n            label={`${\r\n              midBannerHalfwidth\r\n                ? \"Middle Banner Image (Inside Banner)\"\r\n                : \"Middle Banner Image\"\r\n            }`}\r\n            name=\"midBanner\"\r\n            value={midBanner}\r\n            onChange={handleChange}\r\n            onClick={handleMediaModal}\r\n            clearInput={clearInput}\r\n          />\r\n          {midBanner && (\r\n            <BannerControls \r\n              pos={'mid'} \r\n              data={props.itemProps.content} \r\n              handleCheckbox={handleCheckbox}\r\n              handleChange={handleChange}\r\n              handleMediaModal={handleMediaModal}\r\n              clearInput={clearInput}\r\n              handleColourPicker={handleColourPicker}\r\n              availableRoutes={props.availableRoutes}\r\n            />\r\n          )}\r\n\r\n          <Input\r\n            inputtype=\"inputSelector\"\r\n            label={`${\r\n              bottomBannerHalfwidth\r\n                ? \"Bottom Banner Image (Inside Banner)\"\r\n                : \"Bottom Banner Image\"\r\n            }`}\r\n            name=\"bottomBanner\"\r\n            value={bottomBanner}\r\n            onChange={handleChange}\r\n            onClick={handleMediaModal}\r\n            clearInput={clearInput}\r\n          />\r\n          {bottomBanner && (\r\n            <BannerControls \r\n              pos={'bottom'} \r\n              data={props.itemProps.content} \r\n              handleCheckbox={handleCheckbox}\r\n              handleChange={handleChange}\r\n              handleMediaModal={handleMediaModal}\r\n              clearInput={clearInput}\r\n              handleColourPicker={handleColourPicker}\r\n              availableRoutes={props.availableRoutes}\r\n            />\r\n          )}\r\n\r\n          <Input\r\n            inputtype=\"textarea\"\r\n            label=\"Main Body Text\"\r\n            name=\"mainText\"\r\n            value={mainText}\r\n            onChange={handleChange}\r\n            helpKey={'mainText_help'}\r\n          />\r\n          <MainTextControls \r\n            data={props.itemProps.content} \r\n            handleCheckbox={handleCheckbox}\r\n            handleChange={handleChange}\r\n            handleMediaModal={handleMediaModal}\r\n            clearInput={clearInput}\r\n            handleColourPicker={handleColourPicker}\r\n            availableRoutes={props.availableRoutes}\r\n            positionArray={positionArray}\r\n          />\r\n\r\n          <Input\r\n            inputtype=\"select\"\r\n            label=\"Testimonials Plugin Position\"\r\n            name=\"testimonialsPosition\"\r\n            value={testimonialsPosition}\r\n            onChange={handleChange}\r\n            items={positionArray}\r\n          />\r\n          <TestimonialsControls \r\n            data={props.itemProps.content} \r\n            pageID={props.pageId}\r\n            handleCheckbox={handleCheckbox}\r\n            handleChange={handleChange}\r\n            handleMediaModal={handleMediaModal}\r\n            clearInput={clearInput}\r\n            handleColourPicker={handleColourPicker}\r\n            availableRoutes={props.availableRoutes}\r\n          />\r\n        </div>\r\n        <Preview>\r\n          <Dashboard\r\n            pageInfo={props.itemProps}\r\n            {...props}\r\n            template={props.template}\r\n            plugins={props.plugins}\r\n            overlayBlocker={true}\r\n            name={props.pageId}\r\n          />\r\n        </Preview>\r\n      </StyledTabItems>\r\n      <Flex justifyContent={\"space-between\"}>\r\n        <div>\r\n          <Flex justifyContent=\"flex-start\">\r\n            <Button margin=\"2px 5px 15px 20px\" onClick={handlesubmit}>\r\n              Update\r\n            </Button>\r\n            {props.isUpdating && <Spinner />}\r\n            {props.stateBackup && (\r\n              <Button margin=\"2px 20px 15px 20px\" onClick={props.cancelUpdate}>\r\n                Undo Changes\r\n              </Button>\r\n            )}\r\n          </Flex>\r\n        </div>\r\n        <DeletePageIcon>\r\n          <IconButton onClick={deletePage}>\r\n            <DeleteIcon fontSize=\"large\" />\r\n          </IconButton>\r\n        </DeletePageIcon>\r\n      </Flex>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst StyledTabItems = styled.div`\r\n  padding: 3vh;\r\n  display: grid;\r\n  grid-template-columns: 65% 35%;\r\n  grid-gap: 8px;\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: 100%;\r\n  }\r\n\r\n`;\r\n\r\nconst Preview = styled.div`\r\n  display: block;\r\n  zoom: 30%;\r\n  padding-top: 56px;\r\n  box-shadow: 2px 2px 2px;\r\n\r\n`;\r\n\r\nconst DeletePageIcon = styled.div`\r\n  padding: 5px;\r\n`;\r\n\r\nexport default TabItems;\r\n","import React, { Component } from \"react\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Toast from \"../../../components/UI/Toast\";\r\n\r\nimport TabItems from \"./TabItems.js/TabItems\";\r\n\r\nexport default class TabMenu extends Component {\r\n  state = {\r\n    value: 0,\r\n    disableTabText: \"\",\r\n    topBannerOptions: true,\r\n    midBannerOptions: true,\r\n    bottomBannerOptions: true\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.stateBackup !== prevProps.stateBackup) {\r\n      if (this.props.stateBackup) {\r\n        this.setState({\r\n          disableTabText:\r\n            \"You have made updates to this page, please save or undo your changes before selecting a new page\"\r\n        });\r\n      } else {\r\n        this.setState({ disableTabText: \"\" });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleChange = (event, value) => {\r\n    if (!this.props.stateBackup) {\r\n      this.setState({ value });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    const { navigationItems, parent, parentId } = this.props;\r\n    console.log(\"tabMenu props\", this.props);\r\n    let tabLabels = null;\r\n    let tabitems = null;\r\n\r\n    if (navigationItems !== null) {\r\n      tabLabels = Object.keys(navigationItems).map((key, index) => {\r\n        const item = navigationItems[key];\r\n        //passes the item title down to tabItems, which then runs tabs again if there is a drop down, and passes a parent value back\r\n        return (\r\n          <Tab\r\n            key={index}\r\n            label={\r\n              parent ? parent.props.children + \" - \" + item.title : item.title\r\n            }\r\n          />\r\n        );\r\n      });\r\n\r\n      tabitems = Object.keys(navigationItems).map((key, index) => {\r\n        return (\r\n          value === index && (\r\n            <TabItems\r\n              key={index}\r\n              pageId={key}\r\n              parentId={parentId || null}\r\n              itemProps={navigationItems[key]}\r\n              onChange={this.props.onChange}\r\n              handlePageDelete={this.props.handlePageDelete}\r\n              openMediaModal={this.props.openMediaModal}\r\n              updatePageSubmit={this.props.updatePageSubmit}\r\n              isUpdating={this.props.isUpdating}\r\n              cancelUpdate={this.props.cancelUpdate}\r\n              stateBackup={this.props.stateBackup}\r\n              availableRoutes={this.props.availableRoutes}\r\n              template={this.props.template}\r\n              plugins={this.props.plugins}\r\n            >\r\n              <h2>{navigationItems[key].title}</h2>\r\n            </TabItems>\r\n          )\r\n        );\r\n      });\r\n\r\n      // tabLabels = navigationItems.map( (item, index) => {\r\n      //     //passes the item title down to tabItems, which then runs tabs again if there is a drop down, and passes a parent value back\r\n      //     return <Tab key={index} label={ parent ? parent+' - '+item.title : item.title} />\r\n      // })\r\n      // tabitems = navigationItems.map( (item, index) => {\r\n      //     return( value === index && <TabItems key={index} itemProps={item}>{item.title }</TabItems> )\r\n      // })\r\n    }\r\n\r\n    if (tabitems === null && tabLabels === null) return <div />;\r\n    return (\r\n      <StyledTabs>\r\n        <Tooltip title={this.state.disableTabText}>\r\n          <AppBar position=\"static\">\r\n            <Tabs\r\n              value={value}\r\n              onChange={this.handleChange}\r\n              variant=\"scrollable\"\r\n              scrollButtons=\"auto\"\r\n            >\r\n              {tabLabels}\r\n            </Tabs>\r\n          </AppBar>\r\n        </Tooltip>\r\n        {tabitems}\r\n        {this.props.isError && (\r\n          <Toast message={this.props.isError} error={true} />\r\n        )}\r\n      </StyledTabs>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledTabs = styled.div`\r\n  > header {\r\n    background-color: ${props => props.theme.primaryBackGroundColour};\r\n    z-index: 20;\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport Input from \"../UI/Input\";\r\nimport Flex from \"../UI/Wrappers/Flex\";\r\nimport Button from \"../UI/Buttons/Button\";\r\nimport Spinner from \"../UI/Spinner\";\r\n\r\nexport class NewPageForm extends Component {\r\n  state = {\r\n    title: \"\",\r\n    checked: false,\r\n    selectVal: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.navigationItems !== null) {\r\n      // this.setState({selectVal: this.props.navigationItems[0].title})\r\n      let title = \"\";\r\n      for (var prop in this.props.navigationItems) {\r\n        title = this.props.navigationItems[prop].title;\r\n        break;\r\n      }\r\n\r\n      this.setState({ selectVal: title });\r\n    }\r\n  }\r\n\r\n  handleCheckbox = name => event => {\r\n    this.setState({ [name]: event.target.checked });\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ selectVal: event.target.value });\r\n  };\r\n\r\n  onInputChange = event => {\r\n    const { value, name } = event.target;\r\n    const scrubbedVal = value.replace(/[^\\w\\s]/gi, \"\");\r\n\r\n    this.setState({ [name]: scrubbedVal });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"newpageForm props\", this.props);\r\n    return (\r\n      <div>\r\n        <form>\r\n          <Input\r\n            inputtype=\"input\"\r\n            label=\"Page Title\"\r\n            name=\"title\"\r\n            value={this.state.title}\r\n            onChange={this.onInputChange}\r\n          />\r\n          {this.props.navigationItems !== null && (\r\n            <div>\r\n              <Input\r\n                inputtype=\"checkbox\"\r\n                sideLabel=\"Is this a dropdown SubPage\"\r\n                checked={this.state.checked}\r\n                handleChange={this.handleCheckbox}\r\n              />\r\n              <br />\r\n              {this.state.checked && (\r\n                <Input\r\n                  inputtype=\"select\"\r\n                  value={this.state.selectVal}\r\n                  label=\"Choose the parent page for this Subpage\"\r\n                  items={this.props.navigationItems}\r\n                  onChange={this.onChange}\r\n                />\r\n              )}\r\n            </div>\r\n          )}\r\n        </form>\r\n        <Flex justifyContent=\"flex-end\" margin=\"5px\">\r\n          <Button onClick={this.props.handleClose}>Cancel</Button>\r\n          <Button\r\n            onClick={() => this.props.handleSubmit(this.state)}\r\n            disabled={this.state.title === \"\" ? true : false}\r\n          >\r\n            Confirm\r\n          </Button>\r\n          {this.props.loading && <Spinner />}\r\n        </Flex>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//       //updateNewPageData: () => dispatch(actions.newPageData()),\r\n//   }\r\n// }\r\n\r\n//export default connect(null, mapDispatchToProps)(NewPageForm)\r\nexport default NewPageForm;\r\n","import React, { Component } from \"react\";\r\n\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nclass TitlebarGridList extends Component {\r\n  state = {\r\n    columns: 5,\r\n    spacing: 20,\r\n    activeIndex: null,\r\n    selectedValue: \"\",\r\n    selectedName: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n    this.handleResize();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.handleResize);\r\n  }\r\n\r\n  handleResize = () => {\r\n    const windowSize = window.innerWidth;\r\n    const columns = (windowSize > 768 && 5) || (windowSize <= 480 && 1) || 3;\r\n    const spacing = (windowSize > 768 && 20) || 8;\r\n\r\n    this.setState({\r\n      columns,\r\n      spacing\r\n    });\r\n  };\r\n\r\n  handleSelect = (event, index, tile) => {\r\n    this.props.selectedImage(index, tile);\r\n  };\r\n\r\n  render() {\r\n    const { tileData } = this.props;\r\n    if (!tileData || !tileData.length) return <div />;\r\n\r\n    return (\r\n      <StyledGrid>\r\n        <GridList\r\n          cellHeight={180}\r\n          className=\"gridList\"\r\n          cols={this.state.columns}\r\n          spacing={this.state.spacing}\r\n        >\r\n          <GridListTile\r\n            key=\"Subheader\"\r\n            cols={this.state.columns}\r\n            style={{ height: \"auto\" }}\r\n          >\r\n            <ListSubheader component=\"div\">\r\n              This is where your current websites images located.\r\n            </ListSubheader>\r\n          </GridListTile>\r\n          {tileData.map((tile, index) => {\r\n            const gridTileClass =\r\n              this.props.selectedIndex === index ? \"media active\" : \"media\";\r\n\r\n            return (\r\n              <GridListTile\r\n                key={tile.title}\r\n                className={gridTileClass}\r\n                onClick={e => this.handleSelect(e, index, tile)}\r\n              >\r\n                <img src={tile.img} alt={tile.title} />\r\n                <GridListTileBar\r\n                  title={tile.title}\r\n                  actionIcon={\r\n                    !this.props.isModal ? (\r\n                      <IconButton\r\n                        className=\"gridIcon\"\r\n                        onClick={() =>\r\n                          this.props.deleteImage(tile.img, tile.title)\r\n                        }\r\n                      >\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    ) : (\r\n                      false\r\n                    )\r\n                  }\r\n                />\r\n              </GridListTile>\r\n            );\r\n          })}\r\n        </GridList>\r\n      </StyledGrid>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledGrid = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  /* justify-content: space-around; */\r\n  overflow: hidden;\r\n  margin: 20px 0;\r\n  padding: 10px;\r\n\r\n  .gridlist {\r\n    width: 100%;\r\n    height: 450px;\r\n  }\r\n\r\n  .media {\r\n    padding: 3px;\r\n    cursor: pointer;\r\n    -webkit-transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\r\n    -moz-transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\r\n    -ms-transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\r\n    -o-transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\r\n    transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\r\n  }\r\n\r\n  .media.active {\r\n    border: 1px solid #09c;\r\n    border-radius: 5px;\r\n    box-shadow: 1px 1px 7px rgba(0, 200, 204, 0.7);\r\n    outline: none;\r\n  }\r\n\r\n  .gridIcon {\r\n    color: rgba(255, 255, 255, 0.54);\r\n  }\r\n`;\r\n\r\nexport default TitlebarGridList;\r\n","import React, { Component } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nimport \"firebase/storage\";\r\n\r\nimport classNames from \"classnames\";\r\n\r\nimport styled from \"styled-components\";\r\nimport Button from \"../../../components/UI/Buttons/Button\";\r\nimport Input from \"../../../components/UI/Input\";\r\nimport Flex from \"../../../components/UI/Wrappers/Flex\";\r\nimport Box from \"../../../components/UI/Wrappers/Box\";\r\nimport Modal from \"../../../components/UI/Modal\";\r\nimport Spinner from \"../../../components/UI/Spinner\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ImgGridList from \"./ImgGridList\";\r\n\r\nclass Media extends Component {\r\n  state = {\r\n    uploadOpen: false,\r\n    error: null,\r\n    customURL: false,\r\n    customURLtext: \"\",\r\n    activeIndex: null,\r\n    selectedValue: \"\",\r\n    selectedName: \"\",\r\n    deleteImgOpen: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"mounted\");\r\n    this.getImageUrls();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.currentImages === null) return;\r\n\r\n    if (\r\n      this.props.currentImages !== prevProps.currentImages ||\r\n      this.props.isAuthenticated !== prevProps.isAuthenticated\r\n    ) {\r\n      this.getImageUrls();\r\n    }\r\n  }\r\n\r\n  getImageUrls = () => {\r\n    const that = this;\r\n    let imageContainer = [];\r\n    let imageCount = Object.keys(this.props.currentImages).length;\r\n    let returnedCount = 0;\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n\r\n    let storageRef = firebase.storage().ref();\r\n\r\n    Object.keys(this.props.currentImages).map((key, i) => {\r\n      const img = this.props.currentImages[key];\r\n      return storageRef\r\n        .child(`${siteName}/${img}`)\r\n        .getDownloadURL()\r\n        .then(url => {\r\n          imageContainer = [...imageContainer, { title: img, img: url, key }];\r\n          returnedCount++;\r\n\r\n          if (imageCount === returnedCount) {\r\n            that.props.setMediaImages(imageContainer);\r\n          }\r\n        })\r\n        .catch(error => {\r\n          // Handle any errors\r\n          console.log(error);\r\n        });\r\n    });\r\n  };\r\n\r\n  onDrop = (acceptedFiles, rejectedFiles) => {\r\n    // Do something with files\r\n    console.log(\"accepted\", acceptedFiles);\r\n    console.log(\"rejected\", rejectedFiles);\r\n    if (rejectedFiles.length !== 0) {\r\n      this.setState({ error: \"Rejected upload, incompatable file detected\" });\r\n      return;\r\n    }\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n    const user = firebase.auth().currentUser;\r\n\r\n    if (user) {\r\n      console.log(\"user is signed in\");\r\n      const file = acceptedFiles[0];\r\n      if (this.checkFileAlreadyExists(file)) {\r\n        this.setState({\r\n          error: `${\r\n            file.name\r\n          } already exists, please remove the old image first`\r\n        });\r\n        return;\r\n      }\r\n      firebase\r\n        .storage()\r\n        .ref()\r\n        .child(`${siteName}/${file.name}`)\r\n        .put(file)\r\n        .then(snapshot => {\r\n          console.log(\"Uploaded a blob or file!\");\r\n          console.log(snapshot);\r\n          this.addImageRefToDb(file);\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      // No user is signed in.\r\n      console.log(\" No user is signed in.\");\r\n      this.props.isTimedOut();\r\n    }\r\n  };\r\n\r\n  checkFileAlreadyExists = file => {\r\n    if (this.props.currentImages === null) return;\r\n\r\n    \r\n\r\n    const findImageRef = Object.keys(this.props.currentImages).filter(\r\n      (key, i) => {\r\n        const img = this.props.currentImages[key];\r\n        return img === file.name;\r\n      }\r\n    );\r\n\r\n    return !findImageRef.length ? false : true;\r\n  };\r\n  \r\n\r\n  addImageRefToDb = file => {\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n\r\n    var newPostKey = firebase\r\n      .database()\r\n      .ref()\r\n      .child(`${siteName}/site/images`)\r\n      .push().key;\r\n    var updates = { [newPostKey]: file.name };\r\n    const that = this;\r\n\r\n    return firebase\r\n      .database()\r\n      .ref()\r\n      .child(`${siteName}/site/images`)\r\n      .update(updates, function(error) {\r\n        if (error) {\r\n          // The write failed...\r\n          console.log(\"image ref in db write failed...\", error);\r\n        } else {\r\n          // Data saved successfully!\r\n          console.log(\"image ref in db saved successfully\");\r\n          that.props.refreshState();\r\n        }\r\n      });\r\n  };\r\n\r\n  selectedImage = (index, tile) => {\r\n    this.setState({\r\n      customURLtext: \"\",\r\n      activeIndex: index,\r\n      selectedValue: tile.img,\r\n      selectedName: tile.title\r\n    });\r\n  };\r\n\r\n  handleCustomURL = event => {\r\n    this.setState({\r\n      customURLtext: event.target.value,\r\n      activeIndex: null,\r\n      selectedValue: \"\",\r\n      selectedName: \"\"\r\n    });\r\n  };\r\n\r\n  confirmImage = () => {\r\n    const { customURLtext, selectedValue } = this.state;\r\n    const { tabItemReference } = this.props;\r\n    let image = customURLtext ? customURLtext : selectedValue;\r\n\r\n    this.props.onChangePageState(\r\n      { name: tabItemReference[0].name, value: image },\r\n      tabItemReference[1],\r\n      tabItemReference[2]\r\n    );\r\n    this.props.handleClose();\r\n  };\r\n\r\n  deleteImage = (imgUrl, name) => {\r\n    console.log(imgUrl, name);\r\n    this.setState({ deleteImgOpen: true });\r\n  };\r\n\r\n  confirmDelete = () => {\r\n    console.log(this.state, this.props);\r\n    const that = this;\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n\r\n    const img = this.props.imageURLs.find(\r\n      img => img.title === this.state.selectedName\r\n    );\r\n    let storageRef = firebase.storage().ref();\r\n\r\n    console.log(\"pre delete\");\r\n    firebase\r\n      .database()\r\n      .ref()\r\n      .child(`${siteName}/site/images/${img.key}`)\r\n      .remove()\r\n      .then(() => {\r\n        console.log(\"db delete succeeded!\");\r\n        storageRef\r\n          .child(`${siteName}/${img.title}`)\r\n          .delete()\r\n          .then(function() {\r\n            // File deleted successfully\r\n            console.log(\"storage img deleted\");\r\n            that.setState({ deleteImgOpen: false });\r\n            that.props.refreshState();\r\n          })\r\n          .catch(function(error) {\r\n            // Uh-oh, an error occurred!\r\n            console.log(\"storage error\", error);\r\n          });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  handleUploadOpen = () => {\r\n    this.setState({ uploadOpen: !this.state.uploadOpen });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"media props\", this.props);\r\n    const {\r\n      error,\r\n      uploadOpen,\r\n      customURL,\r\n      activeIndex,\r\n      customURLtext,\r\n      selectedName,\r\n      selectedValue\r\n    } = this.state;\r\n    const { imageURLs, currentImages } = this.props;\r\n\r\n    let dropZone = null;\r\n    let mediaTemplate = null;\r\n    let noMediaMessage = null;\r\n\r\n    if (imageURLs.length === 0 && currentImages) {\r\n      noMediaMessage = (\r\n        <div>\r\n          <p>\r\n            <i>\r\n              Loading media, if nothing appears after ten seconds. Please\r\n              refresh the page{\" \"}\r\n            </i>\r\n          </p>\r\n          <Spinner />\r\n        </div>\r\n      );\r\n    } else if (currentImages === null) {\r\n      noMediaMessage = (\r\n        <div>\r\n          <p>\r\n            <i>\r\n              Here is where you can add images to your website, Click upload\r\n              media to create your media library\r\n            </i>\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (uploadOpen && !this.props.isModal) {\r\n      dropZone = (\r\n        <Dropzone onDrop={this.onDrop} multiple={false} accept=\"image/*\">\r\n          {({ getRootProps, getInputProps, isDragActive }) => {\r\n            return (\r\n              <StyledDropArea\r\n                {...getRootProps()}\r\n                className={classNames(\"dropzone\", {\r\n                  \"dropzone--isActive\": isDragActive\r\n                })}\r\n              >\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                  <p>Drop files here...</p>\r\n                ) : (\r\n                  <p>\r\n                    Try dropping some files here, or click to select files to\r\n                    upload.\r\n                  </p>\r\n                )}\r\n              </StyledDropArea>\r\n            );\r\n          }}\r\n        </Dropzone>\r\n      );\r\n    }\r\n\r\n    if (!this.props.isModal) {\r\n      mediaTemplate = (\r\n        <div>\r\n          {noMediaMessage}\r\n          <Button onClick={this.handleUploadOpen}>\r\n            {uploadOpen ? \"Close DropZone\" : \"Upload Media\"}\r\n          </Button>\r\n          {dropZone}\r\n          {error && <div>{error}</div>}\r\n          <Paper elevation={7}>\r\n            <ImgGridList\r\n              tileData={this.props.imageURLs}\r\n              isModal={false}\r\n              selectedIndex={activeIndex}\r\n              selectedImage={this.selectedImage}\r\n              deleteImage={this.deleteImage}\r\n            />\r\n          </Paper>\r\n        </div>\r\n      );\r\n    } else {\r\n      const selectedLabel = `Current Selection:  ${selectedName}`;\r\n      mediaTemplate = (\r\n        <IsMediaModal>\r\n          {noMediaMessage}\r\n          <Flex mobile>\r\n            <Box opacity={customURL}>\r\n              <Button\r\n                onClick={() => {\r\n                  this.setState({ customURL: false });\r\n                }}\r\n              >\r\n                Use Media Library\r\n              </Button>\r\n            </Box>\r\n            <h2>OR ..</h2>\r\n            <Box opacity={!customURL}>\r\n              <Button\r\n                onClick={() => {\r\n                  this.setState({ customURL: true });\r\n                }}\r\n              >\r\n                {\" \"}\r\n                {!customURL ? \"Use\" : \"Close\"} custom URL location?\r\n              </Button>\r\n            </Box>\r\n          </Flex>\r\n          {/* <Fade in={customURL}> */}\r\n          {customURL ? (\r\n            <Input\r\n              inputtype=\"input\"\r\n              label=\"If you want to use an image stored elsewhere, enter the Url address below\"\r\n              value={customURLtext}\r\n              onChange={this.handleCustomURL}\r\n            />\r\n          ) : (\r\n            <div>\r\n              <Paper elevation={5}>\r\n                <ImgGridList\r\n                  tileData={this.props.imageURLs}\r\n                  isModal={true}\r\n                  selectedIndex={activeIndex}\r\n                  selectedImage={this.selectedImage}\r\n                />\r\n              </Paper>\r\n              <Input\r\n                inputtype=\"input\"\r\n                label={`${\r\n                  selectedValue ? selectedLabel : \"Select Media Image URL above\"\r\n                }`}\r\n                value={selectedValue}\r\n                disabled={true}\r\n                placeholder=\"No Media image selected\"\r\n              />\r\n            </div>\r\n          )}\r\n          {/* </Fade> */}\r\n          <Divider />\r\n          <br />\r\n          <Flex mobile>\r\n            <Button onClick={this.props.handleClose}>Cancel</Button>\r\n            <Button onClick={this.confirmImage}>Confirm Image</Button>\r\n          </Flex>\r\n          <br />\r\n        </IsMediaModal>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {mediaTemplate}\r\n        <Modal\r\n          open={this.state.deleteImgOpen}\r\n          handleClose={() => this.setState({ deleteImgOpen: false })}\r\n          title=\"Delete image\"\r\n          description={`Are you sure you would like to delete the image ${\r\n            this.state.selectedName\r\n          }. \\n Please note that anywhere this image is used on the website will no longer work once the image is deleted.`}\r\n        >\r\n          <Flex>\r\n            <Button onClick={this.confirmDelete}>Confirm Delete</Button>\r\n            <Button onClick={() => this.setState({ deleteImgOpen: false })}>\r\n              Cancel\r\n            </Button>\r\n          </Flex>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledDropArea = styled.div`\r\n  border-style: dotted;\r\n  padding: 5px 20px;\r\n  margin: 20px 5px;\r\n  cursor: pointer;\r\n\r\n  /* desktop */\r\n  @media (min-width: 500px) {\r\n    min-width: 455px;\r\n  }\r\n`;\r\n\r\nconst IsMediaModal = styled.div`\r\n  margin-top: -40px;\r\n`;\r\n\r\nexport default Media;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Input from \"../../../components/UI/Input\";\r\nimport Button from \"../../../components/UI/Buttons/Button\";\r\nimport Flex from \"../../../components/UI/Wrappers/Flex\";\r\nimport Grid from \"../../../components/UI/Wrappers/Grid\";\r\nimport Spinner from \"../../../components/UI/Spinner\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nclass Template extends Component {\r\n  handleChange = event => {\r\n    event.preventDefault();\r\n    this.props.changeTemplateState(event.target, \"template\", null);\r\n  };\r\n\r\n  handlesubmit = event => {\r\n    event.preventDefault();\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n\r\n    const url = `/${siteName}/site/template`;\r\n    this.props.templateChangeSubmit(url, this.props.template);\r\n  };\r\n\r\n  handleCheckbox = check => event => {\r\n    console.log(check, event.target.checked);\r\n    const newevent = {\r\n      name: event.target.name,\r\n      value: event.target.checked\r\n    };\r\n    this.props.changeTemplateState(newevent, \"template\", null);\r\n  };\r\n\r\n  handleMediaModal = event => {\r\n    event.preventDefault();\r\n    this.props.openMediaModal(event.target, \"template\", null);\r\n  };\r\n\r\n  clearInput = inputName => {\r\n    const event = { name: inputName, value: \"\" };\r\n    this.props.changeTemplateState(event, \"template\", null);\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.template) return <div />;\r\n    //console.log('templateProps', this.props)\r\n    const buttonStyle = [{ value: \"contained\" }, { value: \"outlined\" }];\r\n    const {\r\n      navButtons,\r\n      siteButtons,\r\n      transparentHeader,\r\n      navLightTheme,\r\n      siteLogo,\r\n      version\r\n    } = this.props.template;\r\n\r\n    return (\r\n      <StyledTemplate>\r\n        <Flex mobile>\r\n          <Input\r\n            inputtype=\"checkbox\"\r\n            sideLabel=\"Is the header toolbar transparent\"\r\n            name=\"transparentHeader\"\r\n            checked={transparentHeader}\r\n            handleChange={this.handleCheckbox}\r\n          />\r\n          <Input\r\n            inputtype=\"checkbox\"\r\n            sideLabel=\"Use Light theme for navigation Bar\"\r\n            name=\"navLightTheme\"\r\n            checked={navLightTheme}\r\n            handleChange={this.handleCheckbox}\r\n          />\r\n        </Flex>\r\n        <Input\r\n          inputtype=\"inputSelector\"\r\n          label=\"Website Logo\"\r\n          name=\"siteLogo\"\r\n          value={siteLogo}\r\n          onChange={this.handleChange}\r\n          onClick={this.handleMediaModal}\r\n          clearInput={this.clearInput}\r\n        />\r\n        <br />\r\n        <Grid cols=\"25% 25%\" colsLarge={\"35% 35%\"} colsMed={\"50% 50%\"} colsSmall={'100%'}>\r\n          <Input\r\n            inputtype=\"select\"\r\n            label=\"Header Navigation button style\"\r\n            name=\"navButtons\"\r\n            value={navButtons}\r\n            items={buttonStyle}\r\n            onChange={this.handleChange}\r\n          />\r\n          <Input\r\n            inputtype=\"select\"\r\n            label=\"Webpage button style\"\r\n            name=\"siteButtons\"\r\n            value={siteButtons}\r\n            items={buttonStyle}\r\n            onChange={this.handleChange}\r\n          />\r\n          <Button variant={navButtons}>\r\n            {navButtons === \"contained\" ? \"Contained Style\" : \"Outlined Style\"}\r\n          </Button>\r\n          <Button variant={siteButtons}>\r\n            {siteButtons === \"contained\" ? \"Contained Style\" : \"Outlined Style\"}\r\n          </Button>\r\n        </Grid>\r\n        <br />\r\n        <hr />\r\n        <br />\r\n        <Flex justifyContent=\"flex-start\">\r\n          <Button margin=\"2px 5px 15px 20px\" onClick={this.handlesubmit}>\r\n            Update\r\n          </Button>\r\n          {this.props.isUpdating && <Spinner />}\r\n          {this.props.stateBackup && (\r\n            <Button\r\n              margin=\"2px 20px 15px 20px\"\r\n              onClick={this.props.cancelUpdate}\r\n            >\r\n              Undo Changes\r\n            </Button>\r\n          )}\r\n        </Flex>\r\n      </StyledTemplate>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledTemplate = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nexport default Template;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Input from \"../../../components/UI/Input\";\r\nimport Button from \"../../../components/UI/Buttons/Button\";\r\nimport Flex from \"../../../components/UI/Wrappers/Flex\";\r\nimport Grid from \"../../../components/UI/Wrappers/Grid\";\r\nimport Box from \"../../../components/UI/Wrappers/Box\";\r\nimport Spinner from \"../../../components/UI/Spinner\";\r\nimport Minimizer from \"../../../components/UI/Wrappers/Minimizer\";\r\n\r\nimport Dashboard from \"../../Dashboard/Dashboard\";\r\n\r\nimport BannerControls from '../../../components/admin-controls/BannerControls';\r\nimport MainTextControls from '../../../components/admin-controls/MainTextControls';\r\nimport TestimonialsControls from '../../../components/admin-controls/TestimonialsControls';\r\nclass Homepage extends Component {\r\n  state = {\r\n    previewOpen: false\r\n  };\r\n\r\n  handleChange = event => {\r\n    event.preventDefault();\r\n    this.props.changeHomepageState(event.target, \"home\", null);\r\n  };\r\n\r\n  handlesubmit = event => {\r\n    event.preventDefault();\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n\r\n    const url = `/${siteName}/site/home/content`;\r\n    this.props.homepageChangeSubmit(url, this.props.homePage.content);\r\n  };\r\n\r\n  handleCheckbox = check => event => {\r\n    console.log(check, event.target.checked);\r\n    const newevent = {\r\n      name: event.target.name,\r\n      value: event.target.checked\r\n    };\r\n    this.props.changeHomepageState(newevent, \"home\", null);\r\n  };\r\n\r\n  handleMediaModal = event => {\r\n    event.preventDefault();\r\n    this.props.openMediaModal(event.target, \"home\", null);\r\n  };\r\n\r\n  handleColourPicker = event => {\r\n    this.props.changeHomepageState(event.target, \"home\", null);\r\n  };\r\n\r\n  clearInput = inputName => {\r\n    const event = { name: inputName, value: \"\" };\r\n    this.props.changeHomepageState(event, \"home\", null);\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.homePage) return <div />;\r\n\r\n    const {\r\n      topBanner,\r\n      topBannerHalfwidth,\r\n      midBanner,\r\n      midBannerHalfwidth,\r\n      bottomBanner,\r\n      bottomBannerHalfwidth,\r\n      mainText,\r\n      testimonialsPosition\r\n    } = this.props.homePage.content;\r\n    console.log(\"Homepage Props\", this.props);\r\n\r\n    const positionArray = [\r\n      { value: \"Top\" },\r\n      { value: \"Middle\" },\r\n      { value: \"Bottom\" }\r\n    ];\r\n\r\n    return (\r\n      <div className=\"fullwidth\">\r\n        <StyledHomePage>\r\n          <div>\r\n            <Input\r\n              inputtype=\"inputSelector\"\r\n              label={`${\r\n                topBannerHalfwidth\r\n                  ? \"Top Banner Image (Inside Banner)\"\r\n                  : \"Top Banner Image\"\r\n              }`}\r\n              name=\"topBanner\"\r\n              value={topBanner}\r\n              onChange={this.handleChange}\r\n              onClick={this.handleMediaModal}\r\n              clearInput={this.clearInput}\r\n            />\r\n            {topBanner && (\r\n              <BannerControls \r\n                pos={'top'} \r\n                data={this.props.homePage.content} \r\n                handleCheckbox={this.handleCheckbox}\r\n                handleChange={this.handleChange}\r\n                handleMediaModal={this.handleMediaModal}\r\n                clearInput={this.clearInput}\r\n                handleColourPicker={this.handleColourPicker}\r\n                availableRoutes={this.props.availableRoutes}\r\n              />\r\n            )}\r\n\r\n            <Input\r\n              inputtype=\"inputSelector\"\r\n              label={`${\r\n                midBannerHalfwidth\r\n                  ? \"Middle Banner Image (Inside Banner)\"\r\n                  : \"Middle Banner Image\"\r\n              }`}\r\n              name=\"midBanner\"\r\n              value={midBanner}\r\n              onChange={this.handleChange}\r\n              onClick={this.handleMediaModal}\r\n              clearInput={this.clearInput}\r\n            />\r\n            {midBanner && (\r\n              <BannerControls \r\n                pos={'mid'} \r\n                data={this.props.homePage.content} \r\n                handleCheckbox={this.handleCheckbox}\r\n                handleChange={this.handleChange}\r\n                handleMediaModal={this.handleMediaModal}\r\n                clearInput={this.clearInput}\r\n                handleColourPicker={this.handleColourPicker}\r\n                availableRoutes={this.props.availableRoutes}\r\n              />\r\n            )}\r\n\r\n            <Input\r\n              inputtype=\"inputSelector\"\r\n              label={`${\r\n                bottomBannerHalfwidth\r\n                  ? \"Bottom Banner Image (Inside Banner)\"\r\n                  : \"Bottom Banner Image\"\r\n              }`}\r\n              name=\"bottomBanner\"\r\n              value={bottomBanner}\r\n              onChange={this.handleChange}\r\n              onClick={this.handleMediaModal}\r\n              clearInput={this.clearInput}\r\n            />\r\n            {bottomBanner && (\r\n              <BannerControls \r\n                pos={'bottom'} \r\n                data={this.props.homePage.content} \r\n                handleCheckbox={this.handleCheckbox}\r\n                handleChange={this.handleChange}\r\n                handleMediaModal={this.handleMediaModal}\r\n                clearInput={this.clearInput}\r\n                handleColourPicker={this.handleColourPicker}\r\n                availableRoutes={this.props.availableRoutes}\r\n              />\r\n            )}\r\n\r\n            <Input\r\n              inputtype=\"textarea\"\r\n              label=\"Main Body Text\"\r\n              name=\"mainText\"\r\n              value={mainText}\r\n              onChange={this.handleChange}\r\n              helpKey={'mainText_help'}\r\n            />\r\n            <MainTextControls \r\n                data={this.props.homePage.content} \r\n                pageID={'home'}\r\n                handleCheckbox={this.handleCheckbox}\r\n                handleChange={this.handleChange}\r\n                handleMediaModal={this.handleMediaModal}\r\n                clearInput={this.clearInput}\r\n                handleColourPicker={this.handleColourPicker}\r\n                availableRoutes={this.props.availableRoutes}\r\n                positionArray={positionArray}\r\n            />\r\n\r\n            <Input\r\n              inputtype=\"select\"\r\n              label=\"Testimonials Plugin Position\"\r\n              name=\"testimonialsPosition\"\r\n              value={testimonialsPosition}\r\n              onChange={this.handleChange}\r\n              items={positionArray}\r\n            />\r\n            <TestimonialsControls \r\n                data={this.props.homePage.content} \r\n                pageID={'home'}\r\n                handleCheckbox={this.handleCheckbox}\r\n                handleChange={this.handleChange}\r\n                handleMediaModal={this.handleMediaModal}\r\n                clearInput={this.clearInput}\r\n                handleColourPicker={this.handleColourPicker}\r\n                availableRoutes={this.props.availableRoutes}\r\n            />\r\n\r\n          </div>\r\n          <Preview>\r\n            <Dashboard\r\n              pageInfo={this.props.homePage}\r\n              {...this.props}\r\n              template={this.props.template}\r\n              overlayBlocker={true}\r\n              name={'Home'}\r\n            />\r\n          </Preview>\r\n        </StyledHomePage>\r\n        <Flex justifyContent=\"flex-start\" mobile>\r\n          <Button \r\n            margin=\"2px 5px 15px 20px\" \r\n            onClick={this.handlesubmit} \r\n            mobileMargin={'15px'}\r\n          >\r\n            Update\r\n          </Button>\r\n          {this.props.isUpdating && <Spinner />}\r\n          {this.props.stateBackup && (\r\n            <Button\r\n              margin=\"2px 20px 15px 20px\"\r\n              onClick={this.props.cancelUpdate}\r\n              mobileMargin={'0'}\r\n            >\r\n              Undo Changes\r\n            </Button>\r\n          )}\r\n        </Flex>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Preview = styled.div`\r\n  display: block;\r\n  zoom: 30%;\r\n  padding-top: 56px;\r\n  box-shadow: 2px 2px 2px;\r\n`;\r\n\r\nconst StyledHomePage = styled.div`\r\n  padding: 3vh;\r\n  display: grid;\r\n  grid-gap: 8px;\r\n  grid-template-columns: 65% 35%;\r\n\r\n  @media (max-width: 500px) {\r\n    grid-template-columns: 100%;\r\n    padding: 0;\r\n  }\r\n\r\n`;\r\n\r\nexport default Homepage;\r\n","import React from \"react\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250\r\n    }\r\n  }\r\n};\r\n\r\nclass MultiSelect extends React.Component {\r\n  state = {\r\n    name: []\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ name: event.target.value });\r\n    if (this.props.handleChange) {\r\n      this.props.handleChange(event);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { label, items, name, value, margin, width } = this.props;\r\n\r\n    return (\r\n      <StyledSelect margin={margin} width={width}>\r\n        <FormControl>\r\n          <InputLabel htmlFor=\"select-multiple-chip\">{label}</InputLabel>\r\n          <Select\r\n            multiple\r\n            value={value || this.state.name}\r\n            onChange={this.handleChange}\r\n            input={<Input id=\"select-multiple-chip\" />}\r\n            name={name}\r\n            renderValue={selected => (\r\n              <div className={\"chips\"}>\r\n                {selected.map(value => (\r\n                  <Chip key={value} label={value} className={\"chip\"} />\r\n                ))}\r\n              </div>\r\n            )}\r\n            MenuProps={MenuProps}\r\n          >\r\n            {items.map(name => (\r\n              <MenuItem key={name} value={name}>\r\n                {name}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </StyledSelect>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledSelect = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;    \r\n    margin: ${props => props.margin || \"8px\"};\r\n\r\n    div {\r\n      /* margin: ${props => props.margin || \"8px\"}; */\r\n      width: ${props => props.width || \"400px\"};\r\n      /* min-width: ${props => props.minwidth || \"200px\"}; */\r\n      max-width: ${props => props.minwidth || \"450px\"};\r\n\r\n      .chips {\r\n        min-width:auto;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        \r\n\r\n        .chip{\r\n          margin: 2px;\r\n          flex-wrap: wrap;\r\n          width: auto;\r\n        }\r\n\r\n      }\r\n      \r\n      @media(max-width: 500px){\r\n        width: ${props => props.mobile || '175px'};\r\n      }\r\n    }\r\n\r\n   \r\n\r\n`;\r\n\r\nexport default MultiSelect;\r\n","import React from \"react\";\r\nimport Input from \"../../../../components/UI/Input\";\r\nimport Minimizer from \"../../../../components/UI/Wrappers/Minimizer\";\r\nimport Flex from \"../../../../components/UI/Wrappers/Flex\";\r\n\r\nimport MultiSelect from \"../../../../components/UI/MultiSelect\";\r\n\r\nconst ContactUsPlugin = props => {\r\n  if (!props.plugin) return <div />;\r\n\r\n  const { contactUsActive, contactUsPages, contactUsEmail, contactUsSubjectStrict, contactUsSubjectSelections } = props.plugin;\r\n  console.log(\"contact us settings props\", props);\r\n  return (\r\n    <div>\r\n      <Flex>\r\n        <Input\r\n          inputtype=\"checkbox\"\r\n          sideLabel=\"Contact Us Plugin\"\r\n          parentObj={props.parentObj}\r\n          name=\"contactUsActive\"\r\n          checked={contactUsActive}\r\n          handleChange={props.handleCheckbox}\r\n        />\r\n        {contactUsActive && (\r\n          <MultiSelect\r\n            label=\"Select the pages where this plugin is available\"\r\n            items={props.availableRoutes}\r\n            name=\"contactUsPages\"\r\n            value={contactUsPages}\r\n            handleChange={props.handleChange}\r\n            margin={\"0 10px 20px 15px\"}\r\n          />\r\n        )}\r\n      </Flex>\r\n\r\n      {contactUsActive && (\r\n        <Minimizer padding={\"20px\"}>\r\n          <div>\r\n            <Input\r\n              inputtype=\"input\"\r\n              label=\"Enter Business email where contact requests are received\"\r\n              parentObj={props.parentObj}\r\n              name=\"contactUsEmail\"\r\n              value={contactUsEmail}\r\n              onChange={props.handleChange}\r\n            />\r\n            \r\n            <Input\r\n              inputtype=\"checkbox\"\r\n              sideLabel=\"Give email subject options\"\r\n              parentObj={props.parentObj}\r\n              name=\"contactUsSubjectStrict\"\r\n              checked={contactUsSubjectStrict}\r\n              handleChange={props.handleCheckbox}\r\n            />\r\n            {contactUsSubjectStrict &&\r\n              <Input\r\n                inputtype=\"input\"\r\n                label=\"Enter subject selections seperated by a comma\"\r\n                parentObj={props.parentObj}\r\n                name=\"contactUsSubjectSelections\"\r\n                value={contactUsSubjectSelections}\r\n                onChange={props.handleChange}\r\n              />\r\n            }\r\n\r\n          </div>\r\n        </Minimizer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactUsPlugin;\r\n","import React from \"react\";\r\nimport Input from \"../../../../components/UI/Input\";\r\nimport Minimizer from \"../../../../components/UI/Wrappers/Minimizer\";\r\nimport Flex from \"../../../../components/UI/Wrappers/Flex\";\r\n\r\nimport MultiSelect from \"../../../../components/UI/MultiSelect\";\r\n\r\nconst BookingPlugin = props => {\r\n    if (!props.plugin) return <div />;\r\n\r\n    const { \r\n        bookingActive,\r\n        bookingPages, \r\n        bookingEmail, \r\n        bookingForm, \r\n        bookingCalendarID, \r\n        bookingApiKey, \r\n        bookingTimeSlotsAvailable, \r\n        bookingTimeSlots, \r\n        bookingGetCalandarAdvance, \r\n        bookingSessions, \r\n        bookingSubjectStrict,\r\n        bookingSubjectSelections\r\n      } = props.plugin;\r\n\r\n    console.log(\"booking settings props\", props);\r\n\r\n    return (\r\n        <div>\r\n            <Flex>\r\n                <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Booking Plugin\"\r\n                    parentObj={props.parentObj}\r\n                    name=\"bookingActive\"\r\n                    checked={bookingActive}\r\n                    handleChange={props.handleCheckbox}\r\n                />\r\n                {bookingActive && (\r\n                    <MultiSelect\r\n                        label=\"Select the pages where this plugin is available\"\r\n                        items={props.availableRoutes}\r\n                        name=\"bookingPages\"\r\n                        value={bookingPages}\r\n                        handleChange={props.handleChange}\r\n                        margin={\"0 10px 20px 15px\"}\r\n                    />\r\n                )}\r\n            </Flex>\r\n\r\n            {bookingActive && (\r\n                <Minimizer emptyHeight={\"200px\"} padding={\"20px\"}>\r\n                    <div>\r\n                        <Input\r\n                            inputtype=\"input\"\r\n                            label=\"Enter Business email where bookings are received\"\r\n                            parentObj={props.parentObj}\r\n                            name=\"bookingEmail\"\r\n                            value={bookingEmail}\r\n                            onChange={props.handleChange}\r\n                        />\r\n                        <Input\r\n                            inputtype=\"input\"\r\n                            label=\"Google Calendar Id\"\r\n                            parentObj={props.parentObj}\r\n                            name=\"bookingCalendarID\"\r\n                            value={bookingCalendarID}\r\n                            onChange={props.handleChange}\r\n                            helpKey={'bookingCalendarID_Help'}\r\n                        />\r\n                        <Input\r\n                            inputtype=\"input\"\r\n                            label=\"Google Calendar Api Key\"\r\n                            parentObj={props.parentObj}\r\n                            name=\"bookingApiKey\"\r\n                            value={bookingApiKey}\r\n                            onChange={props.handleChange}\r\n                            helpKey={'bookingCalendarAPI_Help'}\r\n                        />\r\n                        <br/>\r\n                        <h2>Booking Calandar options</h2>\r\n                        <Input\r\n                            inputtype=\"checkbox\"\r\n                            sideLabel=\"Timeslots available (leave unticked if booking times do not repeat)\"\r\n                            parentObj={props.parentObj}\r\n                            name=\"bookingTimeSlotsAvailable\"\r\n                            checked={bookingTimeSlotsAvailable}\r\n                            handleChange={props.handleCheckbox}\r\n                        />\r\n                        { bookingTimeSlotsAvailable &&\r\n                        <Input\r\n                            inputtype=\"input\"\r\n                            label=\"Enter the timeslots when events can be booked on a daily bases\"\r\n                            parentObj={props.parentObj}\r\n                            name=\"bookingTimeSlots\"\r\n                            value={bookingTimeSlots}\r\n                            placeholder={'eg 24 hour format..  09:30-10:00, 10:00-10:30, 14:30-15:00'}\r\n                            onChange={props.handleChange}\r\n                        />\r\n                        }\r\n                        <Input\r\n                            inputtype=\"select\"\r\n                            label=\"Select how far in the future customers can book\" \r\n                            value={bookingGetCalandarAdvance}\r\n                            name=\"bookingGetCalandarAdvance\"\r\n                            items={[\r\n                                {value : \"1 month\"},\r\n                                {value : \"2 months\"},\r\n                                {value : \"3 months\"},\r\n                                {value : \"6 months\"},\r\n                                {value : \"9 months\"},\r\n                                {value : \"12 months\"},                           \r\n                            ]}\r\n                            onChange={props.handleChange}\r\n                        />\r\n                        <Input\r\n                            inputtype=\"input\"\r\n                            type=\"number\"\r\n                            label={bookingTimeSlotsAvailable ? 'Booking sessions available per timeslot' : 'Booking sessions available per day'}\r\n                            parentObj={props.parentObj}\r\n                            name=\"bookingSessions\"\r\n                            value={bookingSessions}\r\n                            placeholder={bookingTimeSlotsAvailable ? 'eg. Entering \"6\" will allow 6 bookings per timeslot' : 'eg. Entering \"6\" will allow 6 bookings per day'}\r\n                            onChange={props.handleChange}\r\n                        />\r\n                        <h2>Booking Email Options</h2>\r\n                        <Input\r\n                            inputtype=\"checkbox\"\r\n                            sideLabel=\"Give email subject options\"\r\n                            parentObj={props.parentObj}\r\n                            name=\"bookingSubjectStrict\"\r\n                            checked={bookingSubjectStrict}\r\n                            handleChange={props.handleCheckbox}\r\n                        />\r\n                        {bookingSubjectStrict &&\r\n                            <Input\r\n                                inputtype=\"input\"\r\n                                label=\"Enter subject selections seperated by a comma\"\r\n                                parentObj={props.parentObj}\r\n                                name=\"bookingSubjectSelections\"\r\n                                value={bookingSubjectSelections}\r\n                                onChange={props.handleChange}\r\n                            />\r\n                        }\r\n                    </div>\r\n                </Minimizer>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookingPlugin;\r\n","import React from \"react\";\r\nimport Input from \"../../../../components/UI/Input\";\r\nimport Minimizer from \"../../../../components/UI/Wrappers/Minimizer\";\r\nimport Flex from \"../../../../components/UI/Wrappers/Flex\";\r\n\r\nimport MultiSelect from \"../../../../components/UI/MultiSelect\";\r\n\r\nconst TestimonialsPlugin = props => {\r\n  if (!props.plugin) return <div />;\r\n\r\n  const { testimonialsActive, testimonialsPages, testimonialsEmail } = props.plugin;\r\n  console.log(\"Testimonals settings props\", props);\r\n\r\n  return (\r\n    <div>\r\n      <Flex>\r\n        <Input\r\n          inputtype=\"checkbox\"\r\n          sideLabel=\"Testimonals Plugin\"\r\n          parentObj={props.parentObj}\r\n          name=\"testimonialsActive\"\r\n          checked={testimonialsActive}\r\n          handleChange={props.handleCheckbox}\r\n        />\r\n        {testimonialsActive && (\r\n          <MultiSelect\r\n            label=\"Select the pages where this plugin is available\"\r\n            items={props.availableRoutes}\r\n            name=\"testimonialsPages\"\r\n            value={testimonialsPages}\r\n            handleChange={props.handleChange}\r\n            margin={\"0 10px 20px 15px\"}\r\n          />\r\n        )}\r\n      </Flex>\r\n\r\n      {/* {testimonialsActive && (\r\n        <Minimizer padding={\"20px\"}>\r\n          <div>\r\n            <Input\r\n              inputtype=\"input\"\r\n              label=\"Enter Business email where contact requests are received\"\r\n              parentObj={props.parentObj}\r\n              name=\"testimonialsEmail\"\r\n              value={testimonialsEmail}\r\n              onChange={props.handleChange}\r\n            />\r\n          </div>\r\n        </Minimizer>\r\n      )} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestimonialsPlugin;\r\n","import React, { Component } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport Spinner from \"../../../components/UI/Spinner\";\r\nimport Flex from \"../../../components/UI/Wrappers/Flex\";\r\nimport Button from \"../../../components/UI/Buttons/Button\";\r\n\r\nimport ContactUsPlugin from \"./contactUsPlugin/ContactUsPlugin\";\r\nimport BookingPlugin from \"./bookingPlugin/BookingPlugin\";\r\nimport TesimonialsPlugin from './testimonialPlugin/TestimonialPlugin';\r\nclass Plugins extends Component {\r\n  state = {\r\n    contactUsPlugin: false\r\n  };\r\n\r\n  accordianClick = name => {\r\n    this.setState({ [name]: !this.state[name] });\r\n  };\r\n\r\n  handleChange = (event, parentObj) => {\r\n    //event.preventDefault();\r\n    this.props.changePluginState(event.target, \"plugins\", parentObj);\r\n  };\r\n\r\n  handleCheckbox = (check, parentObj) => event => {\r\n    console.log(check, parentObj, event.target.checked);\r\n    const newevent = {\r\n      name: event.target.name,\r\n      value: event.target.checked\r\n    };\r\n    this.props.changePluginState(newevent, \"plugins\", parentObj);\r\n  };\r\n\r\n  handlesubmit = event => {\r\n    event.preventDefault();\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n\r\n    const url = `/${siteName}/site/plugins`;\r\n    this.props.pluginsChangeSubmit(url, this.props.plugins);\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.plugins)\r\n      return (\r\n        <div>\r\n          <Spinner />\r\n        </div>\r\n      );\r\n\r\n    console.log(\"plugins props\", this.props);\r\n\r\n    let availableRoutes = this.props.availableRoutes.map(route => {\r\n      const value = route.value === \"/\" ? \"home\" : route.value;\r\n      let str = value.split(\"/\").pop();\r\n      return str;\r\n    });\r\n\r\n    availableRoutes.unshift(\"All Pages\");\r\n\r\n    return (\r\n      <div>\r\n        <StyledPlugins>\r\n          <ContactUsPlugin\r\n            plugin={this.props.plugins.contactUs}\r\n            name={\"contactUsPlugin\"}\r\n            parentObj=\"contactUs\"\r\n            availableRoutes={availableRoutes}\r\n            accordianClick={this.accordianClick}\r\n            handleCheckbox={this.handleCheckbox}\r\n            handleChange={e => this.handleChange(e, \"contactUs\")}\r\n          />\r\n          <br/><br/>\r\n          <BookingPlugin\r\n            plugin={this.props.plugins.booking}\r\n            name={\"bookingPlugin\"}\r\n            parentObj=\"booking\"\r\n            availableRoutes={availableRoutes}\r\n            accordianClick={this.accordianClick}\r\n            handleCheckbox={this.handleCheckbox}\r\n            onChange={this.onChange}\r\n            handleChange={e => this.handleChange(e, \"booking\")}\r\n          />\r\n          <TesimonialsPlugin\r\n            plugin={this.props.plugins.testimonials}\r\n            name={\"testimonialsPlugin\"}\r\n            parentObj=\"testimonials\"\r\n            availableRoutes={availableRoutes}\r\n            accordianClick={this.accordianClick}\r\n            handleCheckbox={this.handleCheckbox}\r\n            onChange={this.onChange}\r\n            handleChange={e => this.handleChange(e, \"testimonials\")}\r\n          />\r\n        </StyledPlugins>\r\n        <Flex justifyContent=\"flex-start\">\r\n          <Button margin=\"2px 5px 15px 20px\" onClick={this.handlesubmit}>\r\n            Update\r\n          </Button>\r\n          {this.props.isUpdating && <Spinner />}\r\n          {this.props.stateBackup && (\r\n            <Button\r\n              margin=\"2px 20px 15px 20px\"\r\n              onClick={this.props.cancelUpdate}\r\n            >\r\n              Undo Changes\r\n            </Button>\r\n          )}\r\n        </Flex>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledPlugins = styled.div`\r\n  width: 100%;\r\n`;\r\nexport default Plugins;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../store/actions/index\";\r\n\r\nimport Spinner from \"../../components/UI/Spinner\";\r\nimport Button from \"../../components/UI/Buttons/Button\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport Flex from \"../../components/UI/Wrappers/Flex\";\r\n\r\nclass AuthModal extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.isAuthenticated !== prevProps.isAuthenticated) {\r\n      this.props.isTimedOut();\r\n    }\r\n  }\r\n\r\n  onFormChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    this.props.onAuth(this.state.email, this.state.password, this.props.admin);\r\n  };\r\n\r\n  backToHome = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    console.log(\"AuthModal page props\", this.props);\r\n\r\n    let errorMessage = null;\r\n\r\n    if (this.props.error) {\r\n      // const errorCode={\r\n      //   EMAIL_NOT_FOUND: 'There is no user record corresponding to this email address',\r\n      //   INVALID_PASSWORD: 'The password entered was invalid - please try again',\r\n      //   USER_DISABLED: 'The user account has been disabled by an administrator.',\r\n      //   INVALID_EMAIL: 'The email address entered is invalid'\r\n      // }\r\n      errorMessage = (\r\n        // <p>{ errorCode[this.props.error.message] }</p>\r\n        <p>{this.props.error}</p>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>Administrator Login</div>\r\n        <br />\r\n        <Input\r\n          inputtype=\"input\"\r\n          placeholder=\"email\"\r\n          name=\"email\"\r\n          value={this.state.email}\r\n          onChange={this.onFormChange}\r\n        />\r\n        <Input\r\n          inputtype=\"input\"\r\n          placeholder=\"password\"\r\n          name=\"password\"\r\n          value={this.state.password}\r\n          onChange={this.onFormChange}\r\n        />\r\n        {errorMessage}\r\n        <br />\r\n        <Flex>\r\n          <Button onClick={this.backToHome}>Cancel</Button>\r\n          <Button onClick={this.submitHandler}>Submit</Button>\r\n        </Flex>\r\n\r\n        {this.props.loading && <Spinner />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.auth.loading,\r\n    error: state.auth.error,\r\n    admin: state.mainState.admin,\r\n    isAuthenticated: state.auth.userId !== null\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuth: (email, password, admin) =>\r\n      dispatch(actions.auth(email, password, admin))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AuthModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../store/actions/index\";\r\n\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport Accordian from \"../../components/UI/Accordian\";\r\nimport TabsMenu from \"./Navigation/TabsMenu\";\r\nimport Modal from \"../../components/UI/Modal\";\r\nimport Button from \"../../components/UI/Buttons/Button\";\r\nimport Toast from \"../../components/UI/Toast\";\r\nimport Flex from \"../../components/UI/Wrappers/Flex\";\r\n\r\nimport NewPageForm from \"../../components/Forms/NewPageForm\";\r\nimport Media from \"./media/Media\";\r\nimport Template from \"./template/Template\";\r\nimport Homepage from \"./homepage/Homepage\";\r\nimport Plugins from \"./plugins/Plugins\";\r\nimport AuthModal from \"../Auth/AuthModal\";\r\n\r\nclass Admin extends Component {\r\n  state = {\r\n    homepage_accordian: false,\r\n    navigation_accordian: false,\r\n    template_accordian: false,\r\n    media_accordian: false,\r\n\r\n    showSignIn: false,\r\n    newPageOpen: false,\r\n    deletePageModal: false,\r\n    pageToDelete: null,\r\n    openMediaModal: false,\r\n    mediaModalTabItemRef: [],\r\n    mediaImages: [],\r\n    newPageToast: null,\r\n    loading: false,\r\n    error: null\r\n  };\r\n\r\n  componentWillMount() {\r\n    console.log('adminPage - sitename', process.env.REACT_APP_SITENAME)\r\n\r\n    if (!this.props.isAuthenticated && process.env.NODE_ENV === \"production\"){\r\n      this.props.history.push('/authenticate-admin')\r\n    }\r\n\r\n    const user = firebase.auth().currentUser;\r\n\r\n    if (user) {\r\n      // User is signed in.\r\n      console.log(\"user is signed in\");\r\n    } else {\r\n      // No user is signed in.\r\n      console.log(\" No user is signed in.\");\r\n      // firebase.auth().signInWithCustomToken(token).catch(function(error) {\r\n      //     // Handle Errors here.\r\n      //     var errorCode = error.code;\r\n      //     var errorMessage = error.message;\r\n      //     // ...\r\n      // });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    if (prevProps.isAuthenticated && !this.props.isAuthenticated && process.env.NODE_ENV === \"production\"){\r\n      this.props.history.push('/authenticate-admin')\r\n    }\r\n  }\r\n\r\n  logoutHandler = () => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(\r\n        function() {\r\n          console.log(\"Signed Out\");\r\n        },\r\n        function(error) {\r\n          console.error(\"Sign Out Error\", error);\r\n        }\r\n      );\r\n    this.props.onLogoutClick();\r\n  };\r\n\r\n  openMediaModal = (pageInfo, key, parentKey) => {\r\n    console.log(\"opneMedia Modal\", pageInfo, key, parentKey);\r\n    this.setState({\r\n      openMediaModal: true,\r\n      mediaModalTabItemRef: [pageInfo, key, parentKey]\r\n    });\r\n  };\r\n\r\n  closeMediaModal = () => {\r\n    this.setState({ openMediaModal: false });\r\n  };\r\n\r\n  setMediaImages = mediaImages => {\r\n    this.setState({ mediaImages });\r\n  };\r\n\r\n  handleNewPageButton = event => {\r\n    event.preventDefault();\r\n    this.setState({ newPageOpen: !this.state.newPageOpen });\r\n  };\r\n\r\n  submitNewPage = newPage_State => {\r\n    console.log(\"newPage_State\", newPage_State);\r\n    const { title, checked, selectVal } = newPage_State;\r\n    const { navigationItems } = this.props;\r\n    const siteName = process.env.REACT_APP_SITENAME\r\n\r\n    const route = title.replace(/ /g, \"-\").toLowerCase();\r\n\r\n    const defaultContent = {\r\n      id: Date.now(),\r\n      mainText: `This is your newly added ${title} page`\r\n    };\r\n    let url = `/${siteName}/site/navigationItems`;\r\n\r\n    let newPageObj = {\r\n      title,\r\n      route,\r\n      selected: false,\r\n      content: defaultContent\r\n    };\r\n\r\n    if (checked) {\r\n      // const subpageIndex = this.props.navigationItems.findIndex(page => page.title === selectVal);\r\n\r\n      let subpageIndex = null;\r\n      for (let key in navigationItems) {\r\n        if (navigationItems[key].title === selectVal) {\r\n          subpageIndex = key;\r\n        }\r\n      }\r\n\r\n      url = `/${siteName}/site/navigationItems/${subpageIndex}/dropdownPages`;\r\n\r\n      newPageObj = {\r\n        title,\r\n        route,\r\n        content: defaultContent\r\n      };\r\n    }\r\n\r\n    this.setState({ loading: true, error: null }, () => {\r\n      const that = this;\r\n      const newPostKey = firebase\r\n        .database()\r\n        .ref()\r\n        .child(url)\r\n        .push().key;\r\n      const newPage = { [newPostKey]: newPageObj };\r\n\r\n      firebase\r\n        .database()\r\n        .ref()\r\n        .child(url)\r\n        .update(newPage, function(err) {\r\n          if (err) {\r\n            // The write failed...\r\n            that.setState({\r\n              loading: false,\r\n              error: err.code,\r\n              newPageOpen: false,\r\n              showSignIn: true\r\n            });\r\n          } else {\r\n            // Data saved successfully!\r\n            console.log(\"new page added successfully!\");\r\n            that.setState({\r\n              loading: false,\r\n              error: null,\r\n              newPageOpen: false,\r\n              newPageToast: \"New Page added successfully\"\r\n            });\r\n            that.props.onInitWebsiteState();\r\n          }\r\n\r\n          // axios.post(url, newPageObj)\r\n          //   .then(response => {\r\n          //     console.log(response)\r\n          //     this.props.onInitWebsiteState()\r\n          //   })\r\n          //   .then(() =>{\r\n          //     this.setState({loading: false, error: null, newPageOpen: false, newPageToast: 'New Page added successfully' })\r\n          //   })\r\n          //   .then(() => {\r\n          //     setTimeout(() => {\r\n          //         this.setState({newPageToast: null});\r\n          //     }, 7000 );\r\n          //   })\r\n          //   .catch(err => {\r\n          //     console.log(err);\r\n          //     this.setState({loading: false, error: err.response.data.error, newPageOpen: false, showSignIn: true})\r\n        });\r\n    });\r\n  };\r\n\r\n  handleDeletePageModal = (pageId, parentId) => {\r\n    if (this.state.deletePageModal) {\r\n      this.setState({ deletePageModal: false, pageToDelete: null });\r\n    } else {\r\n      this.setState({\r\n        deletePageModal: true,\r\n        pageToDelete: { id: pageId, parentId: parentId }\r\n      });\r\n    }\r\n  };\r\n\r\n  submitDeletePage = () => {\r\n    console.log(this.state.pageToDelete);\r\n    const that = this;\r\n    const { id, parentId } = this.state.pageToDelete;\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n\r\n    let url = `/${siteName}/site/navigationItems/${id}`;\r\n\r\n    if (parentId) {\r\n      url = `/${siteName}/site/navigationItems/${parentId}/dropdownPages/${id}`;\r\n    }\r\n\r\n    firebase\r\n      .database()\r\n      .ref(url)\r\n      .remove()\r\n      .then(function() {\r\n        console.log(\"Remove succeeded.\");\r\n        that.props.onInitWebsiteState();\r\n        that.setState({ deletePageModal: false, pageToDelete: null });\r\n      })\r\n      .catch(function(error) {\r\n        console.log(\"Remove failed: \" + error.message);\r\n      });\r\n  };\r\n\r\n  updatePage = (eventTarget, key, parent) => {\r\n    console.log(eventTarget.value, key, parent);\r\n    this.props.onChangePageState(eventTarget, key, parent);\r\n  };\r\n\r\n  updatePageSubmit = (pageInfo, key, parentKey) => {\r\n    console.log(pageInfo, key, parentKey);\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n\r\n    const URL = !parentKey\r\n      ? `/${siteName}/site/navigationItems/${key}/content`\r\n      : `/${siteName}/site/navigationItems/${parentKey}/dropdownPages/${key}/content`;\r\n\r\n    const user = firebase.auth().currentUser;\r\n\r\n    if (user) {\r\n      // User is signed in.\r\n      console.log(\"user is signed in\");\r\n      this.props.onUpdatePageSubmit(URL, pageInfo);\r\n    } else {\r\n      // No user is signed in.\r\n      console.log(\" No user is signed in.\");\r\n      this.setState({\r\n        showSignIn: true,\r\n        error: \"Permission denied. Please sign in again to Re-authenticate\"\r\n      });\r\n    }\r\n  };\r\n\r\n  timedOutUser = () => {\r\n    const user = firebase.auth().currentUser;\r\n    if (user) {\r\n      // User is signed in\r\n      this.setState({ showSignIn: false });\r\n    } else {\r\n      // No user is signed in.\r\n      console.log(\" No user is signed in.\");\r\n      this.setState({ showSignIn: true });\r\n    }\r\n  };\r\n\r\n  accordianClick = name => {\r\n    this.setState({ [name]: !this.state[name] });\r\n  };\r\n\r\n  // this.props.addPage(url, newPageObj)\r\n\r\n  render() {\r\n    console.log(\"Admin Page props\", this.props);\r\n    const {\r\n      media_accordian,\r\n      template_accordian,\r\n      homepage_accordian,\r\n      navigation_accordian,\r\n      plugins_accordian\r\n    } = this.state;\r\n\r\n    return (\r\n      <StyledAdminPage>\r\n        <Flex justifyContent=\"space-between\">\r\n          <h1 className=\"admin-title\">Admin Page</h1>\r\n          <Button onClick={this.logoutHandler}>logout</Button>\r\n        </Flex>\r\n        <Modal\r\n          open={this.state.showSignIn}\r\n          title=\"You have been logged out\"\r\n          description=\"Your administrator session has expired you will need to log back in to continue\"\r\n        >\r\n          <AuthModal\r\n            history={this.props.history}\r\n            isTimedOut={this.timedOutUser}\r\n          />\r\n        </Modal>\r\n        <div>\r\n          <Accordian\r\n            title={\"Media\"}\r\n            name={\"media_accordian\"}\r\n            onClick={e => this.accordianClick(e)}\r\n          >\r\n            {media_accordian && (\r\n              <Media\r\n                isAuthenticated={this.props.isAuthenticated}\r\n                isTimedOut={this.timedOutUser}\r\n                currentImages={this.props.images}\r\n                refreshState={this.props.onInitWebsiteState}\r\n                isModal={false}\r\n                imageURLs={this.state.mediaImages}\r\n                setMediaImages={this.setMediaImages}\r\n              />\r\n            )}\r\n          </Accordian>\r\n          <br />\r\n\r\n          <Accordian\r\n            title={\"Template\"}\r\n            name={\"template_accordian\"}\r\n            onClick={e => this.accordianClick(e)}\r\n          >\r\n            {template_accordian && (\r\n              <Template\r\n                template={this.props.template}\r\n                changeTemplateState={this.props.onChangePageState}\r\n                templateChangeSubmit={this.props.onUpdatePageSubmit}\r\n                isUpdating={this.props.isUpdating}\r\n                isError={this.props.isError}\r\n                stateBackup={this.props.stateBackup}\r\n                cancelUpdate={this.props.onRevertChanges}\r\n                openMediaModal={this.openMediaModal}\r\n              />\r\n            )}\r\n          </Accordian>\r\n          <br />\r\n\r\n          <Accordian\r\n            title={\"Homepage\"}\r\n            name={\"homepage_accordian\"}\r\n            onClick={e => this.accordianClick(e)}\r\n          >\r\n            {homepage_accordian && (\r\n              <Homepage\r\n                homePage={this.props.home}\r\n                changeHomepageState={this.props.onChangePageState}\r\n                homepageChangeSubmit={this.props.onUpdatePageSubmit}\r\n                isUpdating={this.props.isUpdating}\r\n                isError={this.props.isError}\r\n                stateBackup={this.props.stateBackup}\r\n                cancelUpdate={this.props.onRevertChanges}\r\n                openMediaModal={this.openMediaModal}\r\n                availableRoutes={this.props.availableRoutes}\r\n                template={this.props.template}\r\n                plugins={this.props.plugins}\r\n              />\r\n            )}\r\n          </Accordian>\r\n          <br />\r\n\r\n          <Accordian\r\n            title=\"Navigation and Pages\"\r\n            name={\"navigation_accordian\"}\r\n            onClick={e => this.accordianClick(e)}\r\n          >\r\n            {navigation_accordian && (\r\n              <div className=\"fullwidth\">\r\n                <Button onClick={this.handleNewPageButton}>\r\n                  Add a new page\r\n                </Button>\r\n\r\n                <Modal\r\n                  open={this.state.newPageOpen}\r\n                  navigationItems={this.props.navigationItems}\r\n                  handleClose={this.handleNewPageButton}\r\n                  title=\"Add a new Webpage\"\r\n                  description=\"Here you can add a new page to your website which will show in the header navigation. You can also make the new page a subpage of another navigation link\"\r\n                >\r\n                  <NewPageForm\r\n                    loading={this.state.loading}\r\n                    navigationItems={this.props.navigationItems}\r\n                    handleClose={this.handleNewPageButton}\r\n                    handleSubmit={this.submitNewPage}\r\n                  />\r\n                </Modal>\r\n\r\n                <Modal\r\n                  open={this.state.deletePageModal}\r\n                  navigationItems={this.props.navigationItems}\r\n                  handleClose={this.handleDeletePageModal}\r\n                  title=\"Delete Webpage\"\r\n                  description=\"You are about to delete selected page this is a permanent action, would you like to continue with deleting this page\"\r\n                >\r\n                  <Flex>\r\n                    <Button onClick={this.submitDeletePage}>Delete</Button>\r\n                    <Button onClick={this.handleDeletePageModal}>Cancel</Button>\r\n                  </Flex>\r\n                </Modal>\r\n\r\n                <br />\r\n                <br />\r\n                <TabsMenu\r\n                  navigationItems={this.props.navigationItems}\r\n                  updatePageSubmit={this.updatePageSubmit}\r\n                  onChange={this.updatePage}\r\n                  openMediaModal={this.openMediaModal}\r\n                  handlePageDelete={this.handleDeletePageModal}\r\n                  isUpdating={this.props.isUpdating}\r\n                  cancelUpdate={this.props.onRevertChanges}\r\n                  isError={this.props.isError}\r\n                  stateBackup={this.props.stateBackup}\r\n                  availableRoutes={this.props.availableRoutes}\r\n                  template={this.props.template}\r\n                  plugins={this.props.plugins}\r\n                />\r\n                <br />\r\n              </div>\r\n            )}\r\n          </Accordian>\r\n          <br />\r\n\r\n          <Accordian\r\n            title={\"Plugins\"}\r\n            name={\"plugins_accordian\"}\r\n            onClick={e => this.accordianClick(e)}\r\n          >\r\n            {plugins_accordian && (\r\n              <Plugins\r\n                plugins={this.props.plugins}\r\n                changePluginState={this.props.onChangePageState}\r\n                pluginsChangeSubmit={this.props.onUpdatePageSubmit}\r\n                availableRoutes={this.props.availableRoutes}\r\n                isUpdating={this.props.isUpdating}\r\n                isError={this.props.isError}\r\n                stateBackup={this.props.stateBackup}\r\n                cancelUpdate={this.props.onRevertChanges}\r\n              />\r\n            )}\r\n          </Accordian>\r\n\r\n          <Modal\r\n            open={this.state.openMediaModal}\r\n            title=\"Choose an image\"\r\n            description=\"Select the media location you would like to use\"\r\n            handleClose={this.closeMediaModal}\r\n          >\r\n            <Media\r\n              isModal={true}\r\n              isAuthenticated={this.props.isAuthenticated}\r\n              handleClose={this.closeMediaModal}\r\n              currentImages={this.props.images}\r\n              imageURLs={this.state.mediaImages}\r\n              setMediaImages={this.setMediaImages}\r\n              tabItemReference={this.state.mediaModalTabItemRef}\r\n              onChangePageState={this.props.onChangePageState}\r\n            />\r\n          </Modal>\r\n        </div>\r\n        {this.state.newPageToast !== null && (\r\n          <Toast message={this.state.newPageToast} />\r\n        )}\r\n        {this.props.updatePageToast !== null && (\r\n          <Toast message={this.props.updatePageToast} />\r\n        )}\r\n        {this.state.error && <Toast message={this.state.error} error={true} />}\r\n      </StyledAdminPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledAdminPage = styled.div`\r\n  background-color: #424242;\r\n  /* min-height: 100vh; */\r\n  padding: 100px 50px;\r\n  margin-top: -75px;\r\n\r\n  .admin-title {\r\n    color: #f5f5f5;\r\n  }\r\n\r\n  @media(max-width: 500px){\r\n    padding: 100px 10px;\r\n  }\r\n`;\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.userId !== null,\r\n    userId: state.auth.userId,\r\n    home: state.mainState.home,\r\n    navigationItems: state.mainState.navigationItems,\r\n    images: state.mainState.images,\r\n    stateBackup: state.mainState.state_copy,\r\n    updatePageToast: state.admin.pageUpdateToast,\r\n    isUpdating: state.admin.loading,\r\n    isError: state.admin.error,\r\n    availableRoutes: state.admin.routes,\r\n    template: state.mainState.template,\r\n    plugins: state.mainState.plugins\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onInitWebsiteState: () => dispatch(actions.initWebsiteState()),\r\n    onLogoutClick: () => dispatch(actions.logout()),\r\n    onChangePageState: (eventTarget, key, parent) =>\r\n      dispatch(actions.changePageState(eventTarget, key, parent)),\r\n    onUpdatePageSubmit: (pageInfo, url) =>\r\n      dispatch(actions.updatePageSubmit(pageInfo, url)),\r\n    onRevertChanges: () => dispatch(actions.revertStateChange())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Admin);\r\n"],"sourceRoot":""}