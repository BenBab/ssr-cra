{"version":3,"sources":["app/components/UI/Accordian.js","app/components/UI/Toast.js","app/components/UI/Wrappers/Minimizer.js","app/containers/Admin/Navigation/TabItems.js/TabItems.js","app/containers/Admin/Navigation/TabsMenu.js","app/components/UI/Modal.js","app/components/Forms/NewPageForm.js","app/containers/Admin/media/ImgGridList.js","app/containers/Admin/media/Media.js","app/containers/Admin/template/Template.js","app/containers/Admin/homepage/Homepage.js","app/components/UI/MultiSelect.js","app/containers/Admin/plugins/contactUsPlugin/ContactUsPlugin.js","app/containers/Admin/plugins/bookingPlugin/BookingPlugin.js","app/containers/Admin/plugins/Plugins.js","app/containers/Auth/AuthModal.js","app/containers/Admin/Admin.js","app/routes/admin/index.js","app/routes/adminTest/index.js"],"names":["StyledAccordian","styled","div","_templateObject","props","theme","primaryBackGroundColour","accordian","react_default","a","createElement","ExpansionPanel_default","onChange","onClick","name","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","title","ExpansionPanelDetails_default","children","Toast","state","open","handleClick","_this","setState","handleClose","event","reason","this","toastColour","error","success","StyledSnackBar","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","aria-describedby","message","id","action","IconButton_default","key","aria-label","color","Close_default","Component","Toast_templateObject","Minimizer","isOpen","handleMinimizer","StyledMinimizer","padding","Flex","margin","RemoveCircle_default","AddCircle_default","Collapse_default","in","className","Emtpy","emptyHeight","Minimizer_templateObject","_templateObject2","StyledTabItems","TabItems_templateObject","Preview","TabItems_templateObject2","DeletePageIcon","_templateObject3","TabItems","console","log","itemProps","dropdownPages","TabsMenu_TabMenu","navigationItems","parentId","pageId","parent","handlePageDelete","openMediaModal","updatePageSubmit","isUpdating","cancelUpdate","stateBackup","availableRoutes","template","plugins","handleChange","preventDefault","target","handleCheckbox","check","checked","newevent","value","handleMediaModal","handleColourPicker","clearInput","inputName","_props$itemProps$cont","content","topBanner","topBannerHalfwidth","topBannerImgSize","topBannerHWbackImg","topBannerHWBackColour","topBannerTxtRightSide","topBannerTxtLightTheme","topBannerLogo","topBannerfade","topBannerTitle","topBannerSubtitle","topBannerDescription","topBannerBtnText","topBannerLink","midBanner","midBannerHalfwidth","midBannerImgSize","midBannerHWbackImg","midBannerHWBackColour","midBannerTxtRightSide","midBannerTxtLightTheme","midBannerLogo","midBannerfade","midBannerTitle","midBannerSubtitle","midBannerDescription","midBannerBtnText","midBannerLink","mainText","bottomBanner","Paper_default","elevation","Input","inputtype","label","concat","Wrappers_Minimizer","Box","sideLabel","Fragment","type","changeColour","items","onSelectChange","Dashboard","Object","assign","pageInfo","overlayBlocker","justifyContent","Button","Spinner","Delete_default","fontSize","TabMenu","disableTabText","topBannerOptions","midBannerOptions","bottomBannerOptions","prevProps","_this2","_this$props","tabLabels","tabitems","keys","map","index","item","Tab_default","TabItems_js_TabItems","StyledTabs","Tooltip_default","AppBar_default","position","Tabs_default","variant","scrollButtons","isError","UI_Toast","TabsMenu_templateObject","Modal","width","fullWidth","maxWidth","Dialog_default","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","description","NewPageForm","_Component","_getPrototypeOf2","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","selectVal","defineProperty","onInputChange","_event$target","scrubbedVal","replace","inherits","createClass","prop","handleSubmit","disabled","loading","TitlebarGridList","columns","spacing","activeIndex","selectedValue","selectedName","handleResize","windowSize","window","innerWidth","handleSelect","tile","selectedImage","addEventListener","removeEventListener","tileData","StyledGrid","GridList_default","cellHeight","cols","GridListTile_default","style","height","ListSubheader_default","component","gridTileClass","selectedIndex","e","src","img","alt","GridListTileBar_default","actionIcon","isModal","deleteImage","ImgGridList_templateObject","Media","uploadOpen","customURL","customURLtext","deleteImgOpen","getImageUrls","that","assertThisInitialized","imageContainer","imageCount","currentImages","returnedCount","storageRef","firebase","storage","ref","i","child","process","getDownloadURL","then","url","toConsumableArray","setMediaImages","catch","onDrop","acceptedFiles","rejectedFiles","auth","currentUser","file","checkFileAlreadyExists","put","snapshot","addImageRefToDb","err","isTimedOut","filter","newPostKey","database","push","updates","update","refreshState","handleCustomURL","confirmImage","_this$state","tabItemReference","image","onChangePageState","imgUrl","confirmDelete","imageURLs","find","remove","delete","handleUploadOpen","isAuthenticated","_this$state2","dropZone","mediaTemplate","noMediaMessage","dist_es","multiple","accept","_ref","getRootProps","getInputProps","isDragActive","StyledDropArea","classNames","dropzone--isActive","selectedLabel","IsMediaModal","opacity","ImgGridList","placeholder","Divider_default","UI_Modal","Media_templateObject","Media_templateObject2","Template","changeTemplateState","handlesubmit","templateChangeSubmit","buttonStyle","_this$props$template","navButtons","siteButtons","transparentHeader","navLightTheme","siteLogo","version","StyledTemplate","Grid","colsLarge","colsMed","Template_templateObject","Homepage","previewOpen","changeHomepageState","homepageChangeSubmit","homePage","_this$props$homePage$","mainTextPosition","mainTextCenterTitle","mainTextRightSide","mainTextBackColour","mainTextImg","mainTextImgAlign","mainTextImgWidth","mainTextImgHeight","StyledHomePage","Homepage_Preview","Homepage_templateObject","Homepage_templateObject2","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","MultiSelect","StyledSelect","FormControl_default","InputLabel_default","htmlFor","Select_default","input","Input_default","renderValue","selected","Chip_default","MenuItem_default","React","MultiSelect_templateObject","minwidth","ContactUsPlugin","plugin","_props$plugin","contactUsActive","contactUsPages","contactUsEmail","parentObj","UI_MultiSelect","BookingPlugin","bookingActive","bookingPages","bookingEmail","bookingForm","bookingCalendarID","bookingApiKey","bookingTimeSlotsAvailable","bookingTimeSlots","bookingGetCalandarAdvance","bookingSessions","Plugins","contactUsPlugin","accordianClick","changePluginState","pluginsChangeSubmit","route","split","pop","unshift","StyledPlugins","contactUsPlugin_ContactUsPlugin","contactUs","bookingPlugin_BookingPlugin","booking","Plugins_templateObject","AuthModal","email","password","onFormChange","submitHandler","onAuth","admin","backToHome","history","errorMessage","connect","mainState","userId","dispatch","actions","Admin","homepage_accordian","navigation_accordian","template_accordian","media_accordian","showSignIn","newPageOpen","deletePageModal","pageToDelete","mediaModalTabItemRef","mediaImages","newPageToast","logoutHandler","signOut","onLogoutClick","parentKey","closeMediaModal","handleNewPageButton","submitNewPage","newPage_State","toLowerCase","defaultContent","Date","now","newPageObj","subpageIndex","newPage","code","onInitWebsiteState","handleDeletePageModal","submitDeletePage","_this$state$pageToDel","updatePage","eventTarget","URL","onUpdatePageSubmit","timedOutUser","plugins_accordian","StyledAdminPage","Auth_AuthModal","Accordian","media_Media","images","template_Template","onRevertChanges","homepage_Homepage","home","Forms_NewPageForm","plugins_Plugins","updatePageToast","Admin_templateObject","state_copy","pageUpdateToast","routes","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","_components_page__WEBPACK_IMPORTED_MODULE_2__","_containers_Admin_Admin__WEBPACK_IMPORTED_MODULE_3__","noCrawl","_components_page__WEBPACK_IMPORTED_MODULE_1__","_containers_Admin_Admin__WEBPACK_IMPORTED_MODULE_2__","Admin_TEST"],"mappings":"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","file":"static/js/admin.d3ce3ed9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst accordian = props => (\r\n  <StyledAccordian>\r\n    <ExpansionPanel onChange={() => props.onClick(props.name)}>\r\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n        <div>{props.title}</div>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        {props.children ? props.children : <div />}\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  </StyledAccordian>\r\n);\r\n\r\nconst StyledAccordian = styled.div`\r\n    margin: 15px 5px;\r\n  \r\n    /* > div {\r\n        height: 20px !important;\r\n        width: 20px !important;\r\n        margin: \"theme.spacing.unit * 2\";\r\n        color: ${props => props.theme.primaryBackGroundColour};\r\n\r\n    } */\r\n`;\r\n\r\nexport default accordian;\r\n","import React, { Component } from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nclass Toast extends Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ open: true });\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    let toastColour = \"rgb(49, 49, 49)\";\r\n    if (this.props.error) toastColour = \"rgb(220, 52, 54)\";\r\n    if (this.props.success) toastColour = \"rgb(70,154,16)\";\r\n\r\n    return (\r\n      <StyledSnackBar toastColour={toastColour}>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"center\"\r\n          }}\r\n          open={this.state.open}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleClose}\r\n          ContentProps={{\r\n            \"aria-describedby\": \"message-id\"\r\n          }}\r\n          message={<span id=\"message-id\">{this.props.message}</span>}\r\n          action={[\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"Close\"\r\n              color=\"inherit\"\r\n              onClick={this.handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          ]}\r\n        />\r\n      </StyledSnackBar>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledSnackBar = styled.div`\r\n  > div div {\r\n    background-color: ${props => props.toastColour};\r\n    font-weight: ${props => (props.error ? \"bold\" : \"initial\")};\r\n  }\r\n`;\r\n\r\nexport default Toast;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport AddIcon from \"@material-ui/icons/AddCircle\";\r\nimport MinusIcon from \"@material-ui/icons/RemoveCircle\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Flex from \"./Flex\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\n\r\nclass Minimizer extends Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n\r\n  handleMinimizer = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  };\r\n\r\n  render() {\r\n    const { isOpen } = this.state;\r\n\r\n    return (\r\n      <StyledMinimizer padding={this.props.padding}>\r\n        <Flex margin=\"0\">\r\n          <IconButton\r\n            aria-label=\"Add\"\r\n            color=\"primary\"\r\n            onClick={this.handleMinimizer}\r\n          >\r\n            {isOpen ? <MinusIcon /> : <AddIcon />}\r\n          </IconButton>\r\n          {isOpen ? (\r\n            <small onClick={this.handleMinimizer}>\r\n              Click to minimise options\r\n            </small>\r\n          ) : (\r\n            <small onClick={this.handleMinimizer}>\r\n              Click to expand further options\r\n            </small>\r\n          )}\r\n        </Flex>\r\n        <Collapse in={isOpen}>\r\n          {isOpen ? (\r\n            <div className=\"minimized_children\">{this.props.children}</div>\r\n          ) : (\r\n            <Emtpy emptyHeight={this.props.emptyHeight} />\r\n          )}\r\n        </Collapse>\r\n      </StyledMinimizer>\r\n    );\r\n  }\r\n}\r\n\r\nconst Emtpy = styled.div`\r\n  height: ${props => props.emptyHeight || \"500px\"};\r\n`;\r\n\r\nconst StyledMinimizer = styled.div`\r\n  border: 2px solid rgba(0, 0, 0, 0.2);\r\n  border-top: 0;\r\n  border-bottom-left-radius: 8px;\r\n  border-bottom-right-radius: 8px;\r\n  margin-bottom: 35px;\r\n\r\n  > div small {\r\n    cursor: pointer;\r\n  }\r\n\r\n  .minimized_children {\r\n    padding: ${props => props.padding || \"auto\"};\r\n  }\r\n`;\r\n\r\nexport default Minimizer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport Input from \"../../../../components/UI/Input\";\r\nimport TabMenu from \"../TabsMenu\";\r\nimport Button from \"../../../../components/UI/Buttons/Button\";\r\nimport Flex from \"../../../../components/UI/Wrappers/Flex\";\r\nimport Box from \"../../../../components/UI/Wrappers/Box\";\r\nimport Spinner from \"../../../../components/UI/Spinner\";\r\nimport Minimizer from \"../../../../components/UI/Wrappers/Minimizer\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport Dashboard from \"../../../Dashboard/Dashboard\";\r\n\r\nconst TabItems = props => {\r\n  console.log(\"tabItems props\", props);\r\n  if (props.itemProps.dropdownPages) {\r\n    return (\r\n      <TabMenu\r\n        navigationItems={props.itemProps.dropdownPages}\r\n        parentId={props.pageId}\r\n        parent={props.children}\r\n        onChange={props.onChange}\r\n        handlePageDelete={props.handlePageDelete}\r\n        openMediaModal={props.openMediaModal}\r\n        updatePageSubmit={props.updatePageSubmit}\r\n        isUpdating={props.isUpdating}\r\n        cancelUpdate={props.cancelUpdate}\r\n        stateBackup={props.stateBackup}\r\n        availableRoutes={props.availableRoutes}\r\n        template={props.template}\r\n        plugins={props.plugins}\r\n      />\r\n    );\r\n  }\r\n\r\n  const handleChange = event => {\r\n    event.preventDefault();\r\n    props.onChange(event.target, props.pageId, props.parentId);\r\n  };\r\n\r\n  const handleCheckbox = check => event => {\r\n    console.log(check, event.target.checked);\r\n    const newevent = {\r\n      name: event.target.name,\r\n      value: event.target.checked\r\n    };\r\n    props.onChange(newevent, props.pageId, props.parentId);\r\n  };\r\n\r\n  const handleMediaModal = event => {\r\n    event.preventDefault();\r\n    props.openMediaModal(event.target, props.pageId, props.parentId);\r\n  };\r\n\r\n  const handleColourPicker = event => {\r\n    props.onChange(event.target, props.pageId, props.parentId);\r\n  };\r\n\r\n  const handlesubmit = event => {\r\n    event.preventDefault();\r\n    props.updatePageSubmit(\r\n      props.itemProps.content,\r\n      props.pageId,\r\n      props.parentId\r\n    );\r\n  };\r\n\r\n  const clearInput = inputName => {\r\n    const event = { name: inputName, value: \"\" };\r\n    props.onChange(event, props.pageId, props.parentId);\r\n  };\r\n\r\n  const deletePage = () => {\r\n    props.handlePageDelete(props.pageId, props.parentId);\r\n  };\r\n\r\n  const {\r\n    topBanner,\r\n    topBannerHalfwidth,\r\n    topBannerImgSize,\r\n    topBannerHWbackImg,\r\n    topBannerHWBackColour,\r\n    topBannerTxtRightSide,\r\n    topBannerTxtLightTheme,\r\n    topBannerLogo,\r\n    topBannerfade,\r\n    topBannerTitle,\r\n    topBannerSubtitle,\r\n    topBannerDescription,\r\n    topBannerBtnText,\r\n    topBannerLink,\r\n    midBanner,\r\n    midBannerHalfwidth,\r\n    midBannerImgSize,\r\n    midBannerHWbackImg,\r\n    midBannerHWBackColour,\r\n    midBannerTxtRightSide,\r\n    midBannerTxtLightTheme,\r\n    midBannerLogo,\r\n    midBannerfade,\r\n    midBannerTitle,\r\n    midBannerSubtitle,\r\n    midBannerDescription,\r\n    midBannerBtnText,\r\n    midBannerLink,\r\n    bottomBanner,\r\n    mainText\r\n  } = props.itemProps.content;\r\n\r\n  return (\r\n    <Paper elevation={20}>\r\n      <StyledTabItems>\r\n        <div>\r\n          {props.children}\r\n          <Input\r\n            inputtype=\"inputSelector\"\r\n            label={`${\r\n              topBannerHalfwidth\r\n                ? \"Top Banner Image (Inside Banner)\"\r\n                : \"Top Banner Image\"\r\n            }`}\r\n            name=\"topBanner\"\r\n            value={topBanner}\r\n            onChange={handleChange}\r\n            onClick={handleMediaModal}\r\n            clearInput={clearInput}\r\n          />\r\n          {topBanner && (\r\n            <Minimizer>\r\n              <Box>\r\n                <Flex>\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Use the Top Banner image inside the Banner \"\r\n                    name=\"topBannerHalfwidth\"\r\n                    checked={topBannerHalfwidth}\r\n                    handleChange={handleCheckbox}\r\n                  />\r\n                </Flex>\r\n                {topBannerHalfwidth && (\r\n                  <>\r\n                    <Input\r\n                      inputtype=\"inputSelector\"\r\n                      label=\"Banner Background Image\"\r\n                      name=\"topBannerHWbackImg\"\r\n                      value={topBannerHWbackImg}\r\n                      onChange={handleChange}\r\n                      onClick={handleMediaModal}\r\n                      clearInput={clearInput}\r\n                    />\r\n                    <Flex>\r\n                      <Input\r\n                        inputtype=\"input\"\r\n                        type=\"number\"\r\n                        label=\"Banner Image Size\"\r\n                        name=\"topBannerImgSize\"\r\n                        value={topBannerImgSize}\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Input\r\n                        inputtype=\"inputColourPicker\"\r\n                        label=\"Banner Background Colour\"\r\n                        name=\"topBannerHWBackColour\"\r\n                        value={topBannerHWBackColour}\r\n                        changeColour={handleColourPicker}\r\n                        pageId={\"home\"}\r\n                      />\r\n                    </Flex>\r\n                  </>\r\n                )}\r\n                <Flex>\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Banner Text Right Side\"\r\n                    name=\"topBannerTxtRightSide\"\r\n                    checked={topBannerTxtRightSide}\r\n                    handleChange={handleCheckbox}\r\n                  />\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Banner Light Text Color\"\r\n                    name=\"topBannerTxtLightTheme\"\r\n                    checked={topBannerTxtLightTheme}\r\n                    handleChange={handleCheckbox}\r\n                  />\r\n                </Flex>\r\n                <Flex>\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Use Logo in banner\"\r\n                    name=\"topBannerLogo\"\r\n                    checked={topBannerLogo}\r\n                    handleChange={handleCheckbox}\r\n                  />\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Banner content fade in effect\"\r\n                    name=\"topBannerfade\"\r\n                    checked={topBannerfade}\r\n                    handleChange={handleCheckbox}\r\n                  />\r\n                </Flex>\r\n                <Input\r\n                  inputtype=\"input\"\r\n                  label=\"Banner Title\"\r\n                  name=\"topBannerTitle\"\r\n                  value={topBannerTitle}\r\n                  onChange={handleChange}\r\n                />\r\n                <Input\r\n                  inputtype=\"input\"\r\n                  label=\"Banner Subtitle\"\r\n                  name=\"topBannerSubtitle\"\r\n                  value={topBannerSubtitle}\r\n                  onChange={handleChange}\r\n                />\r\n                <Input\r\n                  inputtype=\"input\"\r\n                  label=\"Banner Description\"\r\n                  name=\"topBannerDescription\"\r\n                  value={topBannerDescription}\r\n                  onChange={handleChange}\r\n                />\r\n                <Flex>\r\n                  <Input\r\n                    inputtype=\"input\"\r\n                    label=\"Banner Button Text\"\r\n                    name=\"topBannerBtnText\"\r\n                    value={topBannerBtnText}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Input\r\n                    inputtype=\"select\"\r\n                    label=\"Banner Link\"\r\n                    name=\"topBannerLink\"\r\n                    value={topBannerLink}\r\n                    items={props.availableRoutes}\r\n                    onSelectChange={handleChange}\r\n                  />\r\n                </Flex>\r\n              </Box>\r\n            </Minimizer>\r\n          )}\r\n          <Input\r\n            inputtype=\"inputSelector\"\r\n            label={`${\r\n              midBannerHalfwidth\r\n                ? \"Middle Banner Image (Inside Banner)\"\r\n                : \"Middle Banner Image\"\r\n            }`}\r\n            name=\"midBanner\"\r\n            value={midBanner}\r\n            onChange={handleChange}\r\n            onClick={handleMediaModal}\r\n            clearInput={clearInput}\r\n          />\r\n          {midBanner && (\r\n            <Minimizer>\r\n              <Box>\r\n                <Flex>\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Use the Middle Banner image inside the Banner\"\r\n                    name=\"midBannerHalfwidth\"\r\n                    checked={midBannerHalfwidth}\r\n                    handleChange={handleCheckbox}\r\n                  />\r\n                </Flex>\r\n                {midBannerHalfwidth && (\r\n                  <>\r\n                    <Input\r\n                      inputtype=\"inputSelector\"\r\n                      label=\"Banner Background Image\"\r\n                      name=\"midBannerHWbackImg\"\r\n                      value={midBannerHWbackImg}\r\n                      onChange={handleChange}\r\n                      onClick={handleMediaModal}\r\n                      clearInput={clearInput}\r\n                    />\r\n                    <Flex>\r\n                      <Input\r\n                        inputtype=\"input\"\r\n                        type=\"number\"\r\n                        label=\"Banner Image Size\"\r\n                        name=\"midBannerImgSize\"\r\n                        value={midBannerImgSize}\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Input\r\n                        inputtype=\"inputColourPicker\"\r\n                        label=\"Banner Background Colour\"\r\n                        name=\"midBannerHWBackColour\"\r\n                        value={midBannerHWBackColour}\r\n                        changeColour={handleColourPicker}\r\n                        pageId={\"home\"}\r\n                      />\r\n                    </Flex>\r\n                  </>\r\n                )}\r\n                <Flex>\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Banner Text Right Side\"\r\n                    name=\"midBannerTxtRightSide\"\r\n                    checked={midBannerTxtRightSide}\r\n                    handleChange={handleCheckbox}\r\n                  />\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Banner Light Text Color\"\r\n                    name=\"midBannerTxtLightTheme\"\r\n                    checked={midBannerTxtLightTheme}\r\n                    handleChange={handleCheckbox}\r\n                  />\r\n                </Flex>\r\n                <Flex>\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Use Logo in banner\"\r\n                    name=\"midBannerLogo\"\r\n                    checked={midBannerLogo}\r\n                    handleChange={handleCheckbox}\r\n                  />\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Banner content fade in effect\"\r\n                    name=\"midBannerfade\"\r\n                    checked={midBannerfade}\r\n                    handleChange={handleCheckbox}\r\n                  />\r\n                </Flex>\r\n                <Input\r\n                  inputtype=\"input\"\r\n                  label=\"Banner Title\"\r\n                  name=\"midBannerTitle\"\r\n                  value={midBannerTitle}\r\n                  onChange={handleChange}\r\n                />\r\n                <Input\r\n                  inputtype=\"input\"\r\n                  label=\"Banner Subtitle\"\r\n                  name=\"midBannerSubtitle\"\r\n                  value={midBannerSubtitle}\r\n                  onChange={handleChange}\r\n                />\r\n                <Input\r\n                  inputtype=\"input\"\r\n                  label=\"Banner Description\"\r\n                  name=\"midBannerDescription\"\r\n                  value={midBannerDescription}\r\n                  onChange={handleChange}\r\n                />\r\n                <Flex>\r\n                  <Input\r\n                    inputtype=\"input\"\r\n                    label=\"Banner Button Text\"\r\n                    name=\"midBannerBtnText\"\r\n                    value={midBannerBtnText}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Input\r\n                    inputtype=\"select\"\r\n                    label=\"Banner Link\"\r\n                    name=\"midBannerLink\"\r\n                    value={midBannerLink}\r\n                    items={props.availableRoutes}\r\n                    onSelectChange={handleChange}\r\n                  />\r\n                </Flex>\r\n              </Box>\r\n            </Minimizer>\r\n          )}\r\n          <Input\r\n            inputtype=\"textarea\"\r\n            label=\"Main Body Text\"\r\n            name=\"mainText\"\r\n            value={mainText}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <Preview>\r\n          <Dashboard\r\n            pageInfo={props.itemProps}\r\n            {...props}\r\n            template={props.template}\r\n            plugins={props.plugins}\r\n            overlayBlocker={true}\r\n          />\r\n        </Preview>\r\n      </StyledTabItems>\r\n      <Flex justifyContent={\"space-between\"}>\r\n        <div>\r\n          <Flex justifyContent=\"flex-start\">\r\n            <Button margin=\"2px 5px 15px 20px\" onClick={handlesubmit}>\r\n              Update\r\n            </Button>\r\n            {props.isUpdating && <Spinner />}\r\n            {props.stateBackup && (\r\n              <Button margin=\"2px 20px 15px 20px\" onClick={props.cancelUpdate}>\r\n                Undo Changes\r\n              </Button>\r\n            )}\r\n          </Flex>\r\n        </div>\r\n        <DeletePageIcon>\r\n          <IconButton onClick={deletePage}>\r\n            <DeleteIcon fontSize=\"large\" />\r\n          </IconButton>\r\n        </DeletePageIcon>\r\n      </Flex>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst StyledTabItems = styled.div`\r\n  padding: 3vh;\r\n  display: grid;\r\n  grid-template-columns: 65% 35%;\r\n  grid-gap: 8px;\r\n`;\r\n\r\nconst Preview = styled.div`\r\n  display: block;\r\n  zoom: 30%;\r\n  padding-top: 56px;\r\n  box-shadow: 2px 2px 2px;\r\n\r\n  @media (max-width: 500px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst DeletePageIcon = styled.div`\r\n  padding: 5px;\r\n`;\r\n\r\nexport default TabItems;\r\n","import React, { Component } from \"react\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Toast from \"../../../components/UI/Toast\";\r\n\r\nimport TabItems from \"./TabItems.js/TabItems\";\r\n\r\nexport default class TabMenu extends Component {\r\n  state = {\r\n    value: 0,\r\n    disableTabText: \"\",\r\n    topBannerOptions: true,\r\n    midBannerOptions: true,\r\n    bottomBannerOptions: true\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.stateBackup !== prevProps.stateBackup) {\r\n      if (this.props.stateBackup) {\r\n        this.setState({\r\n          disableTabText:\r\n            \"You have made updates to this page, please save or undo your changes before selecting a new page\"\r\n        });\r\n      } else {\r\n        this.setState({ disableTabText: \"\" });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleChange = (event, value) => {\r\n    if (!this.props.stateBackup) {\r\n      this.setState({ value });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    const { navigationItems, parent, parentId } = this.props;\r\n    console.log(\"tabMenu props\", this.props);\r\n    let tabLabels = null;\r\n    let tabitems = null;\r\n\r\n    if (navigationItems !== null) {\r\n      tabLabels = Object.keys(navigationItems).map((key, index) => {\r\n        const item = navigationItems[key];\r\n        //passes the item title down to tabItems, which then runs tabs again if there is a drop down, and passes a parent value back\r\n        return (\r\n          <Tab\r\n            key={index}\r\n            label={\r\n              parent ? parent.props.children + \" - \" + item.title : item.title\r\n            }\r\n          />\r\n        );\r\n      });\r\n\r\n      tabitems = Object.keys(navigationItems).map((key, index) => {\r\n        return (\r\n          value === index && (\r\n            <TabItems\r\n              key={index}\r\n              pageId={key}\r\n              parentId={parentId || null}\r\n              itemProps={navigationItems[key]}\r\n              onChange={this.props.onChange}\r\n              handlePageDelete={this.props.handlePageDelete}\r\n              openMediaModal={this.props.openMediaModal}\r\n              updatePageSubmit={this.props.updatePageSubmit}\r\n              isUpdating={this.props.isUpdating}\r\n              cancelUpdate={this.props.cancelUpdate}\r\n              stateBackup={this.props.stateBackup}\r\n              availableRoutes={this.props.availableRoutes}\r\n              template={this.props.template}\r\n              plugins={this.props.plugins}\r\n            >\r\n              <h2>{navigationItems[key].title}</h2>\r\n            </TabItems>\r\n          )\r\n        );\r\n      });\r\n\r\n      // tabLabels = navigationItems.map( (item, index) => {\r\n      //     //passes the item title down to tabItems, which then runs tabs again if there is a drop down, and passes a parent value back\r\n      //     return <Tab key={index} label={ parent ? parent+' - '+item.title : item.title} />\r\n      // })\r\n      // tabitems = navigationItems.map( (item, index) => {\r\n      //     return( value === index && <TabItems key={index} itemProps={item}>{item.title }</TabItems> )\r\n      // })\r\n    }\r\n\r\n    if (tabitems === null && tabLabels === null) return <div />;\r\n    return (\r\n      <StyledTabs>\r\n        <Tooltip title={this.state.disableTabText}>\r\n          <AppBar position=\"static\">\r\n            <Tabs\r\n              value={value}\r\n              onChange={this.handleChange}\r\n              variant=\"scrollable\"\r\n              scrollButtons=\"auto\"\r\n            >\r\n              {tabLabels}\r\n            </Tabs>\r\n          </AppBar>\r\n        </Tooltip>\r\n        {tabitems}\r\n        {this.props.isError && (\r\n          <Toast message={this.props.isError} error={true} />\r\n        )}\r\n      </StyledTabs>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledTabs = styled.div`\r\n  > header {\r\n    background-color: ${props => props.theme.primaryBackGroundColour};\r\n    z-index: 20;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\n//import TextField from '@material-ui/core/TextField';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n// import DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nconst Modal = props => {\r\n  // const childrenWithProps = React.Children.map()\r\n  const width = props.fullWidth ? props.fullWidth : true;\r\n  const maxWidth = props.maxWidth ? props.maxWidth : \"lg\";\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={props.handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        fullWidth={width}\r\n        maxWidth={maxWidth}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>{props.description}</DialogContentText>\r\n          <br />\r\n          <br />\r\n          {/* {React.cloneElement(props.children, { handleSubmit: props.handleSubmit })} */}\r\n          {props.children}\r\n        </DialogContent>\r\n        {/* <DialogActions>\r\n            <button onClick={props.handleClose} >\r\n              Cancel\r\n            </button>\r\n            <button onClick={props.handleSubmit} >\r\n              Confirm\r\n            </button>\r\n          </DialogActions> */}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\nimport Input from \"../UI/Input\";\r\nimport Flex from \"../UI/Wrappers/Flex\";\r\nimport Button from \"../UI/Buttons/Button\";\r\nimport Spinner from \"../UI/Spinner\";\r\n\r\nexport class NewPageForm extends Component {\r\n  state = {\r\n    title: \"\",\r\n    checked: false,\r\n    selectVal: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.navigationItems !== null) {\r\n      // this.setState({selectVal: this.props.navigationItems[0].title})\r\n      let title = \"\";\r\n      for (var prop in this.props.navigationItems) {\r\n        title = this.props.navigationItems[prop].title;\r\n        break;\r\n      }\r\n\r\n      this.setState({ selectVal: title });\r\n    }\r\n  }\r\n\r\n  handleCheckbox = name => event => {\r\n    this.setState({ [name]: event.target.checked });\r\n  };\r\n\r\n  onSelectChange = event => {\r\n    this.setState({ selectVal: event.target.value });\r\n  };\r\n\r\n  onInputChange = event => {\r\n    const { value, name } = event.target;\r\n    const scrubbedVal = value.replace(/[^\\w\\s]/gi, \"\");\r\n\r\n    this.setState({ [name]: scrubbedVal });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"newpageForm props\", this.props);\r\n    return (\r\n      <div>\r\n        <form>\r\n          <Input\r\n            inputtype=\"input\"\r\n            label=\"Page Title\"\r\n            name=\"title\"\r\n            value={this.state.title}\r\n            onChange={this.onInputChange}\r\n          />\r\n          {this.props.navigationItems !== null && (\r\n            <div>\r\n              <Input\r\n                inputtype=\"checkbox\"\r\n                sideLabel=\"Is this a dropdown SubPage\"\r\n                checked={this.state.checked}\r\n                handleChange={this.handleCheckbox}\r\n              />\r\n              <br />\r\n              {this.state.checked && (\r\n                <Input\r\n                  inputtype=\"select\"\r\n                  value={this.state.selectVal}\r\n                  label=\"Choose the parent page for this Subpage\"\r\n                  items={this.props.navigationItems}\r\n                  onSelectChange={this.onSelectChange}\r\n                />\r\n              )}\r\n            </div>\r\n          )}\r\n        </form>\r\n        <Flex justifyContent=\"flex-end\" margin=\"5px\">\r\n          <Button onClick={this.props.handleClose}>Cancel</Button>\r\n          <Button\r\n            onClick={() => this.props.handleSubmit(this.state)}\r\n            disabled={this.state.title === \"\" ? true : false}\r\n          >\r\n            Confirm\r\n          </Button>\r\n          {this.props.loading && <Spinner />}\r\n        </Flex>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//       //updateNewPageData: () => dispatch(actions.newPageData()),\r\n//   }\r\n// }\r\n\r\n//export default connect(null, mapDispatchToProps)(NewPageForm)\r\nexport default NewPageForm;\r\n","import React, { Component } from \"react\";\r\n\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nclass TitlebarGridList extends Component {\r\n  state = {\r\n    columns: 5,\r\n    spacing: 20,\r\n    activeIndex: null,\r\n    selectedValue: \"\",\r\n    selectedName: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n    this.handleResize();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.handleResize);\r\n  }\r\n\r\n  handleResize = () => {\r\n    const windowSize = window.innerWidth;\r\n    const columns = (windowSize > 768 && 5) || (windowSize <= 480 && 1) || 3;\r\n    const spacing = (windowSize > 768 && 20) || 8;\r\n\r\n    this.setState({\r\n      columns,\r\n      spacing\r\n    });\r\n  };\r\n\r\n  handleSelect = (event, index, tile) => {\r\n    this.props.selectedImage(index, tile);\r\n  };\r\n\r\n  render() {\r\n    const { tileData } = this.props;\r\n    if (!tileData || !tileData.length) return <div />;\r\n\r\n    return (\r\n      <StyledGrid>\r\n        <GridList\r\n          cellHeight={180}\r\n          className=\"gridList\"\r\n          cols={this.state.columns}\r\n          spacing={this.state.spacing}\r\n        >\r\n          <GridListTile\r\n            key=\"Subheader\"\r\n            cols={this.state.columns}\r\n            style={{ height: \"auto\" }}\r\n          >\r\n            <ListSubheader component=\"div\">\r\n              This is where your current websites images located.\r\n            </ListSubheader>\r\n          </GridListTile>\r\n          {tileData.map((tile, index) => {\r\n            const gridTileClass =\r\n              this.props.selectedIndex === index ? \"media active\" : \"media\";\r\n\r\n            return (\r\n              <GridListTile\r\n                key={tile.title}\r\n                className={gridTileClass}\r\n                onClick={e => this.handleSelect(e, index, tile)}\r\n              >\r\n                <img src={tile.img} alt={tile.title} />\r\n                <GridListTileBar\r\n                  title={tile.title}\r\n                  actionIcon={\r\n                    !this.props.isModal ? (\r\n                      <IconButton\r\n                        className=\"gridIcon\"\r\n                        onClick={() =>\r\n                          this.props.deleteImage(tile.img, tile.title)\r\n                        }\r\n                      >\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    ) : (\r\n                      false\r\n                    )\r\n                  }\r\n                />\r\n              </GridListTile>\r\n            );\r\n          })}\r\n        </GridList>\r\n      </StyledGrid>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledGrid = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  /* justify-content: space-around; */\r\n  overflow: hidden;\r\n  margin: 20px 0;\r\n  padding: 10px;\r\n\r\n  .gridlist {\r\n    width: 100%;\r\n    height: 450px;\r\n  }\r\n\r\n  .media {\r\n    padding: 3px;\r\n    cursor: pointer;\r\n    -webkit-transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\r\n    -moz-transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\r\n    -ms-transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\r\n    -o-transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\r\n    transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\r\n  }\r\n\r\n  .media.active {\r\n    border: 1px solid #09c;\r\n    border-radius: 5px;\r\n    box-shadow: 1px 1px 7px rgba(0, 200, 204, 0.7);\r\n    outline: none;\r\n  }\r\n\r\n  .gridIcon {\r\n    color: rgba(255, 255, 255, 0.54);\r\n  }\r\n`;\r\n\r\nexport default TitlebarGridList;\r\n","import React, { Component } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nimport \"firebase/storage\";\r\n\r\nimport classNames from \"classnames\";\r\n\r\nimport styled from \"styled-components\";\r\nimport Button from \"../../../components/UI/Buttons/Button\";\r\nimport Input from \"../../../components/UI/Input\";\r\nimport Flex from \"../../../components/UI/Wrappers/Flex\";\r\nimport Box from \"../../../components/UI/Wrappers/Box\";\r\nimport Modal from \"../../../components/UI/Modal\";\r\nimport Spinner from \"../../../components/UI/Spinner\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ImgGridList from \"./ImgGridList\";\r\n\r\nclass Media extends Component {\r\n  state = {\r\n    uploadOpen: false,\r\n    error: null,\r\n    customURL: false,\r\n    customURLtext: \"\",\r\n    activeIndex: null,\r\n    selectedValue: \"\",\r\n    selectedName: \"\",\r\n    deleteImgOpen: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"mounted\");\r\n    this.getImageUrls();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.currentImages === null) return;\r\n\r\n    if (\r\n      this.props.currentImages !== prevProps.currentImages ||\r\n      this.props.isAuthenticated !== prevProps.isAuthenticated\r\n    ) {\r\n      this.getImageUrls();\r\n    }\r\n  }\r\n\r\n  getImageUrls = () => {\r\n    const that = this;\r\n    let imageContainer = [];\r\n    let imageCount = Object.keys(this.props.currentImages).length;\r\n    let returnedCount = 0;\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n\r\n    let storageRef = firebase.storage().ref();\r\n\r\n    Object.keys(this.props.currentImages).map((key, i) => {\r\n      const img = this.props.currentImages[key];\r\n      return storageRef\r\n        .child(`${siteName}/${img}`)\r\n        .getDownloadURL()\r\n        .then(url => {\r\n          imageContainer = [...imageContainer, { title: img, img: url, key }];\r\n          returnedCount++;\r\n\r\n          if (imageCount === returnedCount) {\r\n            that.props.setMediaImages(imageContainer);\r\n          }\r\n        })\r\n        .catch(error => {\r\n          // Handle any errors\r\n          console.log(error);\r\n        });\r\n    });\r\n  };\r\n\r\n  onDrop = (acceptedFiles, rejectedFiles) => {\r\n    // Do something with files\r\n    console.log(\"accepted\", acceptedFiles);\r\n    console.log(\"rejected\", rejectedFiles);\r\n    if (rejectedFiles.length !== 0) {\r\n      this.setState({ error: \"Rejected upload, incompatable file detected\" });\r\n      return;\r\n    }\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n    const user = firebase.auth().currentUser;\r\n\r\n    if (user) {\r\n      console.log(\"user is signed in\");\r\n      const file = acceptedFiles[0];\r\n      if (this.checkFileAlreadyExists(file)) {\r\n        this.setState({\r\n          error: `${\r\n            file.name\r\n          } already exists, please remove the old image first`\r\n        });\r\n        return;\r\n      }\r\n      firebase\r\n        .storage()\r\n        .ref()\r\n        .child(`${siteName}/${file.name}`)\r\n        .put(file)\r\n        .then(snapshot => {\r\n          console.log(\"Uploaded a blob or file!\");\r\n          console.log(snapshot);\r\n          this.addImageRefToDb(file);\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      // No user is signed in.\r\n      console.log(\" No user is signed in.\");\r\n      this.props.isTimedOut();\r\n    }\r\n  };\r\n\r\n  checkFileAlreadyExists = file => {\r\n    if (this.props.currentImages === null) return;\r\n\r\n    \r\n\r\n    const findImageRef = Object.keys(this.props.currentImages).filter(\r\n      (key, i) => {\r\n        const img = this.props.currentImages[key];\r\n        return img === file.name;\r\n      }\r\n    );\r\n\r\n    return !findImageRef.length ? false : true;\r\n  };\r\n  \r\n\r\n  addImageRefToDb = file => {\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n\r\n    var newPostKey = firebase\r\n      .database()\r\n      .ref()\r\n      .child(`${siteName}/site/images`)\r\n      .push().key;\r\n    var updates = { [newPostKey]: file.name };\r\n    const that = this;\r\n\r\n    return firebase\r\n      .database()\r\n      .ref()\r\n      .child(`${siteName}/site/images`)\r\n      .update(updates, function(error) {\r\n        if (error) {\r\n          // The write failed...\r\n          console.log(\"image ref in db write failed...\", error);\r\n        } else {\r\n          // Data saved successfully!\r\n          console.log(\"image ref in db saved successfully\");\r\n          that.props.refreshState();\r\n        }\r\n      });\r\n  };\r\n\r\n  selectedImage = (index, tile) => {\r\n    this.setState({\r\n      customURLtext: \"\",\r\n      activeIndex: index,\r\n      selectedValue: tile.img,\r\n      selectedName: tile.title\r\n    });\r\n  };\r\n\r\n  handleCustomURL = event => {\r\n    this.setState({\r\n      customURLtext: event.target.value,\r\n      activeIndex: null,\r\n      selectedValue: \"\",\r\n      selectedName: \"\"\r\n    });\r\n  };\r\n\r\n  confirmImage = () => {\r\n    const { customURLtext, selectedValue } = this.state;\r\n    const { tabItemReference } = this.props;\r\n    let image = customURLtext ? customURLtext : selectedValue;\r\n\r\n    this.props.onChangePageState(\r\n      { name: tabItemReference[0].name, value: image },\r\n      tabItemReference[1],\r\n      tabItemReference[2]\r\n    );\r\n    this.props.handleClose();\r\n  };\r\n\r\n  deleteImage = (imgUrl, name) => {\r\n    console.log(imgUrl, name);\r\n    this.setState({ deleteImgOpen: true });\r\n  };\r\n\r\n  confirmDelete = () => {\r\n    console.log(this.state, this.props);\r\n    const that = this;\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n\r\n    const img = this.props.imageURLs.find(\r\n      img => img.title === this.state.selectedName\r\n    );\r\n    let storageRef = firebase.storage().ref();\r\n\r\n    console.log(\"pre delete\");\r\n    firebase\r\n      .database()\r\n      .ref()\r\n      .child(`${siteName}/site/images/${img.key}`)\r\n      .remove()\r\n      .then(() => {\r\n        console.log(\"db delete succeeded!\");\r\n        storageRef\r\n          .child(`${siteName}/${img.title}`)\r\n          .delete()\r\n          .then(function() {\r\n            // File deleted successfully\r\n            console.log(\"storage img deleted\");\r\n            that.setState({ deleteImgOpen: false });\r\n            that.props.refreshState();\r\n          })\r\n          .catch(function(error) {\r\n            // Uh-oh, an error occurred!\r\n            console.log(\"storage error\", error);\r\n          });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  handleUploadOpen = () => {\r\n    this.setState({ uploadOpen: !this.state.uploadOpen });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"media props\", this.props);\r\n    const {\r\n      error,\r\n      uploadOpen,\r\n      customURL,\r\n      activeIndex,\r\n      customURLtext,\r\n      selectedName,\r\n      selectedValue\r\n    } = this.state;\r\n    const { imageURLs, currentImages } = this.props;\r\n\r\n    let dropZone = null;\r\n    let mediaTemplate = null;\r\n    let noMediaMessage = null;\r\n\r\n    if (imageURLs.length === 0 && currentImages) {\r\n      noMediaMessage = (\r\n        <div>\r\n          <p>\r\n            <i>\r\n              Loading media, if nothing appears after ten seconds. Please\r\n              refresh the page{\" \"}\r\n            </i>\r\n          </p>\r\n          <Spinner />\r\n        </div>\r\n      );\r\n    } else if (currentImages === null) {\r\n      noMediaMessage = (\r\n        <div>\r\n          <p>\r\n            <i>\r\n              Here is where you can add images to your website, Click upload\r\n              media to create your media library\r\n            </i>\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (uploadOpen && !this.props.isModal) {\r\n      dropZone = (\r\n        <Dropzone onDrop={this.onDrop} multiple={false} accept=\"image/*\">\r\n          {({ getRootProps, getInputProps, isDragActive }) => {\r\n            return (\r\n              <StyledDropArea\r\n                {...getRootProps()}\r\n                className={classNames(\"dropzone\", {\r\n                  \"dropzone--isActive\": isDragActive\r\n                })}\r\n              >\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                  <p>Drop files here...</p>\r\n                ) : (\r\n                  <p>\r\n                    Try dropping some files here, or click to select files to\r\n                    upload.\r\n                  </p>\r\n                )}\r\n              </StyledDropArea>\r\n            );\r\n          }}\r\n        </Dropzone>\r\n      );\r\n    }\r\n\r\n    if (!this.props.isModal) {\r\n      mediaTemplate = (\r\n        <div>\r\n          {noMediaMessage}\r\n          <Button onClick={this.handleUploadOpen}>\r\n            {uploadOpen ? \"Close DropZone\" : \"Upload Media\"}\r\n          </Button>\r\n          {dropZone}\r\n          {error && <div>{error}</div>}\r\n          <Paper elevation={7}>\r\n            <ImgGridList\r\n              tileData={this.props.imageURLs}\r\n              isModal={false}\r\n              selectedIndex={activeIndex}\r\n              selectedImage={this.selectedImage}\r\n              deleteImage={this.deleteImage}\r\n            />\r\n          </Paper>\r\n        </div>\r\n      );\r\n    } else {\r\n      const selectedLabel = `Current Selection:  ${selectedName}`;\r\n      mediaTemplate = (\r\n        <IsMediaModal>\r\n          {noMediaMessage}\r\n          <Flex>\r\n            <Box opacity={customURL}>\r\n              <Button\r\n                onClick={() => {\r\n                  this.setState({ customURL: false });\r\n                }}\r\n              >\r\n                Use Media Library\r\n              </Button>\r\n            </Box>\r\n            <h2>OR ..</h2>\r\n            <Box opacity={!customURL}>\r\n              <Button\r\n                onClick={() => {\r\n                  this.setState({ customURL: true });\r\n                }}\r\n              >\r\n                {\" \"}\r\n                {!customURL ? \"Use\" : \"Close\"} custom URL location?\r\n              </Button>\r\n            </Box>\r\n          </Flex>\r\n          {/* <Fade in={customURL}> */}\r\n          {customURL ? (\r\n            <Input\r\n              inputtype=\"input\"\r\n              label=\"If you want to use an image stored elsewhere, enter the Url address below\"\r\n              value={customURLtext}\r\n              onChange={this.handleCustomURL}\r\n            />\r\n          ) : (\r\n            <div>\r\n              <Paper elevation={5}>\r\n                <ImgGridList\r\n                  tileData={this.props.imageURLs}\r\n                  isModal={true}\r\n                  selectedIndex={activeIndex}\r\n                  selectedImage={this.selectedImage}\r\n                />\r\n              </Paper>\r\n              <Input\r\n                inputtype=\"input\"\r\n                label={`${\r\n                  selectedValue ? selectedLabel : \"Select Media Image URL above\"\r\n                }`}\r\n                value={selectedValue}\r\n                disabled={true}\r\n                placeholder=\"No Media image selected\"\r\n              />\r\n            </div>\r\n          )}\r\n          {/* </Fade> */}\r\n          <Divider />\r\n          <br />\r\n          <Flex>\r\n            <Button onClick={this.props.handleClose}>Cancel</Button>\r\n            <Button onClick={this.confirmImage}>Confirm Image</Button>\r\n          </Flex>\r\n          <br />\r\n        </IsMediaModal>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {mediaTemplate}\r\n        <Modal\r\n          open={this.state.deleteImgOpen}\r\n          handleClose={() => this.setState({ deleteImgOpen: false })}\r\n          title=\"Delete image\"\r\n          description={`Are you sure you would like to delete the image ${\r\n            this.state.selectedName\r\n          }. \\n Please note that anywhere this image is used on the website will no longer work once the image is deleted.`}\r\n        >\r\n          <Flex>\r\n            <Button onClick={this.confirmDelete}>Confirm Delete</Button>\r\n            <Button onClick={() => this.setState({ deleteImgOpen: false })}>\r\n              Cancel\r\n            </Button>\r\n          </Flex>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledDropArea = styled.div`\r\n  border-style: dotted;\r\n  padding: 5px 20px;\r\n  margin: 20px 5px;\r\n  cursor: pointer;\r\n\r\n  /* desktop */\r\n  @media (min-width: 500px) {\r\n    min-width: 455px;\r\n  }\r\n`;\r\n\r\nconst IsMediaModal = styled.div`\r\n  margin-top: -40px;\r\n`;\r\n\r\nexport default Media;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Input from \"../../../components/UI/Input\";\r\nimport Button from \"../../../components/UI/Buttons/Button\";\r\nimport Flex from \"../../../components/UI/Wrappers/Flex\";\r\nimport Grid from \"../../../components/UI/Wrappers/Grid\";\r\nimport Spinner from \"../../../components/UI/Spinner\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nclass Template extends Component {\r\n  handleChange = event => {\r\n    event.preventDefault();\r\n    this.props.changeTemplateState(event.target, \"template\", null);\r\n  };\r\n\r\n  handlesubmit = event => {\r\n    event.preventDefault();\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n\r\n    const url = `/${siteName}/site/template`;\r\n    this.props.templateChangeSubmit(url, this.props.template);\r\n  };\r\n\r\n  handleCheckbox = check => event => {\r\n    console.log(check, event.target.checked);\r\n    const newevent = {\r\n      name: event.target.name,\r\n      value: event.target.checked\r\n    };\r\n    this.props.changeTemplateState(newevent, \"template\", null);\r\n  };\r\n\r\n  handleMediaModal = event => {\r\n    event.preventDefault();\r\n    this.props.openMediaModal(event.target, \"template\", null);\r\n  };\r\n\r\n  clearInput = inputName => {\r\n    const event = { name: inputName, value: \"\" };\r\n    this.props.changeTemplateState(event, \"template\", null);\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.template) return <div />;\r\n    //console.log('templateProps', this.props)\r\n    const buttonStyle = [{ value: \"contained\" }, { value: \"outlined\" }];\r\n    const {\r\n      navButtons,\r\n      siteButtons,\r\n      transparentHeader,\r\n      navLightTheme,\r\n      siteLogo,\r\n      version\r\n    } = this.props.template;\r\n\r\n    return (\r\n      <StyledTemplate>\r\n        <Flex>\r\n          <Input\r\n            inputtype=\"checkbox\"\r\n            sideLabel=\"Is the header toolbar transparent\"\r\n            name=\"transparentHeader\"\r\n            checked={transparentHeader}\r\n            handleChange={this.handleCheckbox}\r\n          />\r\n          <Input\r\n            inputtype=\"checkbox\"\r\n            sideLabel=\"Use Light theme for navigation Bar\"\r\n            name=\"navLightTheme\"\r\n            checked={navLightTheme}\r\n            handleChange={this.handleCheckbox}\r\n          />\r\n        </Flex>\r\n        <Input\r\n          inputtype=\"inputSelector\"\r\n          label=\"Website Logo\"\r\n          name=\"siteLogo\"\r\n          value={siteLogo}\r\n          onChange={this.handleChange}\r\n          onClick={this.handleMediaModal}\r\n          clearInput={this.clearInput}\r\n        />\r\n        <br />\r\n        <Grid cols=\"25% 25%\" colsLarge={\"35% 35%\"} colsMed={\"50% 50%\"}>\r\n          <Input\r\n            inputtype=\"select\"\r\n            label=\"Header Navigation button style\"\r\n            name=\"navButtons\"\r\n            value={navButtons}\r\n            items={buttonStyle}\r\n            onSelectChange={this.handleChange}\r\n          />\r\n          <Input\r\n            inputtype=\"select\"\r\n            label=\"Webpage button style\"\r\n            name=\"siteButtons\"\r\n            value={siteButtons}\r\n            items={buttonStyle}\r\n            onSelectChange={this.handleChange}\r\n          />\r\n          <Button variant={navButtons}>\r\n            {navButtons === \"contained\" ? \"Contained Style\" : \"Outlined Style\"}\r\n          </Button>\r\n          <Button variant={siteButtons}>\r\n            {siteButtons === \"contained\" ? \"Contained Style\" : \"Outlined Style\"}\r\n          </Button>\r\n        </Grid>\r\n        <br />\r\n        <hr />\r\n        <br />\r\n        <Flex justifyContent=\"flex-start\">\r\n          <Button margin=\"2px 5px 15px 20px\" onClick={this.handlesubmit}>\r\n            Update\r\n          </Button>\r\n          {this.props.isUpdating && <Spinner />}\r\n          {this.props.stateBackup && (\r\n            <Button\r\n              margin=\"2px 20px 15px 20px\"\r\n              onClick={this.props.cancelUpdate}\r\n            >\r\n              Undo Changes\r\n            </Button>\r\n          )}\r\n        </Flex>\r\n      </StyledTemplate>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledTemplate = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nexport default Template;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Input from \"../../../components/UI/Input\";\r\nimport Button from \"../../../components/UI/Buttons/Button\";\r\nimport Flex from \"../../../components/UI/Wrappers/Flex\";\r\nimport Grid from \"../../../components/UI/Wrappers/Grid\";\r\nimport Box from \"../../../components/UI/Wrappers/Box\";\r\nimport Spinner from \"../../../components/UI/Spinner\";\r\nimport Minimizer from \"../../../components/UI/Wrappers/Minimizer\";\r\n\r\nimport Dashboard from \"../../Dashboard/Dashboard\";\r\n\r\nclass Homepage extends Component {\r\n  state = {\r\n    previewOpen: false\r\n  };\r\n\r\n  handleChange = event => {\r\n    event.preventDefault();\r\n    this.props.changeHomepageState(event.target, \"home\", null);\r\n  };\r\n\r\n  handlesubmit = event => {\r\n    event.preventDefault();\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n\r\n    const url = `/${siteName}/site/home/content`;\r\n    this.props.homepageChangeSubmit(url, this.props.homePage.content);\r\n  };\r\n\r\n  handleCheckbox = check => event => {\r\n    console.log(check, event.target.checked);\r\n    const newevent = {\r\n      name: event.target.name,\r\n      value: event.target.checked\r\n    };\r\n    this.props.changeHomepageState(newevent, \"home\", null);\r\n  };\r\n\r\n  handleMediaModal = event => {\r\n    event.preventDefault();\r\n    this.props.openMediaModal(event.target, \"home\", null);\r\n  };\r\n\r\n  handleColourPicker = event => {\r\n    this.props.changeHomepageState(event.target, \"home\", null);\r\n  };\r\n\r\n  clearInput = inputName => {\r\n    const event = { name: inputName, value: \"\" };\r\n    this.props.changeHomepageState(event, \"home\", null);\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.homePage) return <div />;\r\n    const positionArray = [\r\n      { value: \"Top\" },\r\n      { value: \"Middle\" },\r\n      { value: \"Bottom\" }\r\n    ];\r\n    const floatArray = [{ value: \"left\" }, { value: \"right\" }];\r\n\r\n    const {\r\n      topBanner,\r\n      topBannerHalfwidth,\r\n      topBannerImgSize,\r\n      topBannerHWbackImg,\r\n      topBannerHWBackColour,\r\n      topBannerTxtRightSide,\r\n      topBannerTxtLightTheme,\r\n      topBannerLogo,\r\n      topBannerfade,\r\n      topBannerTitle,\r\n      topBannerSubtitle,\r\n      topBannerDescription,\r\n      topBannerBtnText,\r\n      topBannerLink,\r\n      midBanner,\r\n      midBannerHalfwidth,\r\n      midBannerImgSize,\r\n      midBannerHWbackImg,\r\n      midBannerHWBackColour,\r\n      midBannerTxtRightSide,\r\n      midBannerTxtLightTheme,\r\n      midBannerLogo,\r\n      midBannerfade,\r\n      midBannerTitle,\r\n      midBannerSubtitle,\r\n      midBannerDescription,\r\n      midBannerBtnText,\r\n      midBannerLink,\r\n      bottomBanner,\r\n      mainText,\r\n      mainTextPosition,\r\n      mainTextCenterTitle,\r\n      mainTextRightSide,\r\n      mainTextBackColour,\r\n      mainTextImg,\r\n      mainTextImgAlign,\r\n      mainTextImgWidth,\r\n      mainTextImgHeight\r\n    } = this.props.homePage.content;\r\n    console.log(\"Homepage Props\", this.props);\r\n\r\n    return (\r\n      <div className=\"fullwidth\">\r\n        <StyledHomePage>\r\n          <div>\r\n            <Input\r\n              inputtype=\"inputSelector\"\r\n              label={`${\r\n                topBannerHalfwidth\r\n                  ? \"Top Banner Image (Inside Banner)\"\r\n                  : \"Top Banner Image\"\r\n              }`}\r\n              name=\"topBanner\"\r\n              value={topBanner}\r\n              onChange={this.handleChange}\r\n              onClick={this.handleMediaModal}\r\n              clearInput={this.clearInput}\r\n            />\r\n            {topBanner && (\r\n              <Minimizer>\r\n                <Box>\r\n                  <Flex>\r\n                    <Input\r\n                      inputtype=\"checkbox\"\r\n                      sideLabel=\"Use the Top Banner image inside the Banner \"\r\n                      name=\"topBannerHalfwidth\"\r\n                      checked={topBannerHalfwidth}\r\n                      handleChange={this.handleCheckbox}\r\n                    />\r\n                  </Flex>\r\n                  {topBannerHalfwidth && (\r\n                    <>\r\n                      <Input\r\n                        inputtype=\"inputSelector\"\r\n                        label=\"Banner Background Image\"\r\n                        name=\"topBannerHWbackImg\"\r\n                        value={topBannerHWbackImg}\r\n                        onChange={this.handleChange}\r\n                        onClick={this.handleMediaModal}\r\n                        clearInput={this.clearInput}\r\n                      />\r\n                      <Flex>\r\n                        <Input\r\n                          inputtype=\"input\"\r\n                          type=\"number\"\r\n                          label=\"Banner Image Size\"\r\n                          name=\"topBannerImgSize\"\r\n                          value={topBannerImgSize}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        <Input\r\n                          inputtype=\"inputColourPicker\"\r\n                          label=\"Banner Background Colour\"\r\n                          name=\"topBannerHWBackColour\"\r\n                          value={topBannerHWBackColour}\r\n                          changeColour={this.handleColourPicker}\r\n                          pageId={\"home\"}\r\n                        />\r\n                      </Flex>\r\n                    </>\r\n                  )}\r\n                  <Flex>\r\n                    <Input\r\n                      inputtype=\"checkbox\"\r\n                      sideLabel=\"Banner Text Right Side\"\r\n                      name=\"topBannerTxtRightSide\"\r\n                      checked={topBannerTxtRightSide}\r\n                      handleChange={this.handleCheckbox}\r\n                    />\r\n                    <Input\r\n                      inputtype=\"checkbox\"\r\n                      sideLabel=\"Banner Light Text Color\"\r\n                      name=\"topBannerTxtLightTheme\"\r\n                      checked={topBannerTxtLightTheme}\r\n                      handleChange={this.handleCheckbox}\r\n                    />\r\n                  </Flex>\r\n                  <Flex>\r\n                    <Input\r\n                      inputtype=\"checkbox\"\r\n                      sideLabel=\"Use Logo in banner\"\r\n                      name=\"topBannerLogo\"\r\n                      checked={topBannerLogo}\r\n                      handleChange={this.handleCheckbox}\r\n                    />\r\n                    <Input\r\n                      inputtype=\"checkbox\"\r\n                      sideLabel=\"Banner content fade in effect\"\r\n                      name=\"topBannerfade\"\r\n                      checked={topBannerfade}\r\n                      handleChange={this.handleCheckbox}\r\n                    />\r\n                  </Flex>\r\n                  <Input\r\n                    inputtype=\"input\"\r\n                    label=\"Banner Title\"\r\n                    name=\"topBannerTitle\"\r\n                    value={topBannerTitle}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <Input\r\n                    inputtype=\"input\"\r\n                    label=\"Banner Subtitle\"\r\n                    name=\"topBannerSubtitle\"\r\n                    value={topBannerSubtitle}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <Input\r\n                    inputtype=\"input\"\r\n                    label=\"Banner Description\"\r\n                    name=\"topBannerDescription\"\r\n                    value={topBannerDescription}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <Flex>\r\n                    <Input\r\n                      inputtype=\"input\"\r\n                      label=\"Banner Button Text\"\r\n                      name=\"topBannerBtnText\"\r\n                      value={topBannerBtnText}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                    <Input\r\n                      inputtype=\"select\"\r\n                      label=\"Banner Link\"\r\n                      name=\"topBannerLink\"\r\n                      value={topBannerLink}\r\n                      items={this.props.availableRoutes}\r\n                      onSelectChange={this.handleChange}\r\n                    />\r\n                  </Flex>\r\n                </Box>\r\n              </Minimizer>\r\n            )}\r\n            <Input\r\n              inputtype=\"inputSelector\"\r\n              label={`${\r\n                midBannerHalfwidth\r\n                  ? \"Middle Banner Image (Inside Banner)\"\r\n                  : \"Middle Banner Image\"\r\n              }`}\r\n              name=\"midBanner\"\r\n              value={midBanner}\r\n              onChange={this.handleChange}\r\n              onClick={this.handleMediaModal}\r\n              clearInput={this.clearInput}\r\n            />\r\n            {midBanner && (\r\n              <Minimizer>\r\n                <Box>\r\n                  <Flex>\r\n                    <Input\r\n                      inputtype=\"checkbox\"\r\n                      sideLabel=\"Use the Middle Banner image inside the Banner\"\r\n                      name=\"midBannerHalfwidth\"\r\n                      checked={midBannerHalfwidth}\r\n                      handleChange={this.handleCheckbox}\r\n                    />\r\n                  </Flex>\r\n                  {midBannerHalfwidth && (\r\n                    <>\r\n                      <Input\r\n                        inputtype=\"inputSelector\"\r\n                        label=\"Banner Background Image\"\r\n                        name=\"midBannerHWbackImg\"\r\n                        value={midBannerHWbackImg}\r\n                        onChange={this.handleChange}\r\n                        onClick={this.handleMediaModal}\r\n                        clearInput={this.clearInput}\r\n                      />\r\n                      <Flex>\r\n                        <Input\r\n                          inputtype=\"input\"\r\n                          type=\"number\"\r\n                          label=\"Banner Image Size\"\r\n                          name=\"midBannerImgSize\"\r\n                          value={midBannerImgSize}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        <Input\r\n                          inputtype=\"inputColourPicker\"\r\n                          label=\"Banner Background Colour\"\r\n                          name=\"midBannerHWBackColour\"\r\n                          value={midBannerHWBackColour}\r\n                          changeColour={this.handleColourPicker}\r\n                          pageId={\"home\"}\r\n                        />\r\n                      </Flex>\r\n                    </>\r\n                  )}\r\n                  <Flex>\r\n                    <Input\r\n                      inputtype=\"checkbox\"\r\n                      sideLabel=\"Banner Text Right Side\"\r\n                      name=\"midBannerTxtRightSide\"\r\n                      checked={midBannerTxtRightSide}\r\n                      handleChange={this.handleCheckbox}\r\n                    />\r\n                    <Input\r\n                      inputtype=\"checkbox\"\r\n                      sideLabel=\"Banner Light Text Color\"\r\n                      name=\"midBannerTxtLightTheme\"\r\n                      checked={midBannerTxtLightTheme}\r\n                      handleChange={this.handleCheckbox}\r\n                    />\r\n                  </Flex>\r\n                  <Flex>\r\n                    <Input\r\n                      inputtype=\"checkbox\"\r\n                      sideLabel=\"Use Logo in banner\"\r\n                      name=\"midBannerLogo\"\r\n                      checked={midBannerLogo}\r\n                      handleChange={this.handleCheckbox}\r\n                    />\r\n                    <Input\r\n                      inputtype=\"checkbox\"\r\n                      sideLabel=\"Banner content fade in effect\"\r\n                      name=\"midBannerfade\"\r\n                      checked={midBannerfade}\r\n                      handleChange={this.handleCheckbox}\r\n                    />\r\n                  </Flex>\r\n                  <Input\r\n                    inputtype=\"input\"\r\n                    label=\"Banner Title\"\r\n                    name=\"midBannerTitle\"\r\n                    value={midBannerTitle}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <Input\r\n                    inputtype=\"input\"\r\n                    label=\"Banner Subtitle\"\r\n                    name=\"midBannerSubtitle\"\r\n                    value={midBannerSubtitle}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <Input\r\n                    inputtype=\"input\"\r\n                    label=\"Banner Description\"\r\n                    name=\"midBannerDescription\"\r\n                    value={midBannerDescription}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <Flex>\r\n                    <Input\r\n                      inputtype=\"input\"\r\n                      label=\"Banner Button Text\"\r\n                      name=\"midBannerBtnText\"\r\n                      value={midBannerBtnText}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                    <Input\r\n                      inputtype=\"select\"\r\n                      label=\"Banner Link\"\r\n                      name=\"midBannerLink\"\r\n                      value={midBannerLink}\r\n                      items={this.props.availableRoutes}\r\n                      onSelectChange={this.handleChange}\r\n                    />\r\n                  </Flex>\r\n                </Box>\r\n              </Minimizer>\r\n            )}\r\n            <Input\r\n              inputtype=\"textarea\"\r\n              label=\"Main Body Text\"\r\n              name=\"mainText\"\r\n              value={mainText}\r\n              onChange={this.handleChange}\r\n            />\r\n            <Minimizer>\r\n              <Box>\r\n                <Flex>\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Center Header text\"\r\n                    name=\"mainTextCenterTitle\"\r\n                    checked={mainTextCenterTitle}\r\n                    handleChange={this.handleCheckbox}\r\n                  />\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Align Text Right Side\"\r\n                    name=\"mainTextRightSide\"\r\n                    checked={mainTextRightSide}\r\n                    handleChange={this.handleCheckbox}\r\n                  />\r\n                </Flex>\r\n                <Input\r\n                  inputtype=\"select\"\r\n                  label=\"Main Text Page Position\"\r\n                  name=\"mainTextPosition\"\r\n                  value={mainTextPosition}\r\n                  items={positionArray}\r\n                  onSelectChange={this.handleChange}\r\n                />\r\n                <Input\r\n                  inputtype=\"inputSelector\"\r\n                  label=\"Add a Small Image\"\r\n                  name=\"mainTextImg\"\r\n                  value={mainTextImg}\r\n                  onChange={this.handleChange}\r\n                  onClick={this.handleMediaModal}\r\n                  clearInput={this.clearInput}\r\n                />\r\n                <Grid cols={\"33% 33% 33%\"} margin={\"0 15px 0 0\"}>\r\n                  <Input\r\n                    inputtype=\"select\"\r\n                    label=\"Image align position\"\r\n                    name=\"mainTextImgAlign\"\r\n                    value={mainTextImgAlign}\r\n                    items={floatArray}\r\n                    onSelectChange={this.handleChange}\r\n                  />\r\n                  <Input\r\n                    inputtype=\"input\"\r\n                    type=\"number\"\r\n                    label=\"Banner Image Width\"\r\n                    name=\"mainTextImgWidth\"\r\n                    value={mainTextImgWidth || 200}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <Input\r\n                    inputtype=\"input\"\r\n                    type=\"number\"\r\n                    label=\"Banner Image Height\"\r\n                    name=\"mainTextImgHeight\"\r\n                    value={mainTextImgHeight || 135}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Grid>\r\n                <Input\r\n                  inputtype=\"inputColourPicker\"\r\n                  label=\"Banner Background Colour\"\r\n                  name=\"mainTextBackColour\"\r\n                  value={mainTextBackColour}\r\n                  changeColour={this.handleColourPicker}\r\n                  pageId={\"home\"}\r\n                />\r\n              </Box>\r\n            </Minimizer>\r\n          </div>\r\n          <Preview>\r\n            <Dashboard\r\n              pageInfo={this.props.homePage}\r\n              {...this.props}\r\n              template={this.props.template}\r\n              overlayBlocker={true}\r\n            />\r\n          </Preview>\r\n        </StyledHomePage>\r\n        <Flex justifyContent=\"flex-start\">\r\n          <Button margin=\"2px 5px 15px 20px\" onClick={this.handlesubmit}>\r\n            Update\r\n          </Button>\r\n          {this.props.isUpdating && <Spinner />}\r\n          {this.props.stateBackup && (\r\n            <Button\r\n              margin=\"2px 20px 15px 20px\"\r\n              onClick={this.props.cancelUpdate}\r\n            >\r\n              Undo Changes\r\n            </Button>\r\n          )}\r\n        </Flex>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Preview = styled.div`\r\n  display: block;\r\n  zoom: 30%;\r\n  padding-top: 56px;\r\n  box-shadow: 2px 2px 2px;\r\n\r\n  @media (max-width: 500px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst StyledHomePage = styled.div`\r\n  padding: 3vh;\r\n  display: grid;\r\n  grid-gap: 8px;\r\n  grid-template-columns: 65% 35%;\r\n`;\r\n\r\nexport default Homepage;\r\n","import React from \"react\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250\r\n    }\r\n  }\r\n};\r\n\r\nclass MultiSelect extends React.Component {\r\n  state = {\r\n    name: []\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ name: event.target.value });\r\n    if (this.props.handleChange) {\r\n      this.props.handleChange(event);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { label, items, name, value, margin, width } = this.props;\r\n\r\n    return (\r\n      <StyledSelect margin={margin} width={width}>\r\n        <FormControl>\r\n          <InputLabel htmlFor=\"select-multiple-chip\">{label}</InputLabel>\r\n          <Select\r\n            multiple\r\n            value={value || this.state.name}\r\n            onChange={this.handleChange}\r\n            input={<Input id=\"select-multiple-chip\" />}\r\n            name={name}\r\n            renderValue={selected => (\r\n              <div className={\"chips\"}>\r\n                {selected.map(value => (\r\n                  <Chip key={value} label={value} className={\"chip\"} />\r\n                ))}\r\n              </div>\r\n            )}\r\n            MenuProps={MenuProps}\r\n          >\r\n            {items.map(name => (\r\n              <MenuItem key={name} value={name}>\r\n                {name}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </StyledSelect>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledSelect = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;    \r\n    margin: ${props => props.margin || \"8px\"};\r\n\r\n    div {\r\n      /* margin: ${props => props.margin || \"8px\"}; */\r\n      width: ${props => props.width || \"400px\"};\r\n      /* min-width: ${props => props.minwidth || \"200px\"}; */\r\n      max-width: ${props => props.minwidth || \"450px\"};\r\n\r\n      .chips {\r\n        min-width:auto;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        \r\n\r\n        .chip{\r\n          margin: 2px;\r\n          flex-wrap: wrap;\r\n          width: auto;\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n`;\r\n\r\nexport default MultiSelect;\r\n","import React from \"react\";\r\nimport Input from \"../../../../components/UI/Input\";\r\nimport Minimizer from \"../../../../components/UI/Wrappers/Minimizer\";\r\nimport Flex from \"../../../../components/UI/Wrappers/Flex\";\r\n\r\nimport MultiSelect from \"../../../../components/UI/MultiSelect\";\r\n\r\nconst ContactUsPlugin = props => {\r\n  if (!props.plugin) return <div />;\r\n\r\n  const { contactUsActive, contactUsPages, contactUsEmail } = props.plugin;\r\n  console.log(\"contact us settings props\", props);\r\n  return (\r\n    <div>\r\n      <Flex>\r\n        <Input\r\n          inputtype=\"checkbox\"\r\n          sideLabel=\"Contact Us Plugin\"\r\n          parentObj={props.parentObj}\r\n          name=\"contactUsActive\"\r\n          checked={contactUsActive}\r\n          handleChange={props.handleCheckbox}\r\n        />\r\n        {contactUsActive && (\r\n          <MultiSelect\r\n            label=\"Select the pages where this plugin is available\"\r\n            items={props.availableRoutes}\r\n            name=\"contactUsPages\"\r\n            value={contactUsPages}\r\n            handleChange={props.handleChange}\r\n            margin={\"0 10px 20px 15px\"}\r\n          />\r\n        )}\r\n      </Flex>\r\n\r\n      {contactUsActive && (\r\n        <Minimizer padding={\"20px\"}>\r\n          <div>\r\n            <Input\r\n              inputtype=\"input\"\r\n              label=\"Enter Business email where contact requests are received\"\r\n              parentObj={props.parentObj}\r\n              name=\"contactUsEmail\"\r\n              value={contactUsEmail}\r\n              onChange={props.handleChange}\r\n            />\r\n          </div>\r\n        </Minimizer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactUsPlugin;\r\n","import React from \"react\";\r\nimport Input from \"../../../../components/UI/Input\";\r\nimport Minimizer from \"../../../../components/UI/Wrappers/Minimizer\";\r\nimport Flex from \"../../../../components/UI/Wrappers/Flex\";\r\n\r\nimport MultiSelect from \"../../../../components/UI/MultiSelect\";\r\n\r\nconst BookingPlugin = props => {\r\n    if (!props.plugin) return <div />;\r\n\r\n    const { bookingActive, bookingPages, bookingEmail, bookingForm, bookingCalendarID, bookingApiKey, bookingTimeSlotsAvailable, bookingTimeSlots, bookingGetCalandarAdvance, bookingSessions } = props.plugin;\r\n    console.log(\"booking settings props\", props);\r\n    return (\r\n        <div>\r\n            <Flex>\r\n                <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Booking Plugin\"\r\n                    parentObj={props.parentObj}\r\n                    name=\"bookingActive\"\r\n                    checked={bookingActive}\r\n                    handleChange={props.handleCheckbox}\r\n                />\r\n                {bookingActive && (\r\n                    <MultiSelect\r\n                        label=\"Select the pages where this plugin is available\"\r\n                        items={props.availableRoutes}\r\n                        name=\"bookingPages\"\r\n                        value={bookingPages}\r\n                        handleChange={props.handleChange}\r\n                        margin={\"0 10px 20px 15px\"}\r\n                    />\r\n                )}\r\n            </Flex>\r\n\r\n            {bookingActive && (\r\n                <Minimizer emptyHeight={\"200px\"} padding={\"20px\"}>\r\n                    <div>\r\n                        <Input\r\n                            inputtype=\"input\"\r\n                            label=\"Enter Business email where bookings are received\"\r\n                            parentObj={props.parentObj}\r\n                            name=\"bookingEmail\"\r\n                            value={bookingEmail}\r\n                            onChange={props.handleChange}\r\n                        />\r\n                        <Input\r\n                            inputtype=\"input\"\r\n                            label=\"Google Calendar Id\"\r\n                            parentObj={props.parentObj}\r\n                            name=\"bookingCalendarID\"\r\n                            value={bookingCalendarID}\r\n                            onChange={props.handleChange}\r\n                        />\r\n                        <Input\r\n                            inputtype=\"input\"\r\n                            label=\"Google Calendar Api Key\"\r\n                            parentObj={props.parentObj}\r\n                            name=\"bookingApiKey\"\r\n                            value={bookingApiKey}\r\n                            onChange={props.handleChange}\r\n                        />\r\n                        <Input\r\n                            inputtype=\"checkbox\"\r\n                            sideLabel=\"Include Contact form with booking calendar\"\r\n                            parentObj={props.parentObj}\r\n                            name=\"bookingForm\"\r\n                            checked={bookingForm}\r\n                            handleChange={props.handleCheckbox}\r\n                        />\r\n                        <br/>\r\n                        <h2>Booking Calandar options</h2>\r\n                        <Input\r\n                            inputtype=\"checkbox\"\r\n                            sideLabel=\"Timeslots available (leave unticked if booking times do not repeat)\"\r\n                            parentObj={props.parentObj}\r\n                            name=\"bookingTimeSlotsAvailable\"\r\n                            checked={bookingTimeSlotsAvailable}\r\n                            handleChange={props.handleCheckbox}\r\n                        />\r\n                        { bookingTimeSlotsAvailable &&\r\n                        <Input\r\n                            inputtype=\"input\"\r\n                            label=\"Enter the timeslots when events can be booked on a daily bases\"\r\n                            parentObj={props.parentObj}\r\n                            name=\"bookingTimeSlots\"\r\n                            value={bookingTimeSlots}\r\n                            placeholder={'eg 24 hour format..  09:30-10:00, 10:00-10:30, 14:30-15:00'}\r\n                            onChange={props.handleChange}\r\n                        />\r\n                        }\r\n                        <Input\r\n                            inputtype=\"select\"\r\n                            label=\"Select how far in the future customers can book\" \r\n                            value={bookingGetCalandarAdvance}\r\n                            name=\"bookingGetCalandarAdvance\"\r\n                            items={[\r\n                                {value : \"1 month\"},\r\n                                {value : \"2 months\"},\r\n                                {value : \"3 months\"},\r\n                                {value : \"6 months\"},\r\n                                {value : \"9 months\"},\r\n                                {value : \"12 months\"},                           \r\n                            ]}\r\n                            onSelectChange={props.handleChange}\r\n                        />\r\n                        <Input\r\n                            inputtype=\"input\"\r\n                            type=\"number\"\r\n                            label={bookingTimeSlotsAvailable ? 'Booking sessions available per timeslot' : 'Booking sessions available per day'}\r\n                            parentObj={props.parentObj}\r\n                            name=\"bookingSessions\"\r\n                            value={bookingSessions}\r\n                            placeholder={bookingTimeSlotsAvailable ? 'eg. Entering \"6\" will allow 6 bookings per timeslot' : 'eg. Entering \"6\" will allow 6 bookings per day'}\r\n                            onChange={props.handleChange}\r\n                        />\r\n\r\n\r\n                    </div>\r\n                </Minimizer>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookingPlugin;\r\n","import React, { Component } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport Spinner from \"../../../components/UI/Spinner\";\r\nimport Flex from \"../../../components/UI/Wrappers/Flex\";\r\nimport Button from \"../../../components/UI/Buttons/Button\";\r\n\r\nimport ContactUsPlugin from \"./contactUsPlugin/ContactUsPlugin\";\r\nimport BookingPlugin from \"./bookingPlugin/BookingPlugin\";\r\n\r\nclass Plugins extends Component {\r\n  state = {\r\n    contactUsPlugin: false\r\n  };\r\n\r\n  accordianClick = name => {\r\n    this.setState({ [name]: !this.state[name] });\r\n  };\r\n\r\n  handleChange = (event, parentObj) => {\r\n    //event.preventDefault();\r\n    this.props.changePluginState(event.target, \"plugins\", parentObj);\r\n  };\r\n\r\n  handleCheckbox = (check, parentObj) => event => {\r\n    console.log(check, parentObj, event.target.checked);\r\n    const newevent = {\r\n      name: event.target.name,\r\n      value: event.target.checked\r\n    };\r\n    this.props.changePluginState(newevent, \"plugins\", parentObj);\r\n  };\r\n\r\n  handlesubmit = event => {\r\n    event.preventDefault();\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n\r\n    const url = `/${siteName}/site/plugins`;\r\n    this.props.pluginsChangeSubmit(url, this.props.plugins);\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.plugins)\r\n      return (\r\n        <div>\r\n          <Spinner />\r\n        </div>\r\n      );\r\n\r\n    console.log(\"plugins props\", this.props);\r\n\r\n    let availableRoutes = this.props.availableRoutes.map(route => {\r\n      const value = route.value === \"/\" ? \"home\" : route.value;\r\n      let str = value.split(\"/\").pop();\r\n      return str;\r\n    });\r\n\r\n    availableRoutes.unshift(\"All Pages\");\r\n\r\n    return (\r\n      <div>\r\n        <StyledPlugins>\r\n          <ContactUsPlugin\r\n            plugin={this.props.plugins.contactUs}\r\n            name={\"contactUsPlugin\"}\r\n            parentObj=\"contactUs\"\r\n            availableRoutes={availableRoutes}\r\n            accordianClick={this.accordianClick}\r\n            handleCheckbox={this.handleCheckbox}\r\n            handleChange={e => this.handleChange(e, \"contactUs\")}\r\n          />\r\n          <br/><br/>\r\n          <BookingPlugin\r\n            plugin={this.props.plugins.booking}\r\n            name={\"bookingPlugin\"}\r\n            parentObj=\"booking\"\r\n            availableRoutes={availableRoutes}\r\n            accordianClick={this.accordianClick}\r\n            handleCheckbox={this.handleCheckbox}\r\n            onSelectChange={this.onSelectChange}\r\n            handleChange={e => this.handleChange(e, \"booking\")}\r\n          />\r\n        </StyledPlugins>\r\n        <Flex justifyContent=\"flex-start\">\r\n          <Button margin=\"2px 5px 15px 20px\" onClick={this.handlesubmit}>\r\n            Update\r\n          </Button>\r\n          {this.props.isUpdating && <Spinner />}\r\n          {this.props.stateBackup && (\r\n            <Button\r\n              margin=\"2px 20px 15px 20px\"\r\n              onClick={this.props.cancelUpdate}\r\n            >\r\n              Undo Changes\r\n            </Button>\r\n          )}\r\n        </Flex>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledPlugins = styled.div`\r\n  width: 100%;\r\n`;\r\nexport default Plugins;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../store/actions/index\";\r\n\r\nimport Spinner from \"../../components/UI/Spinner\";\r\nimport Button from \"../../components/UI/Buttons/Button\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport Flex from \"../../components/UI/Wrappers/Flex\";\r\n\r\nclass AuthModal extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.isAuthenticated !== prevProps.isAuthenticated) {\r\n      this.props.isTimedOut();\r\n    }\r\n  }\r\n\r\n  onFormChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    this.props.onAuth(this.state.email, this.state.password, this.props.admin);\r\n  };\r\n\r\n  backToHome = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    console.log(\"AuthModal page props\", this.props);\r\n\r\n    let errorMessage = null;\r\n\r\n    if (this.props.error) {\r\n      // const errorCode={\r\n      //   EMAIL_NOT_FOUND: 'There is no user record corresponding to this email address',\r\n      //   INVALID_PASSWORD: 'The password entered was invalid - please try again',\r\n      //   USER_DISABLED: 'The user account has been disabled by an administrator.',\r\n      //   INVALID_EMAIL: 'The email address entered is invalid'\r\n      // }\r\n      errorMessage = (\r\n        // <p>{ errorCode[this.props.error.message] }</p>\r\n        <p>{this.props.error}</p>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>Administrator Login</div>\r\n        <br />\r\n        <Input\r\n          inputtype=\"input\"\r\n          placeholder=\"email\"\r\n          name=\"email\"\r\n          value={this.state.email}\r\n          onChange={this.onFormChange}\r\n        />\r\n        <Input\r\n          inputtype=\"input\"\r\n          placeholder=\"password\"\r\n          name=\"password\"\r\n          value={this.state.password}\r\n          onChange={this.onFormChange}\r\n        />\r\n        {errorMessage}\r\n        <br />\r\n        <Flex>\r\n          <Button onClick={this.backToHome}>Cancel</Button>\r\n          <Button onClick={this.submitHandler}>Submit</Button>\r\n        </Flex>\r\n\r\n        {this.props.loading && <Spinner />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.auth.loading,\r\n    error: state.auth.error,\r\n    admin: state.mainState.admin,\r\n    isAuthenticated: state.auth.userId !== null\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuth: (email, password, admin) =>\r\n      dispatch(actions.auth(email, password, admin))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AuthModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../store/actions/index\";\r\n\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport Accordian from \"../../components/UI/Accordian\";\r\nimport TabsMenu from \"./Navigation/TabsMenu\";\r\nimport Modal from \"../../components/UI/Modal\";\r\nimport Button from \"../../components/UI/Buttons/Button\";\r\nimport Toast from \"../../components/UI/Toast\";\r\nimport Flex from \"../../components/UI/Wrappers/Flex\";\r\n\r\nimport NewPageForm from \"../../components/Forms/NewPageForm\";\r\nimport Media from \"./media/Media\";\r\nimport Template from \"./template/Template\";\r\nimport Homepage from \"./homepage/Homepage\";\r\nimport Plugins from \"./plugins/Plugins\";\r\nimport AuthModal from \"../Auth/AuthModal\";\r\n\r\nclass Admin extends Component {\r\n  state = {\r\n    homepage_accordian: false,\r\n    navigation_accordian: false,\r\n    template_accordian: false,\r\n    media_accordian: false,\r\n\r\n    showSignIn: false,\r\n    newPageOpen: false,\r\n    deletePageModal: false,\r\n    pageToDelete: null,\r\n    openMediaModal: false,\r\n    mediaModalTabItemRef: [],\r\n    mediaImages: [],\r\n    newPageToast: null,\r\n    loading: false,\r\n    error: null\r\n  };\r\n\r\n  componentWillMount() {\r\n    console.log('adminPage - sitename', process.env.REACT_APP_SITENAME)\r\n\r\n    if (!this.props.isAuthenticated && process.env.NODE_ENV === \"production\"){\r\n      this.props.history.push('/authenticate-admin')\r\n    }\r\n\r\n    const user = firebase.auth().currentUser;\r\n\r\n    if (user) {\r\n      // User is signed in.\r\n      console.log(\"user is signed in\");\r\n    } else {\r\n      // No user is signed in.\r\n      console.log(\" No user is signed in.\");\r\n      // firebase.auth().signInWithCustomToken(token).catch(function(error) {\r\n      //     // Handle Errors here.\r\n      //     var errorCode = error.code;\r\n      //     var errorMessage = error.message;\r\n      //     // ...\r\n      // });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    if (prevProps.isAuthenticated && !this.props.isAuthenticated && process.env.NODE_ENV === \"production\"){\r\n      this.props.history.push('/authenticate-admin')\r\n    }\r\n  }\r\n\r\n  logoutHandler = () => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(\r\n        function() {\r\n          console.log(\"Signed Out\");\r\n        },\r\n        function(error) {\r\n          console.error(\"Sign Out Error\", error);\r\n        }\r\n      );\r\n    this.props.onLogoutClick();\r\n  };\r\n\r\n  openMediaModal = (pageInfo, key, parentKey) => {\r\n    console.log(\"opneMedia Modal\", pageInfo, key, parentKey);\r\n    this.setState({\r\n      openMediaModal: true,\r\n      mediaModalTabItemRef: [pageInfo, key, parentKey]\r\n    });\r\n  };\r\n\r\n  closeMediaModal = () => {\r\n    this.setState({ openMediaModal: false });\r\n  };\r\n\r\n  setMediaImages = mediaImages => {\r\n    this.setState({ mediaImages });\r\n  };\r\n\r\n  handleNewPageButton = event => {\r\n    event.preventDefault();\r\n    this.setState({ newPageOpen: !this.state.newPageOpen });\r\n  };\r\n\r\n  submitNewPage = newPage_State => {\r\n    console.log(\"newPage_State\", newPage_State);\r\n    const { title, checked, selectVal } = newPage_State;\r\n    const { navigationItems } = this.props;\r\n    const siteName = process.env.REACT_APP_SITENAME\r\n\r\n    const route = title.replace(/ /g, \"-\").toLowerCase();\r\n\r\n    const defaultContent = {\r\n      id: Date.now(),\r\n      mainText: `This is your newly added ${title} page`\r\n    };\r\n    let url = `/${siteName}/site/navigationItems`;\r\n\r\n    let newPageObj = {\r\n      title,\r\n      route,\r\n      selected: false,\r\n      content: defaultContent\r\n    };\r\n\r\n    if (checked) {\r\n      // const subpageIndex = this.props.navigationItems.findIndex(page => page.title === selectVal);\r\n\r\n      let subpageIndex = null;\r\n      for (let key in navigationItems) {\r\n        if (navigationItems[key].title === selectVal) {\r\n          subpageIndex = key;\r\n        }\r\n      }\r\n\r\n      url = `/${siteName}/site/navigationItems/${subpageIndex}/dropdownPages`;\r\n\r\n      newPageObj = {\r\n        title,\r\n        route,\r\n        content: defaultContent\r\n      };\r\n    }\r\n\r\n    this.setState({ loading: true, error: null }, () => {\r\n      const that = this;\r\n      const newPostKey = firebase\r\n        .database()\r\n        .ref()\r\n        .child(url)\r\n        .push().key;\r\n      const newPage = { [newPostKey]: newPageObj };\r\n\r\n      firebase\r\n        .database()\r\n        .ref()\r\n        .child(url)\r\n        .update(newPage, function(err) {\r\n          if (err) {\r\n            // The write failed...\r\n            that.setState({\r\n              loading: false,\r\n              error: err.code,\r\n              newPageOpen: false,\r\n              showSignIn: true\r\n            });\r\n          } else {\r\n            // Data saved successfully!\r\n            console.log(\"new page added successfully!\");\r\n            that.setState({\r\n              loading: false,\r\n              error: null,\r\n              newPageOpen: false,\r\n              newPageToast: \"New Page added successfully\"\r\n            });\r\n            that.props.onInitWebsiteState();\r\n          }\r\n\r\n          // axios.post(url, newPageObj)\r\n          //   .then(response => {\r\n          //     console.log(response)\r\n          //     this.props.onInitWebsiteState()\r\n          //   })\r\n          //   .then(() =>{\r\n          //     this.setState({loading: false, error: null, newPageOpen: false, newPageToast: 'New Page added successfully' })\r\n          //   })\r\n          //   .then(() => {\r\n          //     setTimeout(() => {\r\n          //         this.setState({newPageToast: null});\r\n          //     }, 7000 );\r\n          //   })\r\n          //   .catch(err => {\r\n          //     console.log(err);\r\n          //     this.setState({loading: false, error: err.response.data.error, newPageOpen: false, showSignIn: true})\r\n        });\r\n    });\r\n  };\r\n\r\n  handleDeletePageModal = (pageId, parentId) => {\r\n    if (this.state.deletePageModal) {\r\n      this.setState({ deletePageModal: false, pageToDelete: null });\r\n    } else {\r\n      this.setState({\r\n        deletePageModal: true,\r\n        pageToDelete: { id: pageId, parentId: parentId }\r\n      });\r\n    }\r\n  };\r\n\r\n  submitDeletePage = () => {\r\n    console.log(this.state.pageToDelete);\r\n    const that = this;\r\n    const { id, parentId } = this.state.pageToDelete;\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n\r\n    let url = `/${siteName}/site/navigationItems/${id}`;\r\n\r\n    if (parentId) {\r\n      url = `/${siteName}/site/navigationItems/${parentId}/dropdownPages/${id}`;\r\n    }\r\n\r\n    firebase\r\n      .database()\r\n      .ref(url)\r\n      .remove()\r\n      .then(function() {\r\n        console.log(\"Remove succeeded.\");\r\n        that.props.onInitWebsiteState();\r\n        that.setState({ deletePageModal: false, pageToDelete: null });\r\n      })\r\n      .catch(function(error) {\r\n        console.log(\"Remove failed: \" + error.message);\r\n      });\r\n  };\r\n\r\n  updatePage = (eventTarget, key, parent) => {\r\n    console.log(eventTarget.value, key, parent);\r\n    this.props.onChangePageState(eventTarget, key, parent);\r\n  };\r\n\r\n  updatePageSubmit = (pageInfo, key, parentKey) => {\r\n    console.log(pageInfo, key, parentKey);\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n\r\n    const URL = !parentKey\r\n      ? `/${siteName}/site/navigationItems/${key}/content`\r\n      : `/${siteName}/site/navigationItems/${parentKey}/dropdownPages/${key}/content`;\r\n\r\n    const user = firebase.auth().currentUser;\r\n\r\n    if (user) {\r\n      // User is signed in.\r\n      console.log(\"user is signed in\");\r\n      this.props.onUpdatePageSubmit(URL, pageInfo);\r\n    } else {\r\n      // No user is signed in.\r\n      console.log(\" No user is signed in.\");\r\n      this.setState({\r\n        showSignIn: true,\r\n        error: \"Permission denied. Please sign in again to Re-authenticate\"\r\n      });\r\n    }\r\n  };\r\n\r\n  timedOutUser = () => {\r\n    const user = firebase.auth().currentUser;\r\n    if (user) {\r\n      // User is signed in\r\n      this.setState({ showSignIn: false });\r\n    } else {\r\n      // No user is signed in.\r\n      console.log(\" No user is signed in.\");\r\n      this.setState({ showSignIn: true });\r\n    }\r\n  };\r\n\r\n  accordianClick = name => {\r\n    this.setState({ [name]: !this.state[name] });\r\n  };\r\n\r\n  // this.props.addPage(url, newPageObj)\r\n\r\n  render() {\r\n    console.log(\"Admin Page props\", this.props);\r\n    const {\r\n      media_accordian,\r\n      template_accordian,\r\n      homepage_accordian,\r\n      navigation_accordian,\r\n      plugins_accordian\r\n    } = this.state;\r\n\r\n    return (\r\n      <StyledAdminPage>\r\n        <Flex justifyContent=\"space-between\">\r\n          <h1 className=\"admin-title\">Admin Page</h1>\r\n          <Button onClick={this.logoutHandler}>logout</Button>\r\n        </Flex>\r\n        <Modal\r\n          open={this.state.showSignIn}\r\n          title=\"You have been logged out\"\r\n          description=\"Your administrator session has expired you will need to log back in to continue\"\r\n        >\r\n          <AuthModal\r\n            history={this.props.history}\r\n            isTimedOut={this.timedOutUser}\r\n          />\r\n        </Modal>\r\n        <div>\r\n          <Accordian\r\n            title={\"Media\"}\r\n            name={\"media_accordian\"}\r\n            onClick={e => this.accordianClick(e)}\r\n          >\r\n            {media_accordian && (\r\n              <Media\r\n                isAuthenticated={this.props.isAuthenticated}\r\n                isTimedOut={this.timedOutUser}\r\n                currentImages={this.props.images}\r\n                refreshState={this.props.onInitWebsiteState}\r\n                isModal={false}\r\n                imageURLs={this.state.mediaImages}\r\n                setMediaImages={this.setMediaImages}\r\n              />\r\n            )}\r\n          </Accordian>\r\n          <br />\r\n\r\n          <Accordian\r\n            title={\"Template\"}\r\n            name={\"template_accordian\"}\r\n            onClick={e => this.accordianClick(e)}\r\n          >\r\n            {template_accordian && (\r\n              <Template\r\n                template={this.props.template}\r\n                changeTemplateState={this.props.onChangePageState}\r\n                templateChangeSubmit={this.props.onUpdatePageSubmit}\r\n                isUpdating={this.props.isUpdating}\r\n                isError={this.props.isError}\r\n                stateBackup={this.props.stateBackup}\r\n                cancelUpdate={this.props.onRevertChanges}\r\n                openMediaModal={this.openMediaModal}\r\n              />\r\n            )}\r\n          </Accordian>\r\n          <br />\r\n\r\n          <Accordian\r\n            title={\"Homepage\"}\r\n            name={\"homepage_accordian\"}\r\n            onClick={e => this.accordianClick(e)}\r\n          >\r\n            {homepage_accordian && (\r\n              <Homepage\r\n                homePage={this.props.home}\r\n                changeHomepageState={this.props.onChangePageState}\r\n                homepageChangeSubmit={this.props.onUpdatePageSubmit}\r\n                isUpdating={this.props.isUpdating}\r\n                isError={this.props.isError}\r\n                stateBackup={this.props.stateBackup}\r\n                cancelUpdate={this.props.onRevertChanges}\r\n                openMediaModal={this.openMediaModal}\r\n                availableRoutes={this.props.availableRoutes}\r\n                template={this.props.template}\r\n                plugins={this.props.plugins}\r\n              />\r\n            )}\r\n          </Accordian>\r\n          <br />\r\n\r\n          <Accordian\r\n            title=\"Navigation and Pages\"\r\n            name={\"navigation_accordian\"}\r\n            onClick={e => this.accordianClick(e)}\r\n          >\r\n            {navigation_accordian && (\r\n              <div className=\"fullwidth\">\r\n                <Button onClick={this.handleNewPageButton}>\r\n                  Add a new page\r\n                </Button>\r\n\r\n                <Modal\r\n                  open={this.state.newPageOpen}\r\n                  navigationItems={this.props.navigationItems}\r\n                  handleClose={this.handleNewPageButton}\r\n                  title=\"Add a new Webpage\"\r\n                  description=\"Here you can add a new page to your website which will show in the header navigation. You can also make the new page a subpage of another navigation link\"\r\n                >\r\n                  <NewPageForm\r\n                    loading={this.state.loading}\r\n                    navigationItems={this.props.navigationItems}\r\n                    handleClose={this.handleNewPageButton}\r\n                    handleSubmit={this.submitNewPage}\r\n                  />\r\n                </Modal>\r\n\r\n                <Modal\r\n                  open={this.state.deletePageModal}\r\n                  navigationItems={this.props.navigationItems}\r\n                  handleClose={this.handleDeletePageModal}\r\n                  title=\"Delete Webpage\"\r\n                  description=\"You are about to delete selected page this is a permanent action, would you like to continue with deleting this page\"\r\n                >\r\n                  <Flex>\r\n                    <Button onClick={this.submitDeletePage}>Delete</Button>\r\n                    <Button onClick={this.handleDeletePageModal}>Cancel</Button>\r\n                  </Flex>\r\n                </Modal>\r\n\r\n                <br />\r\n                <br />\r\n                <TabsMenu\r\n                  navigationItems={this.props.navigationItems}\r\n                  updatePageSubmit={this.updatePageSubmit}\r\n                  onChange={this.updatePage}\r\n                  openMediaModal={this.openMediaModal}\r\n                  handlePageDelete={this.handleDeletePageModal}\r\n                  isUpdating={this.props.isUpdating}\r\n                  cancelUpdate={this.props.onRevertChanges}\r\n                  isError={this.props.isError}\r\n                  stateBackup={this.props.stateBackup}\r\n                  availableRoutes={this.props.availableRoutes}\r\n                  template={this.props.template}\r\n                  plugins={this.props.plugins}\r\n                />\r\n                <br />\r\n              </div>\r\n            )}\r\n          </Accordian>\r\n          <br />\r\n\r\n          <Accordian\r\n            title={\"Plugins\"}\r\n            name={\"plugins_accordian\"}\r\n            onClick={e => this.accordianClick(e)}\r\n          >\r\n            {plugins_accordian && (\r\n              <Plugins\r\n                plugins={this.props.plugins}\r\n                changePluginState={this.props.onChangePageState}\r\n                pluginsChangeSubmit={this.props.onUpdatePageSubmit}\r\n                availableRoutes={this.props.availableRoutes}\r\n                isUpdating={this.props.isUpdating}\r\n                isError={this.props.isError}\r\n                stateBackup={this.props.stateBackup}\r\n                cancelUpdate={this.props.onRevertChanges}\r\n              />\r\n            )}\r\n          </Accordian>\r\n\r\n          <Modal\r\n            open={this.state.openMediaModal}\r\n            title=\"Choose an image\"\r\n            description=\"Select the media location you would like to use\"\r\n            handleClose={this.closeMediaModal}\r\n          >\r\n            <Media\r\n              isModal={true}\r\n              isAuthenticated={this.props.isAuthenticated}\r\n              handleClose={this.closeMediaModal}\r\n              currentImages={this.props.images}\r\n              imageURLs={this.state.mediaImages}\r\n              setMediaImages={this.setMediaImages}\r\n              tabItemReference={this.state.mediaModalTabItemRef}\r\n              onChangePageState={this.props.onChangePageState}\r\n            />\r\n          </Modal>\r\n        </div>\r\n        {this.state.newPageToast !== null && (\r\n          <Toast message={this.state.newPageToast} />\r\n        )}\r\n        {this.props.updatePageToast !== null && (\r\n          <Toast message={this.props.updatePageToast} />\r\n        )}\r\n        {this.state.error && <Toast message={this.state.error} error={true} />}\r\n      </StyledAdminPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledAdminPage = styled.div`\r\n  background-color: #424242;\r\n  min-height: 100vh;\r\n  padding: 100px 50px;\r\n  margin-top: -75px;\r\n\r\n  .admin-title {\r\n    color: #f5f5f5;\r\n  }\r\n`;\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.userId !== null,\r\n    userId: state.auth.userId,\r\n    home: state.mainState.home,\r\n    navigationItems: state.mainState.navigationItems,\r\n    images: state.mainState.images,\r\n    stateBackup: state.mainState.state_copy,\r\n    updatePageToast: state.admin.pageUpdateToast,\r\n    isUpdating: state.admin.loading,\r\n    isError: state.admin.error,\r\n    availableRoutes: state.admin.routes,\r\n    template: state.mainState.template,\r\n    plugins: state.mainState.plugins\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onInitWebsiteState: () => dispatch(actions.initWebsiteState()),\r\n    onLogoutClick: () => dispatch(actions.logout()),\r\n    onChangePageState: (eventTarget, key, parent) =>\r\n      dispatch(actions.changePageState(eventTarget, key, parent)),\r\n    onUpdatePageSubmit: (pageInfo, url) =>\r\n      dispatch(actions.updatePageSubmit(pageInfo, url)),\r\n    onRevertChanges: () => dispatch(actions.revertStateChange())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Admin);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Page from \"../../components/page\";\r\n\r\nimport Admin from \"../../containers/Admin/Admin\";\r\n\r\nconst AdminRoute = ({ currentUser }) => (\r\n  <Page id=\"admin\" title=\"Admin\" noCrawl>\r\n    <Admin />\r\n  </Page>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: state.auth.currentUser\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(AdminRoute);\r\n","import React from \"react\";\r\nimport Page from \"../../components/page\";\r\n\r\nimport Admin from \"../../containers/Admin/Admin\";\r\n\r\nconst Admin_TEST = props => {\r\n  console.log(\"admin_TEST.props\", props);\r\n  return (\r\n    <Page id=\"admin\" title=\"Admin\" noCrawl>\r\n      <Admin {...props}/>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Admin_TEST;\r\n"],"sourceRoot":""}