{"version":3,"sources":["app/components/UI/Accordian.js","app/components/UI/Wrappers/Box.js","app/components/UI/Wrappers/Minimizer.js","app/containers/Admin/Navigation/TabItems.js/TabItems.js","app/containers/Admin/Navigation/TabsMenu.js","app/components/UI/Modal.js","app/components/Forms/NewPageForm.js","app/containers/Admin/media/ImgGridList.js","app/containers/Admin/media/Media.js","app/containers/Admin/template/Template.js","app/containers/Admin/homepage/Homepage.js","app/components/UI/MultiSelect.js","app/containers/Admin/plugins/contactUsPlugin/ContactUsPlugin.js","app/containers/Admin/plugins/bookingPlugin/BookingPlugin.js","app/containers/Admin/plugins/Plugins.js","app/containers/Auth/AuthModal.js","app/containers/Admin/Admin.js","app/routes/admin/index.js","app/routes/adminTest/index.js"],"names":["StyledAccordian","styled","div","_templateObject","props","theme","primaryBackGroundColour","accordian","react_default","a","createElement","ExpansionPanel_default","onChange","onClick","name","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","title","ExpansionPanelDetails_default","children","StyledBox","Box_templateObject","margin","opacity","Box","boxOpacity","Minimizer","state","isOpen","handleMinimizer","_this","setState","this","StyledMinimizer","padding","Flex","IconButton_default","aria-label","color","RemoveCircle_default","AddCircle_default","Collapse_default","in","className","Emtpy","emptyHeight","Component","Minimizer_templateObject","_templateObject2","StyledTabItems","TabItems_templateObject","Preview","TabItems_templateObject2","DeletePageIcon","_templateObject3","TabItems","console","log","itemProps","dropdownPages","TabsMenu_TabMenu","navigationItems","parentId","pageId","parent","handlePageDelete","openMediaModal","updatePageSubmit","isUpdating","cancelUpdate","stateBackup","availableRoutes","template","plugins","handleChange","event","preventDefault","target","handleCheckbox","check","checked","newevent","value","handleMediaModal","handleColourPicker","clearInput","inputName","_props$itemProps$cont","content","topBanner","topBannerHalfwidth","topBannerImgSize","topBannerHWbackImg","topBannerHWBackColour","topBannerTxtRightSide","topBannerTxtLightTheme","topBannerLogo","topBannerfade","topBannerTitle","topBannerSubtitle","topBannerDescription","topBannerBtnText","topBannerLink","midBanner","midBannerHalfwidth","midBannerImgSize","midBannerHWbackImg","midBannerHWBackColour","midBannerTxtRightSide","midBannerTxtLightTheme","midBannerLogo","midBannerfade","midBannerTitle","midBannerSubtitle","midBannerDescription","midBannerBtnText","midBannerLink","mainText","bottomBanner","Paper_default","elevation","Input","inputtype","label","concat","Wrappers_Minimizer","Wrappers_Box","sideLabel","Fragment","type","changeColour","items","onSelectChange","Dashboard","Object","assign","pageInfo","overlayBlocker","justifyContent","Button","Spinner","Delete_default","fontSize","TabMenu","disableTabText","topBannerOptions","midBannerOptions","bottomBannerOptions","prevProps","_this2","_this$props","tabLabels","tabitems","keys","map","key","index","item","Tab_default","TabItems_js_TabItems","StyledTabs","Tooltip_default","AppBar_default","position","Tabs_default","variant","scrollButtons","isError","Toast","message","error","TabsMenu_templateObject","Modal","width","fullWidth","maxWidth","Dialog_default","open","onClose","handleClose","aria-labelledby","DialogTitle_default","id","DialogContent_default","DialogContentText_default","description","NewPageForm","_Component","_getPrototypeOf2","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","selectVal","defineProperty","onInputChange","_event$target","scrubbedVal","replace","inherits","createClass","prop","handleSubmit","disabled","loading","TitlebarGridList","columns","spacing","activeIndex","selectedValue","selectedName","handleResize","windowSize","window","innerWidth","handleSelect","tile","selectedImage","addEventListener","removeEventListener","tileData","StyledGrid","GridList_default","cellHeight","cols","GridListTile_default","style","height","ListSubheader_default","component","gridTileClass","selectedIndex","e","src","img","alt","GridListTileBar_default","actionIcon","isModal","deleteImage","ImgGridList_templateObject","Media","uploadOpen","customURL","customURLtext","deleteImgOpen","getImageUrls","that","assertThisInitialized","imageContainer","imageCount","currentImages","returnedCount","siteName","process","REACT_APP_SITENAME","storageRef","firebase","storage","ref","i","child","getDownloadURL","then","url","toConsumableArray","setMediaImages","catch","onDrop","acceptedFiles","rejectedFiles","auth","currentUser","file","checkFileAlreadyExists","put","snapshot","addImageRefToDb","err","isTimedOut","filter","newPostKey","database","push","updates","update","refreshState","handleCustomURL","confirmImage","_this$state","tabItemReference","image","onChangePageState","imgUrl","confirmDelete","imageURLs","find","remove","delete","handleUploadOpen","isAuthenticated","_this$state2","dropZone","mediaTemplate","noMediaMessage","dist_es","multiple","accept","_ref","getRootProps","getInputProps","isDragActive","StyledDropArea","classNames","dropzone--isActive","selectedLabel","IsMediaModal","ImgGridList","placeholder","Divider_default","UI_Modal","Media_templateObject","Media_templateObject2","Template","changeTemplateState","handlesubmit","templateChangeSubmit","buttonStyle","_this$props$template","navButtons","siteButtons","transparentHeader","navLightTheme","siteLogo","version","StyledTemplate","Grid","colsLarge","colsMed","Template_templateObject","Homepage","previewOpen","changeHomepageState","homepageChangeSubmit","homePage","_this$props$homePage$","mainTextPosition","mainTextCenterTitle","mainTextRightSide","mainTextBackColour","mainTextImg","mainTextImgAlign","mainTextImgWidth","mainTextImgHeight","StyledHomePage","Homepage_Preview","Homepage_templateObject","Homepage_templateObject2","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","MultiSelect","StyledSelect","FormControl_default","InputLabel_default","htmlFor","Select_default","input","Input_default","renderValue","selected","Chip_default","MenuItem_default","React","MultiSelect_templateObject","minwidth","ContactUsPlugin","plugin","_props$plugin","contactUsActive","contactUsPages","contactUsEmail","parentObj","UI_MultiSelect","BookingPlugin","bookingActive","bookingPages","bookingEmail","bookingForm","bookingCalendarID","bookingApiKey","Plugins","contactUsPlugin","accordianClick","changePluginState","pluginsChangeSubmit","route","split","pop","unshift","StyledPlugins","contactUsPlugin_ContactUsPlugin","contactUs","bookingPlugin_BookingPlugin","booking","Plugins_templateObject","AuthModal","email","password","onFormChange","submitHandler","onAuth","admin","backToHome","history","errorMessage","connect","mainState","userId","dispatch","actions","Admin","homepage_accordian","navigation_accordian","template_accordian","media_accordian","showSignIn","newPageOpen","deletePageModal","pageToDelete","mediaModalTabItemRef","mediaImages","newPageToast","logoutHandler","signOut","onLogoutClick","parentKey","closeMediaModal","handleNewPageButton","submitNewPage","newPage_State","toLowerCase","defaultContent","Date","now","newPageObj","subpageIndex","newPage","code","onInitWebsiteState","handleDeletePageModal","submitDeletePage","_this$state$pageToDel","updatePage","eventTarget","URL","onUpdatePageSubmit","timedOutUser","plugins_accordian","StyledAdminPage","Auth_AuthModal","Accordian","media_Media","images","template_Template","onRevertChanges","homepage_Homepage","home","Forms_NewPageForm","plugins_Plugins","updatePageToast","Admin_templateObject","state_copy","pageUpdateToast","routes","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","_components_page__WEBPACK_IMPORTED_MODULE_2__","_containers_Admin_Admin__WEBPACK_IMPORTED_MODULE_3__","noCrawl","_components_page__WEBPACK_IMPORTED_MODULE_1__","_containers_Admin_Admin__WEBPACK_IMPORTED_MODULE_2__","Admin_TEST"],"mappings":"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","file":"static/js/admin.55e8027d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst accordian = props => (\r\n  <StyledAccordian>\r\n    <ExpansionPanel onChange={() => props.onClick(props.name)}>\r\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n        <div>{props.title}</div>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        {props.children ? props.children : <div />}\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  </StyledAccordian>\r\n);\r\n\r\nconst StyledAccordian = styled.div`\r\n    margin: 15px 5px;\r\n  \r\n    /* > div {\r\n        height: 20px !important;\r\n        width: 20px !important;\r\n        margin: \"theme.spacing.unit * 2\";\r\n        color: ${props => props.theme.primaryBackGroundColour};\r\n\r\n    } */\r\n`;\r\n\r\nexport default accordian;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Box = props => {\r\n  const boxOpacity = props.opacity || false;\r\n\r\n  return (\r\n    <StyledBox margin={props.margin} opacity={boxOpacity ? \"0.5\" : \"1\"}>\r\n      {props.children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nconst StyledBox = styled.div`\r\n  margin: ${props => props.margin || \"20px\"};\r\n  opacity: ${props => props.opacity};\r\n`;\r\n\r\nexport default Box;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport AddIcon from \"@material-ui/icons/AddCircle\";\r\nimport MinusIcon from \"@material-ui/icons/RemoveCircle\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Flex from \"./Flex\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\n\r\nclass Minimizer extends Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n\r\n  handleMinimizer = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  };\r\n\r\n  render() {\r\n    const { isOpen } = this.state;\r\n\r\n    return (\r\n      <StyledMinimizer padding={this.props.padding}>\r\n        <Flex margin=\"0\">\r\n          <IconButton\r\n            aria-label=\"Add\"\r\n            color=\"primary\"\r\n            onClick={this.handleMinimizer}\r\n          >\r\n            {isOpen ? <MinusIcon /> : <AddIcon />}\r\n          </IconButton>\r\n          {isOpen ? (\r\n            <small onClick={this.handleMinimizer}>\r\n              Click to minimise options\r\n            </small>\r\n          ) : (\r\n            <small onClick={this.handleMinimizer}>\r\n              Click to expand further options\r\n            </small>\r\n          )}\r\n        </Flex>\r\n        <Collapse in={isOpen}>\r\n          {isOpen ? (\r\n            <div className=\"minimized_children\">{this.props.children}</div>\r\n          ) : (\r\n            <Emtpy emptyHeight={this.props.emptyHeight} />\r\n          )}\r\n        </Collapse>\r\n      </StyledMinimizer>\r\n    );\r\n  }\r\n}\r\n\r\nconst Emtpy = styled.div`\r\n  height: ${props => props.emptyHeight || \"500px\"};\r\n`;\r\n\r\nconst StyledMinimizer = styled.div`\r\n  border: 2px solid rgba(0, 0, 0, 0.2);\r\n  border-top: 0;\r\n  border-bottom-left-radius: 8px;\r\n  border-bottom-right-radius: 8px;\r\n  margin-bottom: 35px;\r\n\r\n  > div small {\r\n    cursor: pointer;\r\n  }\r\n\r\n  .minimized_children {\r\n    padding: ${props => props.padding || \"auto\"};\r\n  }\r\n`;\r\n\r\nexport default Minimizer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport Input from \"../../../../components/UI/Input\";\r\nimport TabMenu from \"../TabsMenu\";\r\nimport Button from \"../../../../components/UI/Buttons/Button\";\r\nimport Flex from \"../../../../components/UI/Wrappers/Flex\";\r\nimport Box from \"../../../../components/UI/Wrappers/Box\";\r\nimport Spinner from \"../../../../components/UI/Spinner\";\r\nimport Minimizer from \"../../../../components/UI/Wrappers/Minimizer\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport Dashboard from \"../../../Dashboard/Dashboard\";\r\n\r\nconst TabItems = props => {\r\n  console.log(\"tabItems props\", props);\r\n  if (props.itemProps.dropdownPages) {\r\n    return (\r\n      <TabMenu\r\n        navigationItems={props.itemProps.dropdownPages}\r\n        parentId={props.pageId}\r\n        parent={props.children}\r\n        onChange={props.onChange}\r\n        handlePageDelete={props.handlePageDelete}\r\n        openMediaModal={props.openMediaModal}\r\n        updatePageSubmit={props.updatePageSubmit}\r\n        isUpdating={props.isUpdating}\r\n        cancelUpdate={props.cancelUpdate}\r\n        stateBackup={props.stateBackup}\r\n        availableRoutes={props.availableRoutes}\r\n        template={props.template}\r\n        plugins={props.plugins}\r\n      />\r\n    );\r\n  }\r\n\r\n  const handleChange = event => {\r\n    event.preventDefault();\r\n    props.onChange(event.target, props.pageId, props.parentId);\r\n  };\r\n\r\n  const handleCheckbox = check => event => {\r\n    console.log(check, event.target.checked);\r\n    const newevent = {\r\n      name: event.target.name,\r\n      value: event.target.checked\r\n    };\r\n    props.onChange(newevent, props.pageId, props.parentId);\r\n  };\r\n\r\n  const handleMediaModal = event => {\r\n    event.preventDefault();\r\n    props.openMediaModal(event.target, props.pageId, props.parentId);\r\n  };\r\n\r\n  const handleColourPicker = event => {\r\n    props.onChange(event.target, props.pageId, props.parentId);\r\n  };\r\n\r\n  const handlesubmit = event => {\r\n    event.preventDefault();\r\n    props.updatePageSubmit(\r\n      props.itemProps.content,\r\n      props.pageId,\r\n      props.parentId\r\n    );\r\n  };\r\n\r\n  const clearInput = inputName => {\r\n    const event = { name: inputName, value: \"\" };\r\n    props.onChange(event, props.pageId, props.parentId);\r\n  };\r\n\r\n  const deletePage = () => {\r\n    props.handlePageDelete(props.pageId, props.parentId);\r\n  };\r\n\r\n  const {\r\n    topBanner,\r\n    topBannerHalfwidth,\r\n    topBannerImgSize,\r\n    topBannerHWbackImg,\r\n    topBannerHWBackColour,\r\n    topBannerTxtRightSide,\r\n    topBannerTxtLightTheme,\r\n    topBannerLogo,\r\n    topBannerfade,\r\n    topBannerTitle,\r\n    topBannerSubtitle,\r\n    topBannerDescription,\r\n    topBannerBtnText,\r\n    topBannerLink,\r\n    midBanner,\r\n    midBannerHalfwidth,\r\n    midBannerImgSize,\r\n    midBannerHWbackImg,\r\n    midBannerHWBackColour,\r\n    midBannerTxtRightSide,\r\n    midBannerTxtLightTheme,\r\n    midBannerLogo,\r\n    midBannerfade,\r\n    midBannerTitle,\r\n    midBannerSubtitle,\r\n    midBannerDescription,\r\n    midBannerBtnText,\r\n    midBannerLink,\r\n    bottomBanner,\r\n    mainText\r\n  } = props.itemProps.content;\r\n\r\n  return (\r\n    <Paper elevation={20}>\r\n      <StyledTabItems>\r\n        <div>\r\n          {props.children}\r\n          <Input\r\n            inputtype=\"inputSelector\"\r\n            label={`${\r\n              topBannerHalfwidth\r\n                ? \"Top Banner Image (Inside Banner)\"\r\n                : \"Top Banner Image\"\r\n            }`}\r\n            name=\"topBanner\"\r\n            value={topBanner}\r\n            onChange={handleChange}\r\n            onClick={handleMediaModal}\r\n            clearInput={clearInput}\r\n          />\r\n          {topBanner && (\r\n            <Minimizer>\r\n              <Box>\r\n                <Flex>\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Use the Top Banner image inside the Banner \"\r\n                    name=\"topBannerHalfwidth\"\r\n                    checked={topBannerHalfwidth}\r\n                    handleChange={handleCheckbox}\r\n                  />\r\n                </Flex>\r\n                {topBannerHalfwidth && (\r\n                  <>\r\n                    <Input\r\n                      inputtype=\"inputSelector\"\r\n                      label=\"Banner Background Image\"\r\n                      name=\"topBannerHWbackImg\"\r\n                      value={topBannerHWbackImg}\r\n                      onChange={handleChange}\r\n                      onClick={handleMediaModal}\r\n                      clearInput={clearInput}\r\n                    />\r\n                    <Flex>\r\n                      <Input\r\n                        inputtype=\"input\"\r\n                        type=\"number\"\r\n                        label=\"Banner Image Size\"\r\n                        name=\"topBannerImgSize\"\r\n                        value={topBannerImgSize}\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Input\r\n                        inputtype=\"inputColourPicker\"\r\n                        label=\"Banner Background Colour\"\r\n                        name=\"topBannerHWBackColour\"\r\n                        value={topBannerHWBackColour}\r\n                        changeColour={handleColourPicker}\r\n                        pageId={\"home\"}\r\n                      />\r\n                    </Flex>\r\n                  </>\r\n                )}\r\n                <Flex>\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Banner Text Right Side\"\r\n                    name=\"topBannerTxtRightSide\"\r\n                    checked={topBannerTxtRightSide}\r\n                    handleChange={handleCheckbox}\r\n                  />\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Banner Light Text Color\"\r\n                    name=\"topBannerTxtLightTheme\"\r\n                    checked={topBannerTxtLightTheme}\r\n                    handleChange={handleCheckbox}\r\n                  />\r\n                </Flex>\r\n                <Flex>\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Use Logo in banner\"\r\n                    name=\"topBannerLogo\"\r\n                    checked={topBannerLogo}\r\n                    handleChange={handleCheckbox}\r\n                  />\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Banner content fade in effect\"\r\n                    name=\"topBannerfade\"\r\n                    checked={topBannerfade}\r\n                    handleChange={handleCheckbox}\r\n                  />\r\n                </Flex>\r\n                <Input\r\n                  inputtype=\"input\"\r\n                  label=\"Banner Title\"\r\n                  name=\"topBannerTitle\"\r\n                  value={topBannerTitle}\r\n                  onChange={handleChange}\r\n                />\r\n                <Input\r\n                  inputtype=\"input\"\r\n                  label=\"Banner Subtitle\"\r\n                  name=\"topBannerSubtitle\"\r\n                  value={topBannerSubtitle}\r\n                  onChange={handleChange}\r\n                />\r\n                <Input\r\n                  inputtype=\"input\"\r\n                  label=\"Banner Description\"\r\n                  name=\"topBannerDescription\"\r\n                  value={topBannerDescription}\r\n                  onChange={handleChange}\r\n                />\r\n                <Flex>\r\n                  <Input\r\n                    inputtype=\"input\"\r\n                    label=\"Banner Button Text\"\r\n                    name=\"topBannerBtnText\"\r\n                    value={topBannerBtnText}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Input\r\n                    inputtype=\"select\"\r\n                    label=\"Banner Link\"\r\n                    name=\"topBannerLink\"\r\n                    value={topBannerLink}\r\n                    items={props.availableRoutes}\r\n                    onSelectChange={handleChange}\r\n                  />\r\n                </Flex>\r\n              </Box>\r\n            </Minimizer>\r\n          )}\r\n          <Input\r\n            inputtype=\"inputSelector\"\r\n            label={`${\r\n              midBannerHalfwidth\r\n                ? \"Middle Banner Image (Inside Banner)\"\r\n                : \"Middle Banner Image\"\r\n            }`}\r\n            name=\"midBanner\"\r\n            value={midBanner}\r\n            onChange={handleChange}\r\n            onClick={handleMediaModal}\r\n            clearInput={clearInput}\r\n          />\r\n          {midBanner && (\r\n            <Minimizer>\r\n              <Box>\r\n                <Flex>\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Use the Middle Banner image inside the Banner\"\r\n                    name=\"midBannerHalfwidth\"\r\n                    checked={midBannerHalfwidth}\r\n                    handleChange={handleCheckbox}\r\n                  />\r\n                </Flex>\r\n                {midBannerHalfwidth && (\r\n                  <>\r\n                    <Input\r\n                      inputtype=\"inputSelector\"\r\n                      label=\"Banner Background Image\"\r\n                      name=\"midBannerHWbackImg\"\r\n                      value={midBannerHWbackImg}\r\n                      onChange={handleChange}\r\n                      onClick={handleMediaModal}\r\n                      clearInput={clearInput}\r\n                    />\r\n                    <Flex>\r\n                      <Input\r\n                        inputtype=\"input\"\r\n                        type=\"number\"\r\n                        label=\"Banner Image Size\"\r\n                        name=\"midBannerImgSize\"\r\n                        value={midBannerImgSize}\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Input\r\n                        inputtype=\"inputColourPicker\"\r\n                        label=\"Banner Background Colour\"\r\n                        name=\"midBannerHWBackColour\"\r\n                        value={midBannerHWBackColour}\r\n                        changeColour={handleColourPicker}\r\n                        pageId={\"home\"}\r\n                      />\r\n                    </Flex>\r\n                  </>\r\n                )}\r\n                <Flex>\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Banner Text Right Side\"\r\n                    name=\"midBannerTxtRightSide\"\r\n                    checked={midBannerTxtRightSide}\r\n                    handleChange={handleCheckbox}\r\n                  />\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Banner Light Text Color\"\r\n                    name=\"midBannerTxtLightTheme\"\r\n                    checked={midBannerTxtLightTheme}\r\n                    handleChange={handleCheckbox}\r\n                  />\r\n                </Flex>\r\n                <Flex>\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Use Logo in banner\"\r\n                    name=\"midBannerLogo\"\r\n                    checked={midBannerLogo}\r\n                    handleChange={handleCheckbox}\r\n                  />\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Banner content fade in effect\"\r\n                    name=\"midBannerfade\"\r\n                    checked={midBannerfade}\r\n                    handleChange={handleCheckbox}\r\n                  />\r\n                </Flex>\r\n                <Input\r\n                  inputtype=\"input\"\r\n                  label=\"Banner Title\"\r\n                  name=\"midBannerTitle\"\r\n                  value={midBannerTitle}\r\n                  onChange={handleChange}\r\n                />\r\n                <Input\r\n                  inputtype=\"input\"\r\n                  label=\"Banner Subtitle\"\r\n                  name=\"midBannerSubtitle\"\r\n                  value={midBannerSubtitle}\r\n                  onChange={handleChange}\r\n                />\r\n                <Input\r\n                  inputtype=\"input\"\r\n                  label=\"Banner Description\"\r\n                  name=\"midBannerDescription\"\r\n                  value={midBannerDescription}\r\n                  onChange={handleChange}\r\n                />\r\n                <Flex>\r\n                  <Input\r\n                    inputtype=\"input\"\r\n                    label=\"Banner Button Text\"\r\n                    name=\"midBannerBtnText\"\r\n                    value={midBannerBtnText}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Input\r\n                    inputtype=\"select\"\r\n                    label=\"Banner Link\"\r\n                    name=\"midBannerLink\"\r\n                    value={midBannerLink}\r\n                    items={props.availableRoutes}\r\n                    onSelectChange={handleChange}\r\n                  />\r\n                </Flex>\r\n              </Box>\r\n            </Minimizer>\r\n          )}\r\n          <Input\r\n            inputtype=\"textarea\"\r\n            label=\"Main Body Text\"\r\n            name=\"mainText\"\r\n            value={mainText}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <Preview>\r\n          <Dashboard\r\n            pageInfo={props.itemProps}\r\n            {...props}\r\n            template={props.template}\r\n            plugins={props.plugins}\r\n            overlayBlocker={true}\r\n          />\r\n        </Preview>\r\n      </StyledTabItems>\r\n      <Flex justifyContent={\"space-between\"}>\r\n        <div>\r\n          <Flex justifyContent=\"flex-start\">\r\n            <Button margin=\"2px 5px 15px 20px\" onClick={handlesubmit}>\r\n              Update\r\n            </Button>\r\n            {props.isUpdating && <Spinner />}\r\n            {props.stateBackup && (\r\n              <Button margin=\"2px 20px 15px 20px\" onClick={props.cancelUpdate}>\r\n                Undo Changes\r\n              </Button>\r\n            )}\r\n          </Flex>\r\n        </div>\r\n        <DeletePageIcon>\r\n          <IconButton onClick={deletePage}>\r\n            <DeleteIcon fontSize=\"large\" />\r\n          </IconButton>\r\n        </DeletePageIcon>\r\n      </Flex>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst StyledTabItems = styled.div`\r\n  padding: 3vh;\r\n  display: grid;\r\n  grid-template-columns: 65% 35%;\r\n  grid-gap: 8px;\r\n`;\r\n\r\nconst Preview = styled.div`\r\n  display: block;\r\n  zoom: 30%;\r\n  padding-top: 56px;\r\n  box-shadow: 2px 2px 2px;\r\n\r\n  @media (max-width: 500px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst DeletePageIcon = styled.div`\r\n  padding: 5px;\r\n`;\r\n\r\nexport default TabItems;\r\n","import React, { Component } from \"react\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Toast from \"../../../components/UI/Toast\";\r\n\r\nimport TabItems from \"./TabItems.js/TabItems\";\r\n\r\nexport default class TabMenu extends Component {\r\n  state = {\r\n    value: 0,\r\n    disableTabText: \"\",\r\n    topBannerOptions: true,\r\n    midBannerOptions: true,\r\n    bottomBannerOptions: true\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.stateBackup !== prevProps.stateBackup) {\r\n      if (this.props.stateBackup) {\r\n        this.setState({\r\n          disableTabText:\r\n            \"You have made updates to this page, please save or undo your changes before selecting a new page\"\r\n        });\r\n      } else {\r\n        this.setState({ disableTabText: \"\" });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleChange = (event, value) => {\r\n    if (!this.props.stateBackup) {\r\n      this.setState({ value });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    const { navigationItems, parent, parentId } = this.props;\r\n    console.log(\"tabMenu props\", this.props);\r\n    let tabLabels = null;\r\n    let tabitems = null;\r\n\r\n    if (navigationItems !== null) {\r\n      tabLabels = Object.keys(navigationItems).map((key, index) => {\r\n        const item = navigationItems[key];\r\n        //passes the item title down to tabItems, which then runs tabs again if there is a drop down, and passes a parent value back\r\n        return (\r\n          <Tab\r\n            key={index}\r\n            label={\r\n              parent ? parent.props.children + \" - \" + item.title : item.title\r\n            }\r\n          />\r\n        );\r\n      });\r\n\r\n      tabitems = Object.keys(navigationItems).map((key, index) => {\r\n        return (\r\n          value === index && (\r\n            <TabItems\r\n              key={index}\r\n              pageId={key}\r\n              parentId={parentId || null}\r\n              itemProps={navigationItems[key]}\r\n              onChange={this.props.onChange}\r\n              handlePageDelete={this.props.handlePageDelete}\r\n              openMediaModal={this.props.openMediaModal}\r\n              updatePageSubmit={this.props.updatePageSubmit}\r\n              isUpdating={this.props.isUpdating}\r\n              cancelUpdate={this.props.cancelUpdate}\r\n              stateBackup={this.props.stateBackup}\r\n              availableRoutes={this.props.availableRoutes}\r\n              template={this.props.template}\r\n              plugins={this.props.plugins}\r\n            >\r\n              <h2>{navigationItems[key].title}</h2>\r\n            </TabItems>\r\n          )\r\n        );\r\n      });\r\n\r\n      // tabLabels = navigationItems.map( (item, index) => {\r\n      //     //passes the item title down to tabItems, which then runs tabs again if there is a drop down, and passes a parent value back\r\n      //     return <Tab key={index} label={ parent ? parent+' - '+item.title : item.title} />\r\n      // })\r\n      // tabitems = navigationItems.map( (item, index) => {\r\n      //     return( value === index && <TabItems key={index} itemProps={item}>{item.title }</TabItems> )\r\n      // })\r\n    }\r\n\r\n    if (tabitems === null && tabLabels === null) return <div />;\r\n    return (\r\n      <StyledTabs>\r\n        <Tooltip title={this.state.disableTabText}>\r\n          <AppBar position=\"static\">\r\n            <Tabs\r\n              value={value}\r\n              onChange={this.handleChange}\r\n              variant=\"scrollable\"\r\n              scrollButtons=\"auto\"\r\n            >\r\n              {tabLabels}\r\n            </Tabs>\r\n          </AppBar>\r\n        </Tooltip>\r\n        {tabitems}\r\n        {this.props.isError && (\r\n          <Toast message={this.props.isError} error={true} />\r\n        )}\r\n      </StyledTabs>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledTabs = styled.div`\r\n  > header {\r\n    background-color: ${props => props.theme.primaryBackGroundColour};\r\n    z-index: 20;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\n//import TextField from '@material-ui/core/TextField';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n// import DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nconst Modal = props => {\r\n  // const childrenWithProps = React.Children.map()\r\n  const width = props.fullWidth ? props.fullWidth : true;\r\n  const maxWidth = props.maxWidth ? props.maxWidth : \"lg\";\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={props.handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        fullWidth={width}\r\n        maxWidth={maxWidth}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>{props.description}</DialogContentText>\r\n          <br />\r\n          <br />\r\n          {/* {React.cloneElement(props.children, { handleSubmit: props.handleSubmit })} */}\r\n          {props.children}\r\n        </DialogContent>\r\n        {/* <DialogActions>\r\n            <button onClick={props.handleClose} >\r\n              Cancel\r\n            </button>\r\n            <button onClick={props.handleSubmit} >\r\n              Confirm\r\n            </button>\r\n          </DialogActions> */}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\nimport Input from \"../UI/Input\";\r\nimport Flex from \"../UI/Wrappers/Flex\";\r\nimport Button from \"../UI/Buttons/Button\";\r\nimport Spinner from \"../UI/Spinner\";\r\n\r\nexport class NewPageForm extends Component {\r\n  state = {\r\n    title: \"\",\r\n    checked: false,\r\n    selectVal: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.navigationItems !== null) {\r\n      // this.setState({selectVal: this.props.navigationItems[0].title})\r\n      let title = \"\";\r\n      for (var prop in this.props.navigationItems) {\r\n        title = this.props.navigationItems[prop].title;\r\n        break;\r\n      }\r\n\r\n      this.setState({ selectVal: title });\r\n    }\r\n  }\r\n\r\n  handleCheckbox = name => event => {\r\n    this.setState({ [name]: event.target.checked });\r\n  };\r\n\r\n  onSelectChange = event => {\r\n    this.setState({ selectVal: event.target.value });\r\n  };\r\n\r\n  onInputChange = event => {\r\n    const { value, name } = event.target;\r\n    const scrubbedVal = value.replace(/[^\\w\\s]/gi, \"\");\r\n\r\n    this.setState({ [name]: scrubbedVal });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"newpageForm props\", this.props);\r\n    return (\r\n      <div>\r\n        <form>\r\n          <Input\r\n            inputtype=\"input\"\r\n            label=\"Page Title\"\r\n            name=\"title\"\r\n            value={this.state.title}\r\n            onChange={this.onInputChange}\r\n          />\r\n          {this.props.navigationItems !== null && (\r\n            <div>\r\n              <Input\r\n                inputtype=\"checkbox\"\r\n                sideLabel=\"Is this a dropdown SubPage\"\r\n                checked={this.state.checked}\r\n                handleChange={this.handleCheckbox}\r\n              />\r\n              <br />\r\n              {this.state.checked && (\r\n                <Input\r\n                  inputtype=\"select\"\r\n                  value={this.state.selectVal}\r\n                  label=\"Choose the parent page for this Subpage\"\r\n                  items={this.props.navigationItems}\r\n                  onSelectChange={this.onSelectChange}\r\n                />\r\n              )}\r\n            </div>\r\n          )}\r\n        </form>\r\n        <Flex justifyContent=\"flex-end\" margin=\"5px\">\r\n          <Button onClick={this.props.handleClose}>Cancel</Button>\r\n          <Button\r\n            onClick={() => this.props.handleSubmit(this.state)}\r\n            disabled={this.state.title === \"\" ? true : false}\r\n          >\r\n            Confirm\r\n          </Button>\r\n          {this.props.loading && <Spinner />}\r\n        </Flex>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//       //updateNewPageData: () => dispatch(actions.newPageData()),\r\n//   }\r\n// }\r\n\r\n//export default connect(null, mapDispatchToProps)(NewPageForm)\r\nexport default NewPageForm;\r\n","import React, { Component } from \"react\";\r\n\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nclass TitlebarGridList extends Component {\r\n  state = {\r\n    columns: 5,\r\n    spacing: 20,\r\n    activeIndex: null,\r\n    selectedValue: \"\",\r\n    selectedName: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n    this.handleResize();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.handleResize);\r\n  }\r\n\r\n  handleResize = () => {\r\n    const windowSize = window.innerWidth;\r\n    const columns = (windowSize > 768 && 5) || (windowSize <= 480 && 1) || 3;\r\n    const spacing = (windowSize > 768 && 20) || 8;\r\n\r\n    this.setState({\r\n      columns,\r\n      spacing\r\n    });\r\n  };\r\n\r\n  handleSelect = (event, index, tile) => {\r\n    this.props.selectedImage(index, tile);\r\n  };\r\n\r\n  render() {\r\n    const { tileData } = this.props;\r\n    if (!tileData || !tileData.length) return <div />;\r\n\r\n    return (\r\n      <StyledGrid>\r\n        <GridList\r\n          cellHeight={180}\r\n          className=\"gridList\"\r\n          cols={this.state.columns}\r\n          spacing={this.state.spacing}\r\n        >\r\n          <GridListTile\r\n            key=\"Subheader\"\r\n            cols={this.state.columns}\r\n            style={{ height: \"auto\" }}\r\n          >\r\n            <ListSubheader component=\"div\">\r\n              This is where your current websites images located.\r\n            </ListSubheader>\r\n          </GridListTile>\r\n          {tileData.map((tile, index) => {\r\n            const gridTileClass =\r\n              this.props.selectedIndex === index ? \"media active\" : \"media\";\r\n\r\n            return (\r\n              <GridListTile\r\n                key={tile.title}\r\n                className={gridTileClass}\r\n                onClick={e => this.handleSelect(e, index, tile)}\r\n              >\r\n                <img src={tile.img} alt={tile.title} />\r\n                <GridListTileBar\r\n                  title={tile.title}\r\n                  actionIcon={\r\n                    !this.props.isModal ? (\r\n                      <IconButton\r\n                        className=\"gridIcon\"\r\n                        onClick={() =>\r\n                          this.props.deleteImage(tile.img, tile.title)\r\n                        }\r\n                      >\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    ) : (\r\n                      false\r\n                    )\r\n                  }\r\n                />\r\n              </GridListTile>\r\n            );\r\n          })}\r\n        </GridList>\r\n      </StyledGrid>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledGrid = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  /* justify-content: space-around; */\r\n  overflow: hidden;\r\n  margin: 20px 0;\r\n  padding: 10px;\r\n\r\n  .gridlist {\r\n    width: 100%;\r\n    height: 450px;\r\n  }\r\n\r\n  .media {\r\n    padding: 3px;\r\n    cursor: pointer;\r\n    -webkit-transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\r\n    -moz-transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\r\n    -ms-transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\r\n    -o-transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\r\n    transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\r\n  }\r\n\r\n  .media.active {\r\n    border: 1px solid #09c;\r\n    border-radius: 5px;\r\n    box-shadow: 1px 1px 7px rgba(0, 200, 204, 0.7);\r\n    outline: none;\r\n  }\r\n\r\n  .gridIcon {\r\n    color: rgba(255, 255, 255, 0.54);\r\n  }\r\n`;\r\n\r\nexport default TitlebarGridList;\r\n","import React, { Component } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nimport \"firebase/storage\";\r\n\r\nimport classNames from \"classnames\";\r\n\r\nimport styled from \"styled-components\";\r\nimport Button from \"../../../components/UI/Buttons/Button\";\r\nimport Input from \"../../../components/UI/Input\";\r\nimport Flex from \"../../../components/UI/Wrappers/Flex\";\r\nimport Box from \"../../../components/UI/Wrappers/Box\";\r\nimport Modal from \"../../../components/UI/Modal\";\r\nimport Spinner from \"../../../components/UI/Spinner\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ImgGridList from \"./ImgGridList\";\r\n\r\nclass Media extends Component {\r\n  state = {\r\n    uploadOpen: false,\r\n    error: null,\r\n    customURL: false,\r\n    customURLtext: \"\",\r\n    activeIndex: null,\r\n    selectedValue: \"\",\r\n    selectedName: \"\",\r\n    deleteImgOpen: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"mounted\");\r\n    this.getImageUrls();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.currentImages === null) return;\r\n\r\n    if (\r\n      this.props.currentImages !== prevProps.currentImages ||\r\n      this.props.isAuthenticated !== prevProps.isAuthenticated\r\n    ) {\r\n      this.getImageUrls();\r\n    }\r\n  }\r\n\r\n  getImageUrls = () => {\r\n    const that = this;\r\n    let imageContainer = [];\r\n    let imageCount = Object.keys(this.props.currentImages).length;\r\n    let returnedCount = 0;\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n\r\n    let storageRef = firebase.storage().ref();\r\n\r\n    Object.keys(this.props.currentImages).map((key, i) => {\r\n      const img = this.props.currentImages[key];\r\n      return storageRef\r\n        .child(`${siteName}/${img}`)\r\n        .getDownloadURL()\r\n        .then(url => {\r\n          imageContainer = [...imageContainer, { title: img, img: url, key }];\r\n          returnedCount++;\r\n\r\n          if (imageCount === returnedCount) {\r\n            that.props.setMediaImages(imageContainer);\r\n          }\r\n        })\r\n        .catch(error => {\r\n          // Handle any errors\r\n          console.log(error);\r\n        });\r\n    });\r\n  };\r\n\r\n  onDrop = (acceptedFiles, rejectedFiles) => {\r\n    // Do something with files\r\n    console.log(\"accepted\", acceptedFiles);\r\n    console.log(\"rejected\", rejectedFiles);\r\n    if (rejectedFiles.length !== 0) {\r\n      this.setState({ error: \"Rejected upload, incompatable file detected\" });\r\n      return;\r\n    }\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n    const user = firebase.auth().currentUser;\r\n\r\n    if (user) {\r\n      console.log(\"user is signed in\");\r\n      const file = acceptedFiles[0];\r\n      if (this.checkFileAlreadyExists(file)) {\r\n        this.setState({\r\n          error: `${\r\n            file.name\r\n          } already exists, please remove the old image first`\r\n        });\r\n        return;\r\n      }\r\n      firebase\r\n        .storage()\r\n        .ref()\r\n        .child(`${siteName}/${file.name}`)\r\n        .put(file)\r\n        .then(snapshot => {\r\n          console.log(\"Uploaded a blob or file!\");\r\n          console.log(snapshot);\r\n          this.addImageRefToDb(file);\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      // No user is signed in.\r\n      console.log(\" No user is signed in.\");\r\n      this.props.isTimedOut();\r\n    }\r\n  };\r\n\r\n  checkFileAlreadyExists = file => {\r\n    if (this.props.currentImages === null) return;\r\n\r\n    \r\n\r\n    const findImageRef = Object.keys(this.props.currentImages).filter(\r\n      (key, i) => {\r\n        const img = this.props.currentImages[key];\r\n        return img === file.name;\r\n      }\r\n    );\r\n\r\n    return !findImageRef.length ? false : true;\r\n  };\r\n  \r\n\r\n  addImageRefToDb = file => {\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n\r\n    var newPostKey = firebase\r\n      .database()\r\n      .ref()\r\n      .child(`${siteName}/site/images`)\r\n      .push().key;\r\n    var updates = { [newPostKey]: file.name };\r\n    const that = this;\r\n\r\n    return firebase\r\n      .database()\r\n      .ref()\r\n      .child(`${siteName}/site/images`)\r\n      .update(updates, function(error) {\r\n        if (error) {\r\n          // The write failed...\r\n          console.log(\"image ref in db write failed...\", error);\r\n        } else {\r\n          // Data saved successfully!\r\n          console.log(\"image ref in db saved successfully\");\r\n          that.props.refreshState();\r\n        }\r\n      });\r\n  };\r\n\r\n  selectedImage = (index, tile) => {\r\n    this.setState({\r\n      customURLtext: \"\",\r\n      activeIndex: index,\r\n      selectedValue: tile.img,\r\n      selectedName: tile.title\r\n    });\r\n  };\r\n\r\n  handleCustomURL = event => {\r\n    this.setState({\r\n      customURLtext: event.target.value,\r\n      activeIndex: null,\r\n      selectedValue: \"\",\r\n      selectedName: \"\"\r\n    });\r\n  };\r\n\r\n  confirmImage = () => {\r\n    const { customURLtext, selectedValue } = this.state;\r\n    const { tabItemReference } = this.props;\r\n    let image = customURLtext ? customURLtext : selectedValue;\r\n\r\n    this.props.onChangePageState(\r\n      { name: tabItemReference[0].name, value: image },\r\n      tabItemReference[1],\r\n      tabItemReference[2]\r\n    );\r\n    this.props.handleClose();\r\n  };\r\n\r\n  deleteImage = (imgUrl, name) => {\r\n    console.log(imgUrl, name);\r\n    this.setState({ deleteImgOpen: true });\r\n  };\r\n\r\n  confirmDelete = () => {\r\n    console.log(this.state, this.props);\r\n    const that = this;\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n\r\n    const img = this.props.imageURLs.find(\r\n      img => img.title === this.state.selectedName\r\n    );\r\n    let storageRef = firebase.storage().ref();\r\n\r\n    console.log(\"pre delete\");\r\n    firebase\r\n      .database()\r\n      .ref()\r\n      .child(`${siteName}/site/images/${img.key}`)\r\n      .remove()\r\n      .then(() => {\r\n        console.log(\"db delete succeeded!\");\r\n        storageRef\r\n          .child(`${siteName}/${img.title}`)\r\n          .delete()\r\n          .then(function() {\r\n            // File deleted successfully\r\n            console.log(\"storage img deleted\");\r\n            that.setState({ deleteImgOpen: false });\r\n            that.props.refreshState();\r\n          })\r\n          .catch(function(error) {\r\n            // Uh-oh, an error occurred!\r\n            console.log(\"storage error\", error);\r\n          });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  handleUploadOpen = () => {\r\n    this.setState({ uploadOpen: !this.state.uploadOpen });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"media props\", this.props);\r\n    const {\r\n      error,\r\n      uploadOpen,\r\n      customURL,\r\n      activeIndex,\r\n      customURLtext,\r\n      selectedName,\r\n      selectedValue\r\n    } = this.state;\r\n    const { imageURLs, currentImages } = this.props;\r\n\r\n    let dropZone = null;\r\n    let mediaTemplate = null;\r\n    let noMediaMessage = null;\r\n\r\n    if (imageURLs.length === 0 && currentImages) {\r\n      noMediaMessage = (\r\n        <div>\r\n          <p>\r\n            <i>\r\n              Loading media, if nothing appears after ten seconds. Please\r\n              refresh the page{\" \"}\r\n            </i>\r\n          </p>\r\n          <Spinner />\r\n        </div>\r\n      );\r\n    } else if (currentImages === null) {\r\n      noMediaMessage = (\r\n        <div>\r\n          <p>\r\n            <i>\r\n              Here is where you can add images to your website, Click upload\r\n              media to create your media library\r\n            </i>\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (uploadOpen && !this.props.isModal) {\r\n      dropZone = (\r\n        <Dropzone onDrop={this.onDrop} multiple={false} accept=\"image/*\">\r\n          {({ getRootProps, getInputProps, isDragActive }) => {\r\n            return (\r\n              <StyledDropArea\r\n                {...getRootProps()}\r\n                className={classNames(\"dropzone\", {\r\n                  \"dropzone--isActive\": isDragActive\r\n                })}\r\n              >\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                  <p>Drop files here...</p>\r\n                ) : (\r\n                  <p>\r\n                    Try dropping some files here, or click to select files to\r\n                    upload.\r\n                  </p>\r\n                )}\r\n              </StyledDropArea>\r\n            );\r\n          }}\r\n        </Dropzone>\r\n      );\r\n    }\r\n\r\n    if (!this.props.isModal) {\r\n      mediaTemplate = (\r\n        <div>\r\n          {noMediaMessage}\r\n          <Button onClick={this.handleUploadOpen}>\r\n            {uploadOpen ? \"Close DropZone\" : \"Upload Media\"}\r\n          </Button>\r\n          {dropZone}\r\n          {error && <div>{error}</div>}\r\n          <Paper elevation={7}>\r\n            <ImgGridList\r\n              tileData={this.props.imageURLs}\r\n              isModal={false}\r\n              selectedIndex={activeIndex}\r\n              selectedImage={this.selectedImage}\r\n              deleteImage={this.deleteImage}\r\n            />\r\n          </Paper>\r\n        </div>\r\n      );\r\n    } else {\r\n      const selectedLabel = `Current Selection:  ${selectedName}`;\r\n      mediaTemplate = (\r\n        <IsMediaModal>\r\n          {noMediaMessage}\r\n          <Flex>\r\n            <Box opacity={customURL}>\r\n              <Button\r\n                onClick={() => {\r\n                  this.setState({ customURL: false });\r\n                }}\r\n              >\r\n                Use Media Library\r\n              </Button>\r\n            </Box>\r\n            <h2>OR ..</h2>\r\n            <Box opacity={!customURL}>\r\n              <Button\r\n                onClick={() => {\r\n                  this.setState({ customURL: true });\r\n                }}\r\n              >\r\n                {\" \"}\r\n                {!customURL ? \"Use\" : \"Close\"} custom URL location?\r\n              </Button>\r\n            </Box>\r\n          </Flex>\r\n          {/* <Fade in={customURL}> */}\r\n          {customURL ? (\r\n            <Input\r\n              inputtype=\"input\"\r\n              label=\"If you want to use an image stored elsewhere, enter the Url address below\"\r\n              value={customURLtext}\r\n              onChange={this.handleCustomURL}\r\n            />\r\n          ) : (\r\n            <div>\r\n              <Paper elevation={5}>\r\n                <ImgGridList\r\n                  tileData={this.props.imageURLs}\r\n                  isModal={true}\r\n                  selectedIndex={activeIndex}\r\n                  selectedImage={this.selectedImage}\r\n                />\r\n              </Paper>\r\n              <Input\r\n                inputtype=\"input\"\r\n                label={`${\r\n                  selectedValue ? selectedLabel : \"Select Media Image URL above\"\r\n                }`}\r\n                value={selectedValue}\r\n                disabled={true}\r\n                placeholder=\"No Media image selected\"\r\n              />\r\n            </div>\r\n          )}\r\n          {/* </Fade> */}\r\n          <Divider />\r\n          <br />\r\n          <Flex>\r\n            <Button onClick={this.props.handleClose}>Cancel</Button>\r\n            <Button onClick={this.confirmImage}>Confirm Image</Button>\r\n          </Flex>\r\n          <br />\r\n        </IsMediaModal>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {mediaTemplate}\r\n        <Modal\r\n          open={this.state.deleteImgOpen}\r\n          handleClose={() => this.setState({ deleteImgOpen: false })}\r\n          title=\"Delete image\"\r\n          description={`Are you sure you would like to delete the image ${\r\n            this.state.selectedName\r\n          }. \\n Please note that anywhere this image is used on the website will no longer work once the image is deleted.`}\r\n        >\r\n          <Flex>\r\n            <Button onClick={this.confirmDelete}>Confirm Delete</Button>\r\n            <Button onClick={() => this.setState({ deleteImgOpen: false })}>\r\n              Cancel\r\n            </Button>\r\n          </Flex>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledDropArea = styled.div`\r\n  border-style: dotted;\r\n  padding: 5px 20px;\r\n  margin: 20px 5px;\r\n  cursor: pointer;\r\n\r\n  /* desktop */\r\n  @media (min-width: 500px) {\r\n    min-width: 455px;\r\n  }\r\n`;\r\n\r\nconst IsMediaModal = styled.div`\r\n  margin-top: -40px;\r\n`;\r\n\r\nexport default Media;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Input from \"../../../components/UI/Input\";\r\nimport Button from \"../../../components/UI/Buttons/Button\";\r\nimport Flex from \"../../../components/UI/Wrappers/Flex\";\r\nimport Grid from \"../../../components/UI/Wrappers/Grid\";\r\nimport Spinner from \"../../../components/UI/Spinner\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nclass Template extends Component {\r\n  handleChange = event => {\r\n    event.preventDefault();\r\n    this.props.changeTemplateState(event.target, \"template\", null);\r\n  };\r\n\r\n  handlesubmit = event => {\r\n    event.preventDefault();\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n\r\n    const url = `/${siteName}/site/template`;\r\n    this.props.templateChangeSubmit(url, this.props.template);\r\n  };\r\n\r\n  handleCheckbox = check => event => {\r\n    console.log(check, event.target.checked);\r\n    const newevent = {\r\n      name: event.target.name,\r\n      value: event.target.checked\r\n    };\r\n    this.props.changeTemplateState(newevent, \"template\", null);\r\n  };\r\n\r\n  handleMediaModal = event => {\r\n    event.preventDefault();\r\n    this.props.openMediaModal(event.target, \"template\", null);\r\n  };\r\n\r\n  clearInput = inputName => {\r\n    const event = { name: inputName, value: \"\" };\r\n    this.props.changeTemplateState(event, \"template\", null);\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.template) return <div />;\r\n    //console.log('templateProps', this.props)\r\n    const buttonStyle = [{ value: \"contained\" }, { value: \"outlined\" }];\r\n    const {\r\n      navButtons,\r\n      siteButtons,\r\n      transparentHeader,\r\n      navLightTheme,\r\n      siteLogo,\r\n      version\r\n    } = this.props.template;\r\n\r\n    return (\r\n      <StyledTemplate>\r\n        <Flex>\r\n          <Input\r\n            inputtype=\"checkbox\"\r\n            sideLabel=\"Is the header toolbar transparent\"\r\n            name=\"transparentHeader\"\r\n            checked={transparentHeader}\r\n            handleChange={this.handleCheckbox}\r\n          />\r\n          <Input\r\n            inputtype=\"checkbox\"\r\n            sideLabel=\"Use Light theme for navigation Bar\"\r\n            name=\"navLightTheme\"\r\n            checked={navLightTheme}\r\n            handleChange={this.handleCheckbox}\r\n          />\r\n        </Flex>\r\n        <Input\r\n          inputtype=\"inputSelector\"\r\n          label=\"Website Logo\"\r\n          name=\"siteLogo\"\r\n          value={siteLogo}\r\n          onChange={this.handleChange}\r\n          onClick={this.handleMediaModal}\r\n          clearInput={this.clearInput}\r\n        />\r\n        <br />\r\n        <Grid cols=\"25% 25%\" colsLarge={\"35% 35%\"} colsMed={\"50% 50%\"}>\r\n          <Input\r\n            inputtype=\"select\"\r\n            label=\"Header Navigation button style\"\r\n            name=\"navButtons\"\r\n            value={navButtons}\r\n            items={buttonStyle}\r\n            onSelectChange={this.handleChange}\r\n          />\r\n          <Input\r\n            inputtype=\"select\"\r\n            label=\"Webpage button style\"\r\n            name=\"siteButtons\"\r\n            value={siteButtons}\r\n            items={buttonStyle}\r\n            onSelectChange={this.handleChange}\r\n          />\r\n          <Button variant={navButtons}>\r\n            {navButtons === \"contained\" ? \"Contained Style\" : \"Outlined Style\"}\r\n          </Button>\r\n          <Button variant={siteButtons}>\r\n            {siteButtons === \"contained\" ? \"Contained Style\" : \"Outlined Style\"}\r\n          </Button>\r\n        </Grid>\r\n        <br />\r\n        <hr />\r\n        <br />\r\n        <Flex justifyContent=\"flex-start\">\r\n          <Button margin=\"2px 5px 15px 20px\" onClick={this.handlesubmit}>\r\n            Update\r\n          </Button>\r\n          {this.props.isUpdating && <Spinner />}\r\n          {this.props.stateBackup && (\r\n            <Button\r\n              margin=\"2px 20px 15px 20px\"\r\n              onClick={this.props.cancelUpdate}\r\n            >\r\n              Undo Changes\r\n            </Button>\r\n          )}\r\n        </Flex>\r\n      </StyledTemplate>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledTemplate = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nexport default Template;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Input from \"../../../components/UI/Input\";\r\nimport Button from \"../../../components/UI/Buttons/Button\";\r\nimport Flex from \"../../../components/UI/Wrappers/Flex\";\r\nimport Grid from \"../../../components/UI/Wrappers/Grid\";\r\nimport Box from \"../../../components/UI/Wrappers/Box\";\r\nimport Spinner from \"../../../components/UI/Spinner\";\r\nimport Minimizer from \"../../../components/UI/Wrappers/Minimizer\";\r\n\r\nimport Dashboard from \"../../Dashboard/Dashboard\";\r\n\r\nclass Homepage extends Component {\r\n  state = {\r\n    previewOpen: false\r\n  };\r\n\r\n  handleChange = event => {\r\n    event.preventDefault();\r\n    this.props.changeHomepageState(event.target, \"home\", null);\r\n  };\r\n\r\n  handlesubmit = event => {\r\n    event.preventDefault();\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n\r\n    const url = `/${siteName}/site/home/content`;\r\n    this.props.homepageChangeSubmit(url, this.props.homePage.content);\r\n  };\r\n\r\n  handleCheckbox = check => event => {\r\n    console.log(check, event.target.checked);\r\n    const newevent = {\r\n      name: event.target.name,\r\n      value: event.target.checked\r\n    };\r\n    this.props.changeHomepageState(newevent, \"home\", null);\r\n  };\r\n\r\n  handleMediaModal = event => {\r\n    event.preventDefault();\r\n    this.props.openMediaModal(event.target, \"home\", null);\r\n  };\r\n\r\n  handleColourPicker = event => {\r\n    this.props.changeHomepageState(event.target, \"home\", null);\r\n  };\r\n\r\n  clearInput = inputName => {\r\n    const event = { name: inputName, value: \"\" };\r\n    this.props.changeHomepageState(event, \"home\", null);\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.homePage) return <div />;\r\n    const positionArray = [\r\n      { value: \"Top\" },\r\n      { value: \"Middle\" },\r\n      { value: \"Bottom\" }\r\n    ];\r\n    const floatArray = [{ value: \"left\" }, { value: \"right\" }];\r\n\r\n    const {\r\n      topBanner,\r\n      topBannerHalfwidth,\r\n      topBannerImgSize,\r\n      topBannerHWbackImg,\r\n      topBannerHWBackColour,\r\n      topBannerTxtRightSide,\r\n      topBannerTxtLightTheme,\r\n      topBannerLogo,\r\n      topBannerfade,\r\n      topBannerTitle,\r\n      topBannerSubtitle,\r\n      topBannerDescription,\r\n      topBannerBtnText,\r\n      topBannerLink,\r\n      midBanner,\r\n      midBannerHalfwidth,\r\n      midBannerImgSize,\r\n      midBannerHWbackImg,\r\n      midBannerHWBackColour,\r\n      midBannerTxtRightSide,\r\n      midBannerTxtLightTheme,\r\n      midBannerLogo,\r\n      midBannerfade,\r\n      midBannerTitle,\r\n      midBannerSubtitle,\r\n      midBannerDescription,\r\n      midBannerBtnText,\r\n      midBannerLink,\r\n      bottomBanner,\r\n      mainText,\r\n      mainTextPosition,\r\n      mainTextCenterTitle,\r\n      mainTextRightSide,\r\n      mainTextBackColour,\r\n      mainTextImg,\r\n      mainTextImgAlign,\r\n      mainTextImgWidth,\r\n      mainTextImgHeight\r\n    } = this.props.homePage.content;\r\n    console.log(\"Homepage Props\", this.props);\r\n\r\n    return (\r\n      <div className=\"fullwidth\">\r\n        <StyledHomePage>\r\n          <div>\r\n            <Input\r\n              inputtype=\"inputSelector\"\r\n              label={`${\r\n                topBannerHalfwidth\r\n                  ? \"Top Banner Image (Inside Banner)\"\r\n                  : \"Top Banner Image\"\r\n              }`}\r\n              name=\"topBanner\"\r\n              value={topBanner}\r\n              onChange={this.handleChange}\r\n              onClick={this.handleMediaModal}\r\n              clearInput={this.clearInput}\r\n            />\r\n            {topBanner && (\r\n              <Minimizer>\r\n                <Box>\r\n                  <Flex>\r\n                    <Input\r\n                      inputtype=\"checkbox\"\r\n                      sideLabel=\"Use the Top Banner image inside the Banner \"\r\n                      name=\"topBannerHalfwidth\"\r\n                      checked={topBannerHalfwidth}\r\n                      handleChange={this.handleCheckbox}\r\n                    />\r\n                  </Flex>\r\n                  {topBannerHalfwidth && (\r\n                    <>\r\n                      <Input\r\n                        inputtype=\"inputSelector\"\r\n                        label=\"Banner Background Image\"\r\n                        name=\"topBannerHWbackImg\"\r\n                        value={topBannerHWbackImg}\r\n                        onChange={this.handleChange}\r\n                        onClick={this.handleMediaModal}\r\n                        clearInput={this.clearInput}\r\n                      />\r\n                      <Flex>\r\n                        <Input\r\n                          inputtype=\"input\"\r\n                          type=\"number\"\r\n                          label=\"Banner Image Size\"\r\n                          name=\"topBannerImgSize\"\r\n                          value={topBannerImgSize}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        <Input\r\n                          inputtype=\"inputColourPicker\"\r\n                          label=\"Banner Background Colour\"\r\n                          name=\"topBannerHWBackColour\"\r\n                          value={topBannerHWBackColour}\r\n                          changeColour={this.handleColourPicker}\r\n                          pageId={\"home\"}\r\n                        />\r\n                      </Flex>\r\n                    </>\r\n                  )}\r\n                  <Flex>\r\n                    <Input\r\n                      inputtype=\"checkbox\"\r\n                      sideLabel=\"Banner Text Right Side\"\r\n                      name=\"topBannerTxtRightSide\"\r\n                      checked={topBannerTxtRightSide}\r\n                      handleChange={this.handleCheckbox}\r\n                    />\r\n                    <Input\r\n                      inputtype=\"checkbox\"\r\n                      sideLabel=\"Banner Light Text Color\"\r\n                      name=\"topBannerTxtLightTheme\"\r\n                      checked={topBannerTxtLightTheme}\r\n                      handleChange={this.handleCheckbox}\r\n                    />\r\n                  </Flex>\r\n                  <Flex>\r\n                    <Input\r\n                      inputtype=\"checkbox\"\r\n                      sideLabel=\"Use Logo in banner\"\r\n                      name=\"topBannerLogo\"\r\n                      checked={topBannerLogo}\r\n                      handleChange={this.handleCheckbox}\r\n                    />\r\n                    <Input\r\n                      inputtype=\"checkbox\"\r\n                      sideLabel=\"Banner content fade in effect\"\r\n                      name=\"topBannerfade\"\r\n                      checked={topBannerfade}\r\n                      handleChange={this.handleCheckbox}\r\n                    />\r\n                  </Flex>\r\n                  <Input\r\n                    inputtype=\"input\"\r\n                    label=\"Banner Title\"\r\n                    name=\"topBannerTitle\"\r\n                    value={topBannerTitle}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <Input\r\n                    inputtype=\"input\"\r\n                    label=\"Banner Subtitle\"\r\n                    name=\"topBannerSubtitle\"\r\n                    value={topBannerSubtitle}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <Input\r\n                    inputtype=\"input\"\r\n                    label=\"Banner Description\"\r\n                    name=\"topBannerDescription\"\r\n                    value={topBannerDescription}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <Flex>\r\n                    <Input\r\n                      inputtype=\"input\"\r\n                      label=\"Banner Button Text\"\r\n                      name=\"topBannerBtnText\"\r\n                      value={topBannerBtnText}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                    <Input\r\n                      inputtype=\"select\"\r\n                      label=\"Banner Link\"\r\n                      name=\"topBannerLink\"\r\n                      value={topBannerLink}\r\n                      items={this.props.availableRoutes}\r\n                      onSelectChange={this.handleChange}\r\n                    />\r\n                  </Flex>\r\n                </Box>\r\n              </Minimizer>\r\n            )}\r\n            <Input\r\n              inputtype=\"inputSelector\"\r\n              label={`${\r\n                midBannerHalfwidth\r\n                  ? \"Middle Banner Image (Inside Banner)\"\r\n                  : \"Middle Banner Image\"\r\n              }`}\r\n              name=\"midBanner\"\r\n              value={midBanner}\r\n              onChange={this.handleChange}\r\n              onClick={this.handleMediaModal}\r\n              clearInput={this.clearInput}\r\n            />\r\n            {midBanner && (\r\n              <Minimizer>\r\n                <Box>\r\n                  <Flex>\r\n                    <Input\r\n                      inputtype=\"checkbox\"\r\n                      sideLabel=\"Use the Middle Banner image inside the Banner\"\r\n                      name=\"midBannerHalfwidth\"\r\n                      checked={midBannerHalfwidth}\r\n                      handleChange={this.handleCheckbox}\r\n                    />\r\n                  </Flex>\r\n                  {midBannerHalfwidth && (\r\n                    <>\r\n                      <Input\r\n                        inputtype=\"inputSelector\"\r\n                        label=\"Banner Background Image\"\r\n                        name=\"midBannerHWbackImg\"\r\n                        value={midBannerHWbackImg}\r\n                        onChange={this.handleChange}\r\n                        onClick={this.handleMediaModal}\r\n                        clearInput={this.clearInput}\r\n                      />\r\n                      <Flex>\r\n                        <Input\r\n                          inputtype=\"input\"\r\n                          type=\"number\"\r\n                          label=\"Banner Image Size\"\r\n                          name=\"midBannerImgSize\"\r\n                          value={midBannerImgSize}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        <Input\r\n                          inputtype=\"inputColourPicker\"\r\n                          label=\"Banner Background Colour\"\r\n                          name=\"midBannerHWBackColour\"\r\n                          value={midBannerHWBackColour}\r\n                          changeColour={this.handleColourPicker}\r\n                          pageId={\"home\"}\r\n                        />\r\n                      </Flex>\r\n                    </>\r\n                  )}\r\n                  <Flex>\r\n                    <Input\r\n                      inputtype=\"checkbox\"\r\n                      sideLabel=\"Banner Text Right Side\"\r\n                      name=\"midBannerTxtRightSide\"\r\n                      checked={midBannerTxtRightSide}\r\n                      handleChange={this.handleCheckbox}\r\n                    />\r\n                    <Input\r\n                      inputtype=\"checkbox\"\r\n                      sideLabel=\"Banner Light Text Color\"\r\n                      name=\"midBannerTxtLightTheme\"\r\n                      checked={midBannerTxtLightTheme}\r\n                      handleChange={this.handleCheckbox}\r\n                    />\r\n                  </Flex>\r\n                  <Flex>\r\n                    <Input\r\n                      inputtype=\"checkbox\"\r\n                      sideLabel=\"Use Logo in banner\"\r\n                      name=\"midBannerLogo\"\r\n                      checked={midBannerLogo}\r\n                      handleChange={this.handleCheckbox}\r\n                    />\r\n                    <Input\r\n                      inputtype=\"checkbox\"\r\n                      sideLabel=\"Banner content fade in effect\"\r\n                      name=\"midBannerfade\"\r\n                      checked={midBannerfade}\r\n                      handleChange={this.handleCheckbox}\r\n                    />\r\n                  </Flex>\r\n                  <Input\r\n                    inputtype=\"input\"\r\n                    label=\"Banner Title\"\r\n                    name=\"midBannerTitle\"\r\n                    value={midBannerTitle}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <Input\r\n                    inputtype=\"input\"\r\n                    label=\"Banner Subtitle\"\r\n                    name=\"midBannerSubtitle\"\r\n                    value={midBannerSubtitle}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <Input\r\n                    inputtype=\"input\"\r\n                    label=\"Banner Description\"\r\n                    name=\"midBannerDescription\"\r\n                    value={midBannerDescription}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <Flex>\r\n                    <Input\r\n                      inputtype=\"input\"\r\n                      label=\"Banner Button Text\"\r\n                      name=\"midBannerBtnText\"\r\n                      value={midBannerBtnText}\r\n                      onChange={this.handleChange}\r\n                    />\r\n                    <Input\r\n                      inputtype=\"select\"\r\n                      label=\"Banner Link\"\r\n                      name=\"midBannerLink\"\r\n                      value={midBannerLink}\r\n                      items={this.props.availableRoutes}\r\n                      onSelectChange={this.handleChange}\r\n                    />\r\n                  </Flex>\r\n                </Box>\r\n              </Minimizer>\r\n            )}\r\n            <Input\r\n              inputtype=\"textarea\"\r\n              label=\"Main Body Text\"\r\n              name=\"mainText\"\r\n              value={mainText}\r\n              onChange={this.handleChange}\r\n            />\r\n            <Minimizer>\r\n              <Box>\r\n                <Flex>\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Center Header text\"\r\n                    name=\"mainTextCenterTitle\"\r\n                    checked={mainTextCenterTitle}\r\n                    handleChange={this.handleCheckbox}\r\n                  />\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Align Text Right Side\"\r\n                    name=\"mainTextRightSide\"\r\n                    checked={mainTextRightSide}\r\n                    handleChange={this.handleCheckbox}\r\n                  />\r\n                </Flex>\r\n                <Input\r\n                  inputtype=\"select\"\r\n                  label=\"Main Text Page Position\"\r\n                  name=\"mainTextPosition\"\r\n                  value={mainTextPosition}\r\n                  items={positionArray}\r\n                  onSelectChange={this.handleChange}\r\n                />\r\n                <Input\r\n                  inputtype=\"inputSelector\"\r\n                  label=\"Add a Small Image\"\r\n                  name=\"mainTextImg\"\r\n                  value={mainTextImg}\r\n                  onChange={this.handleChange}\r\n                  onClick={this.handleMediaModal}\r\n                  clearInput={this.clearInput}\r\n                />\r\n                <Grid cols={\"33% 33% 33%\"} margin={\"0 15px 0 0\"}>\r\n                  <Input\r\n                    inputtype=\"select\"\r\n                    label=\"Image align position\"\r\n                    name=\"mainTextImgAlign\"\r\n                    value={mainTextImgAlign}\r\n                    items={floatArray}\r\n                    onSelectChange={this.handleChange}\r\n                  />\r\n                  <Input\r\n                    inputtype=\"input\"\r\n                    type=\"number\"\r\n                    label=\"Banner Image Width\"\r\n                    name=\"mainTextImgWidth\"\r\n                    value={mainTextImgWidth || 200}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <Input\r\n                    inputtype=\"input\"\r\n                    type=\"number\"\r\n                    label=\"Banner Image Height\"\r\n                    name=\"mainTextImgHeight\"\r\n                    value={mainTextImgHeight || 135}\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </Grid>\r\n                <Input\r\n                  inputtype=\"inputColourPicker\"\r\n                  label=\"Banner Background Colour\"\r\n                  name=\"mainTextBackColour\"\r\n                  value={mainTextBackColour}\r\n                  changeColour={this.handleColourPicker}\r\n                  pageId={\"home\"}\r\n                />\r\n              </Box>\r\n            </Minimizer>\r\n          </div>\r\n          <Preview>\r\n            <Dashboard\r\n              pageInfo={this.props.homePage}\r\n              {...this.props}\r\n              template={this.props.template}\r\n              overlayBlocker={true}\r\n            />\r\n          </Preview>\r\n        </StyledHomePage>\r\n        <Flex justifyContent=\"flex-start\">\r\n          <Button margin=\"2px 5px 15px 20px\" onClick={this.handlesubmit}>\r\n            Update\r\n          </Button>\r\n          {this.props.isUpdating && <Spinner />}\r\n          {this.props.stateBackup && (\r\n            <Button\r\n              margin=\"2px 20px 15px 20px\"\r\n              onClick={this.props.cancelUpdate}\r\n            >\r\n              Undo Changes\r\n            </Button>\r\n          )}\r\n        </Flex>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Preview = styled.div`\r\n  display: block;\r\n  zoom: 30%;\r\n  padding-top: 56px;\r\n  box-shadow: 2px 2px 2px;\r\n\r\n  @media (max-width: 500px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst StyledHomePage = styled.div`\r\n  padding: 3vh;\r\n  display: grid;\r\n  grid-gap: 8px;\r\n  grid-template-columns: 65% 35%;\r\n`;\r\n\r\nexport default Homepage;\r\n","import React from \"react\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250\r\n    }\r\n  }\r\n};\r\n\r\nclass MultiSelect extends React.Component {\r\n  state = {\r\n    name: []\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ name: event.target.value });\r\n    if (this.props.handleChange) {\r\n      this.props.handleChange(event);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { label, items, name, value, margin, width } = this.props;\r\n\r\n    return (\r\n      <StyledSelect margin={margin} width={width}>\r\n        <FormControl>\r\n          <InputLabel htmlFor=\"select-multiple-chip\">{label}</InputLabel>\r\n          <Select\r\n            multiple\r\n            value={value || this.state.name}\r\n            onChange={this.handleChange}\r\n            input={<Input id=\"select-multiple-chip\" />}\r\n            name={name}\r\n            renderValue={selected => (\r\n              <div className={\"chips\"}>\r\n                {selected.map(value => (\r\n                  <Chip key={value} label={value} className={\"chip\"} />\r\n                ))}\r\n              </div>\r\n            )}\r\n            MenuProps={MenuProps}\r\n          >\r\n            {items.map(name => (\r\n              <MenuItem key={name} value={name}>\r\n                {name}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </StyledSelect>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledSelect = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;    \r\n    margin: ${props => props.margin || \"8px\"};\r\n\r\n    div {\r\n      /* margin: ${props => props.margin || \"8px\"}; */\r\n      width: ${props => props.width || \"400px\"};\r\n      /* min-width: ${props => props.minwidth || \"200px\"}; */\r\n      max-width: ${props => props.minwidth || \"450px\"};\r\n\r\n      .chips {\r\n        min-width:auto;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        \r\n\r\n        .chip{\r\n          margin: 2px;\r\n          flex-wrap: wrap;\r\n          width: auto;\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n`;\r\n\r\nexport default MultiSelect;\r\n","import React from \"react\";\r\nimport Input from \"../../../../components/UI/Input\";\r\nimport Minimizer from \"../../../../components/UI/Wrappers/Minimizer\";\r\nimport Flex from \"../../../../components/UI/Wrappers/Flex\";\r\n\r\nimport MultiSelect from \"../../../../components/UI/MultiSelect\";\r\n\r\nconst ContactUsPlugin = props => {\r\n  if (!props.plugin) return <div />;\r\n\r\n  const { contactUsActive, contactUsPages, contactUsEmail } = props.plugin;\r\n  console.log(\"contact us settings props\", props);\r\n  return (\r\n    <div>\r\n      <Flex>\r\n        <Input\r\n          inputtype=\"checkbox\"\r\n          sideLabel=\"Contact Us Plugin\"\r\n          parentObj={props.parentObj}\r\n          name=\"contactUsActive\"\r\n          checked={contactUsActive}\r\n          handleChange={props.handleCheckbox}\r\n        />\r\n        {contactUsActive && (\r\n          <MultiSelect\r\n            label=\"Select the pages where this plugin is available\"\r\n            items={props.availableRoutes}\r\n            name=\"contactUsPages\"\r\n            value={contactUsPages}\r\n            handleChange={props.handleChange}\r\n            margin={\"0 10px 20px 15px\"}\r\n          />\r\n        )}\r\n      </Flex>\r\n\r\n      {contactUsActive && (\r\n        <Minimizer padding={\"20px\"}>\r\n          <div>\r\n            <Input\r\n              inputtype=\"input\"\r\n              label=\"Enter Business email where contact requests are received\"\r\n              parentObj={props.parentObj}\r\n              name=\"contactUsEmail\"\r\n              value={contactUsEmail}\r\n              onChange={props.handleChange}\r\n            />\r\n          </div>\r\n        </Minimizer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactUsPlugin;\r\n","import React from \"react\";\r\nimport Input from \"../../../../components/UI/Input\";\r\nimport Minimizer from \"../../../../components/UI/Wrappers/Minimizer\";\r\nimport Flex from \"../../../../components/UI/Wrappers/Flex\";\r\n\r\nimport MultiSelect from \"../../../../components/UI/MultiSelect\";\r\n\r\nconst BookingPlugin = props => {\r\n    if (!props.plugin) return <div />;\r\n\r\n    const { bookingActive, bookingPages, bookingEmail, bookingForm, bookingCalendarID, bookingApiKey } = props.plugin;\r\n    console.log(\"booking settings props\", props);\r\n    return (\r\n        <div>\r\n            <Flex>\r\n                <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Booking Plugin\"\r\n                    parentObj={props.parentObj}\r\n                    name=\"bookingActive\"\r\n                    checked={bookingActive}\r\n                    handleChange={props.handleCheckbox}\r\n                />\r\n                {bookingActive && (\r\n                    <MultiSelect\r\n                        label=\"Select the pages where this plugin is available\"\r\n                        items={props.availableRoutes}\r\n                        name=\"bookingPages\"\r\n                        value={bookingPages}\r\n                        handleChange={props.handleChange}\r\n                        margin={\"0 10px 20px 15px\"}\r\n                    />\r\n                )}\r\n            </Flex>\r\n\r\n            {bookingActive && (\r\n                <Minimizer emptyHeight={\"200px\"} padding={\"20px\"}>\r\n                    <div>\r\n                        <Input\r\n                            inputtype=\"input\"\r\n                            label=\"Enter Business email where bookings are received\"\r\n                            parentObj={props.parentObj}\r\n                            name=\"bookingEmail\"\r\n                            value={bookingEmail}\r\n                            onChange={props.handleChange}\r\n                        />\r\n                        <Input\r\n                            inputtype=\"checkbox\"\r\n                            sideLabel=\"Include Contact form with booking calendar\"\r\n                            parentObj={props.parentObj}\r\n                            name=\"bookingForm\"\r\n                            checked={bookingForm}\r\n                            handleChange={props.handleCheckbox}\r\n                        />\r\n                        <Input\r\n                            inputtype=\"input\"\r\n                            label=\"Gmail Calendar Id\"\r\n                            parentObj={props.parentObj}\r\n                            name=\"bookingCalendarID\"\r\n                            value={bookingCalendarID}\r\n                            onChange={props.handleChange}\r\n                        />\r\n                        <Input\r\n                            inputtype=\"input\"\r\n                            label=\"Gmail Api Key\"\r\n                            parentObj={props.parentObj}\r\n                            name=\"bookingApiKey\"\r\n                            value={bookingApiKey}\r\n                            onChange={props.handleChange}\r\n                        />\r\n                    </div>\r\n                </Minimizer>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookingPlugin;\r\n","import React, { Component } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport Spinner from \"../../../components/UI/Spinner\";\r\nimport Flex from \"../../../components/UI/Wrappers/Flex\";\r\nimport Button from \"../../../components/UI/Buttons/Button\";\r\n\r\nimport ContactUsPlugin from \"./contactUsPlugin/ContactUsPlugin\";\r\nimport BookingPlugin from \"./bookingPlugin/BookingPlugin\";\r\n\r\nclass Plugins extends Component {\r\n  state = {\r\n    contactUsPlugin: false\r\n  };\r\n\r\n  accordianClick = name => {\r\n    this.setState({ [name]: !this.state[name] });\r\n  };\r\n\r\n  handleChange = (event, parentObj) => {\r\n    //event.preventDefault();\r\n    this.props.changePluginState(event.target, \"plugins\", parentObj);\r\n  };\r\n\r\n  handleCheckbox = (check, parentObj) => event => {\r\n    console.log(check, parentObj, event.target.checked);\r\n    const newevent = {\r\n      name: event.target.name,\r\n      value: event.target.checked\r\n    };\r\n    this.props.changePluginState(newevent, \"plugins\", parentObj);\r\n  };\r\n\r\n  handlesubmit = event => {\r\n    event.preventDefault();\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n\r\n    const url = `/${siteName}/site/plugins`;\r\n    this.props.pluginsChangeSubmit(url, this.props.plugins);\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.plugins)\r\n      return (\r\n        <div>\r\n          <Spinner />\r\n        </div>\r\n      );\r\n\r\n    console.log(\"plugins props\", this.props);\r\n\r\n    let availableRoutes = this.props.availableRoutes.map(route => {\r\n      const value = route.value === \"/\" ? \"home\" : route.value;\r\n      let str = value.split(\"/\").pop();\r\n      return str;\r\n    });\r\n\r\n    availableRoutes.unshift(\"All Pages\");\r\n\r\n    return (\r\n      <div>\r\n        <StyledPlugins>\r\n          <ContactUsPlugin\r\n            plugin={this.props.plugins.contactUs}\r\n            name={\"contactUsPlugin\"}\r\n            parentObj=\"contactUs\"\r\n            availableRoutes={availableRoutes}\r\n            accordianClick={this.accordianClick}\r\n            handleCheckbox={this.handleCheckbox}\r\n            handleChange={e => this.handleChange(e, \"contactUs\")}\r\n          />\r\n          <br/><br/>\r\n          <BookingPlugin\r\n            plugin={this.props.plugins.booking}\r\n            name={\"bookingPlugin\"}\r\n            parentObj=\"booking\"\r\n            availableRoutes={availableRoutes}\r\n            accordianClick={this.accordianClick}\r\n            handleCheckbox={this.handleCheckbox}\r\n            handleChange={e => this.handleChange(e, \"booking\")}\r\n          />\r\n        </StyledPlugins>\r\n        <Flex justifyContent=\"flex-start\">\r\n          <Button margin=\"2px 5px 15px 20px\" onClick={this.handlesubmit}>\r\n            Update\r\n          </Button>\r\n          {this.props.isUpdating && <Spinner />}\r\n          {this.props.stateBackup && (\r\n            <Button\r\n              margin=\"2px 20px 15px 20px\"\r\n              onClick={this.props.cancelUpdate}\r\n            >\r\n              Undo Changes\r\n            </Button>\r\n          )}\r\n        </Flex>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledPlugins = styled.div`\r\n  width: 100%;\r\n`;\r\nexport default Plugins;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../store/actions/index\";\r\n\r\nimport Spinner from \"../../components/UI/Spinner\";\r\nimport Button from \"../../components/UI/Buttons/Button\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport Flex from \"../../components/UI/Wrappers/Flex\";\r\n\r\nclass AuthModal extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.isAuthenticated !== prevProps.isAuthenticated) {\r\n      this.props.isTimedOut();\r\n    }\r\n  }\r\n\r\n  onFormChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    this.props.onAuth(this.state.email, this.state.password, this.props.admin);\r\n  };\r\n\r\n  backToHome = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    console.log(\"AuthModal page props\", this.props);\r\n\r\n    let errorMessage = null;\r\n\r\n    if (this.props.error) {\r\n      // const errorCode={\r\n      //   EMAIL_NOT_FOUND: 'There is no user record corresponding to this email address',\r\n      //   INVALID_PASSWORD: 'The password entered was invalid - please try again',\r\n      //   USER_DISABLED: 'The user account has been disabled by an administrator.',\r\n      //   INVALID_EMAIL: 'The email address entered is invalid'\r\n      // }\r\n      errorMessage = (\r\n        // <p>{ errorCode[this.props.error.message] }</p>\r\n        <p>{this.props.error}</p>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>Administrator Login</div>\r\n        <br />\r\n        <Input\r\n          inputtype=\"input\"\r\n          placeholder=\"email\"\r\n          name=\"email\"\r\n          value={this.state.email}\r\n          onChange={this.onFormChange}\r\n        />\r\n        <Input\r\n          inputtype=\"input\"\r\n          placeholder=\"password\"\r\n          name=\"password\"\r\n          value={this.state.password}\r\n          onChange={this.onFormChange}\r\n        />\r\n        {errorMessage}\r\n        <br />\r\n        <Flex>\r\n          <Button onClick={this.backToHome}>Cancel</Button>\r\n          <Button onClick={this.submitHandler}>Submit</Button>\r\n        </Flex>\r\n\r\n        {this.props.loading && <Spinner />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.auth.loading,\r\n    error: state.auth.error,\r\n    admin: state.mainState.admin,\r\n    isAuthenticated: state.auth.userId !== null\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuth: (email, password, admin) =>\r\n      dispatch(actions.auth(email, password, admin))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AuthModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../store/actions/index\";\r\n\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport Accordian from \"../../components/UI/Accordian\";\r\nimport TabsMenu from \"./Navigation/TabsMenu\";\r\nimport Modal from \"../../components/UI/Modal\";\r\nimport Button from \"../../components/UI/Buttons/Button\";\r\nimport Toast from \"../../components/UI/Toast\";\r\nimport Flex from \"../../components/UI/Wrappers/Flex\";\r\n\r\nimport NewPageForm from \"../../components/Forms/NewPageForm\";\r\nimport Media from \"./media/Media\";\r\nimport Template from \"./template/Template\";\r\nimport Homepage from \"./homepage/Homepage\";\r\nimport Plugins from \"./plugins/Plugins\";\r\nimport AuthModal from \"../Auth/AuthModal\";\r\n\r\nclass Admin extends Component {\r\n  state = {\r\n    homepage_accordian: false,\r\n    navigation_accordian: false,\r\n    template_accordian: false,\r\n    media_accordian: false,\r\n\r\n    showSignIn: false,\r\n    newPageOpen: false,\r\n    deletePageModal: false,\r\n    pageToDelete: null,\r\n    openMediaModal: false,\r\n    mediaModalTabItemRef: [],\r\n    mediaImages: [],\r\n    newPageToast: null,\r\n    loading: false,\r\n    error: null\r\n  };\r\n\r\n  componentWillMount() {\r\n    console.log('adminPage - sitename', process.env.REACT_APP_SITENAME)\r\n\r\n    if (!this.props.isAuthenticated && process.env.NODE_ENV === \"production\"){\r\n      this.props.history.push('/authenticate-admin')\r\n    }\r\n\r\n    const user = firebase.auth().currentUser;\r\n\r\n    if (user) {\r\n      // User is signed in.\r\n      console.log(\"user is signed in\");\r\n    } else {\r\n      // No user is signed in.\r\n      console.log(\" No user is signed in.\");\r\n      // firebase.auth().signInWithCustomToken(token).catch(function(error) {\r\n      //     // Handle Errors here.\r\n      //     var errorCode = error.code;\r\n      //     var errorMessage = error.message;\r\n      //     // ...\r\n      // });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    if (prevProps.isAuthenticated && !this.props.isAuthenticated && process.env.NODE_ENV === \"production\"){\r\n      this.props.history.push('/authenticate-admin')\r\n    }\r\n  }\r\n\r\n  logoutHandler = () => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(\r\n        function() {\r\n          console.log(\"Signed Out\");\r\n        },\r\n        function(error) {\r\n          console.error(\"Sign Out Error\", error);\r\n        }\r\n      );\r\n    this.props.onLogoutClick();\r\n  };\r\n\r\n  openMediaModal = (pageInfo, key, parentKey) => {\r\n    console.log(\"opneMedia Modal\", pageInfo, key, parentKey);\r\n    this.setState({\r\n      openMediaModal: true,\r\n      mediaModalTabItemRef: [pageInfo, key, parentKey]\r\n    });\r\n  };\r\n\r\n  closeMediaModal = () => {\r\n    this.setState({ openMediaModal: false });\r\n  };\r\n\r\n  setMediaImages = mediaImages => {\r\n    this.setState({ mediaImages });\r\n  };\r\n\r\n  handleNewPageButton = event => {\r\n    event.preventDefault();\r\n    this.setState({ newPageOpen: !this.state.newPageOpen });\r\n  };\r\n\r\n  submitNewPage = newPage_State => {\r\n    console.log(\"newPage_State\", newPage_State);\r\n    const { title, checked, selectVal } = newPage_State;\r\n    const { navigationItems } = this.props;\r\n    const siteName = process.env.REACT_APP_SITENAME\r\n\r\n    const route = title.replace(/ /g, \"-\").toLowerCase();\r\n\r\n    const defaultContent = {\r\n      id: Date.now(),\r\n      mainText: `This is your newly added ${title} page`\r\n    };\r\n    let url = `/${siteName}/site/navigationItems`;\r\n\r\n    let newPageObj = {\r\n      title,\r\n      route,\r\n      selected: false,\r\n      content: defaultContent\r\n    };\r\n\r\n    if (checked) {\r\n      // const subpageIndex = this.props.navigationItems.findIndex(page => page.title === selectVal);\r\n\r\n      let subpageIndex = null;\r\n      for (let key in navigationItems) {\r\n        if (navigationItems[key].title === selectVal) {\r\n          subpageIndex = key;\r\n        }\r\n      }\r\n\r\n      url = `/${siteName}/site/navigationItems/${subpageIndex}/dropdownPages`;\r\n\r\n      newPageObj = {\r\n        title,\r\n        route,\r\n        content: defaultContent\r\n      };\r\n    }\r\n\r\n    this.setState({ loading: true, error: null }, () => {\r\n      const that = this;\r\n      const newPostKey = firebase\r\n        .database()\r\n        .ref()\r\n        .child(url)\r\n        .push().key;\r\n      const newPage = { [newPostKey]: newPageObj };\r\n\r\n      firebase\r\n        .database()\r\n        .ref()\r\n        .child(url)\r\n        .update(newPage, function(err) {\r\n          if (err) {\r\n            // The write failed...\r\n            that.setState({\r\n              loading: false,\r\n              error: err.code,\r\n              newPageOpen: false,\r\n              showSignIn: true\r\n            });\r\n          } else {\r\n            // Data saved successfully!\r\n            console.log(\"new page added successfully!\");\r\n            that.setState({\r\n              loading: false,\r\n              error: null,\r\n              newPageOpen: false,\r\n              newPageToast: \"New Page added successfully\"\r\n            });\r\n            that.props.onInitWebsiteState();\r\n          }\r\n\r\n          // axios.post(url, newPageObj)\r\n          //   .then(response => {\r\n          //     console.log(response)\r\n          //     this.props.onInitWebsiteState()\r\n          //   })\r\n          //   .then(() =>{\r\n          //     this.setState({loading: false, error: null, newPageOpen: false, newPageToast: 'New Page added successfully' })\r\n          //   })\r\n          //   .then(() => {\r\n          //     setTimeout(() => {\r\n          //         this.setState({newPageToast: null});\r\n          //     }, 7000 );\r\n          //   })\r\n          //   .catch(err => {\r\n          //     console.log(err);\r\n          //     this.setState({loading: false, error: err.response.data.error, newPageOpen: false, showSignIn: true})\r\n        });\r\n    });\r\n  };\r\n\r\n  handleDeletePageModal = (pageId, parentId) => {\r\n    if (this.state.deletePageModal) {\r\n      this.setState({ deletePageModal: false, pageToDelete: null });\r\n    } else {\r\n      this.setState({\r\n        deletePageModal: true,\r\n        pageToDelete: { id: pageId, parentId: parentId }\r\n      });\r\n    }\r\n  };\r\n\r\n  submitDeletePage = () => {\r\n    console.log(this.state.pageToDelete);\r\n    const that = this;\r\n    const { id, parentId } = this.state.pageToDelete;\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n\r\n    let url = `/${siteName}/site/navigationItems/${id}`;\r\n\r\n    if (parentId) {\r\n      url = `/${siteName}/site/navigationItems/${parentId}/dropdownPages/${id}`;\r\n    }\r\n\r\n    firebase\r\n      .database()\r\n      .ref(url)\r\n      .remove()\r\n      .then(function() {\r\n        console.log(\"Remove succeeded.\");\r\n        that.props.onInitWebsiteState();\r\n        that.setState({ deletePageModal: false, pageToDelete: null });\r\n      })\r\n      .catch(function(error) {\r\n        console.log(\"Remove failed: \" + error.message);\r\n      });\r\n  };\r\n\r\n  updatePage = (eventTarget, key, parent) => {\r\n    console.log(eventTarget.value, key, parent);\r\n    this.props.onChangePageState(eventTarget, key, parent);\r\n  };\r\n\r\n  updatePageSubmit = (pageInfo, key, parentKey) => {\r\n    console.log(pageInfo, key, parentKey);\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n\r\n    const URL = !parentKey\r\n      ? `/${siteName}/site/navigationItems/${key}/content`\r\n      : `/${siteName}/site/navigationItems/${parentKey}/dropdownPages/${key}/content`;\r\n\r\n    const user = firebase.auth().currentUser;\r\n\r\n    if (user) {\r\n      // User is signed in.\r\n      console.log(\"user is signed in\");\r\n      this.props.onUpdatePageSubmit(URL, pageInfo);\r\n    } else {\r\n      // No user is signed in.\r\n      console.log(\" No user is signed in.\");\r\n      this.setState({\r\n        showSignIn: true,\r\n        error: \"Permission denied. Please sign in again to Re-authenticate\"\r\n      });\r\n    }\r\n  };\r\n\r\n  timedOutUser = () => {\r\n    const user = firebase.auth().currentUser;\r\n    if (user) {\r\n      // User is signed in\r\n      this.setState({ showSignIn: false });\r\n    } else {\r\n      // No user is signed in.\r\n      console.log(\" No user is signed in.\");\r\n      this.setState({ showSignIn: true });\r\n    }\r\n  };\r\n\r\n  accordianClick = name => {\r\n    this.setState({ [name]: !this.state[name] });\r\n  };\r\n\r\n  // this.props.addPage(url, newPageObj)\r\n\r\n  render() {\r\n    console.log(\"Admin Page props\", this.props);\r\n    const {\r\n      media_accordian,\r\n      template_accordian,\r\n      homepage_accordian,\r\n      navigation_accordian,\r\n      plugins_accordian\r\n    } = this.state;\r\n\r\n    return (\r\n      <StyledAdminPage>\r\n        <Flex justifyContent=\"space-between\">\r\n          <h1 className=\"admin-title\">Admin Page</h1>\r\n          <Button onClick={this.logoutHandler}>logout</Button>\r\n        </Flex>\r\n        <Modal\r\n          open={this.state.showSignIn}\r\n          title=\"You have been logged out\"\r\n          description=\"Your administrator session has expired you will need to log back in to continue\"\r\n        >\r\n          <AuthModal\r\n            history={this.props.history}\r\n            isTimedOut={this.timedOutUser}\r\n          />\r\n        </Modal>\r\n        <div>\r\n          <Accordian\r\n            title={\"Media\"}\r\n            name={\"media_accordian\"}\r\n            onClick={e => this.accordianClick(e)}\r\n          >\r\n            {media_accordian && (\r\n              <Media\r\n                isAuthenticated={this.props.isAuthenticated}\r\n                isTimedOut={this.timedOutUser}\r\n                currentImages={this.props.images}\r\n                refreshState={this.props.onInitWebsiteState}\r\n                isModal={false}\r\n                imageURLs={this.state.mediaImages}\r\n                setMediaImages={this.setMediaImages}\r\n              />\r\n            )}\r\n          </Accordian>\r\n          <br />\r\n\r\n          <Accordian\r\n            title={\"Template\"}\r\n            name={\"template_accordian\"}\r\n            onClick={e => this.accordianClick(e)}\r\n          >\r\n            {template_accordian && (\r\n              <Template\r\n                template={this.props.template}\r\n                changeTemplateState={this.props.onChangePageState}\r\n                templateChangeSubmit={this.props.onUpdatePageSubmit}\r\n                isUpdating={this.props.isUpdating}\r\n                isError={this.props.isError}\r\n                stateBackup={this.props.stateBackup}\r\n                cancelUpdate={this.props.onRevertChanges}\r\n                openMediaModal={this.openMediaModal}\r\n              />\r\n            )}\r\n          </Accordian>\r\n          <br />\r\n\r\n          <Accordian\r\n            title={\"Homepage\"}\r\n            name={\"homepage_accordian\"}\r\n            onClick={e => this.accordianClick(e)}\r\n          >\r\n            {homepage_accordian && (\r\n              <Homepage\r\n                homePage={this.props.home}\r\n                changeHomepageState={this.props.onChangePageState}\r\n                homepageChangeSubmit={this.props.onUpdatePageSubmit}\r\n                isUpdating={this.props.isUpdating}\r\n                isError={this.props.isError}\r\n                stateBackup={this.props.stateBackup}\r\n                cancelUpdate={this.props.onRevertChanges}\r\n                openMediaModal={this.openMediaModal}\r\n                availableRoutes={this.props.availableRoutes}\r\n                template={this.props.template}\r\n                plugins={this.props.plugins}\r\n              />\r\n            )}\r\n          </Accordian>\r\n          <br />\r\n\r\n          <Accordian\r\n            title=\"Navigation and Pages\"\r\n            name={\"navigation_accordian\"}\r\n            onClick={e => this.accordianClick(e)}\r\n          >\r\n            {navigation_accordian && (\r\n              <div className=\"fullwidth\">\r\n                <Button onClick={this.handleNewPageButton}>\r\n                  Add a new page\r\n                </Button>\r\n\r\n                <Modal\r\n                  open={this.state.newPageOpen}\r\n                  navigationItems={this.props.navigationItems}\r\n                  handleClose={this.handleNewPageButton}\r\n                  title=\"Add a new Webpage\"\r\n                  description=\"Here you can add a new page to your website which will show in the header navigation. You can also make the new page a subpage of another navigation link\"\r\n                >\r\n                  <NewPageForm\r\n                    loading={this.state.loading}\r\n                    navigationItems={this.props.navigationItems}\r\n                    handleClose={this.handleNewPageButton}\r\n                    handleSubmit={this.submitNewPage}\r\n                  />\r\n                </Modal>\r\n\r\n                <Modal\r\n                  open={this.state.deletePageModal}\r\n                  navigationItems={this.props.navigationItems}\r\n                  handleClose={this.handleDeletePageModal}\r\n                  title=\"Delete Webpage\"\r\n                  description=\"You are about to delete selected page this is a permanent action, would you like to continue with deleting this page\"\r\n                >\r\n                  <Flex>\r\n                    <Button onClick={this.submitDeletePage}>Delete</Button>\r\n                    <Button onClick={this.handleDeletePageModal}>Cancel</Button>\r\n                  </Flex>\r\n                </Modal>\r\n\r\n                <br />\r\n                <br />\r\n                <TabsMenu\r\n                  navigationItems={this.props.navigationItems}\r\n                  updatePageSubmit={this.updatePageSubmit}\r\n                  onChange={this.updatePage}\r\n                  openMediaModal={this.openMediaModal}\r\n                  handlePageDelete={this.handleDeletePageModal}\r\n                  isUpdating={this.props.isUpdating}\r\n                  cancelUpdate={this.props.onRevertChanges}\r\n                  isError={this.props.isError}\r\n                  stateBackup={this.props.stateBackup}\r\n                  availableRoutes={this.props.availableRoutes}\r\n                  template={this.props.template}\r\n                  plugins={this.props.plugins}\r\n                />\r\n                <br />\r\n              </div>\r\n            )}\r\n          </Accordian>\r\n          <br />\r\n\r\n          <Accordian\r\n            title={\"Plugins\"}\r\n            name={\"plugins_accordian\"}\r\n            onClick={e => this.accordianClick(e)}\r\n          >\r\n            {plugins_accordian && (\r\n              <Plugins\r\n                plugins={this.props.plugins}\r\n                changePluginState={this.props.onChangePageState}\r\n                pluginsChangeSubmit={this.props.onUpdatePageSubmit}\r\n                availableRoutes={this.props.availableRoutes}\r\n                isUpdating={this.props.isUpdating}\r\n                isError={this.props.isError}\r\n                stateBackup={this.props.stateBackup}\r\n                cancelUpdate={this.props.onRevertChanges}\r\n              />\r\n            )}\r\n          </Accordian>\r\n\r\n          <Modal\r\n            open={this.state.openMediaModal}\r\n            title=\"Choose an image\"\r\n            description=\"Select the media location you would like to use\"\r\n            handleClose={this.closeMediaModal}\r\n          >\r\n            <Media\r\n              isModal={true}\r\n              isAuthenticated={this.props.isAuthenticated}\r\n              handleClose={this.closeMediaModal}\r\n              currentImages={this.props.images}\r\n              imageURLs={this.state.mediaImages}\r\n              setMediaImages={this.setMediaImages}\r\n              tabItemReference={this.state.mediaModalTabItemRef}\r\n              onChangePageState={this.props.onChangePageState}\r\n            />\r\n          </Modal>\r\n        </div>\r\n        {this.state.newPageToast !== null && (\r\n          <Toast message={this.state.newPageToast} />\r\n        )}\r\n        {this.props.updatePageToast !== null && (\r\n          <Toast message={this.props.updatePageToast} />\r\n        )}\r\n        {this.state.error && <Toast message={this.state.error} error={true} />}\r\n      </StyledAdminPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledAdminPage = styled.div`\r\n  background-color: #424242;\r\n  min-height: 100vh;\r\n  padding: 100px 50px;\r\n  margin-top: -75px;\r\n\r\n  .admin-title {\r\n    color: #f5f5f5;\r\n  }\r\n`;\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.userId !== null,\r\n    userId: state.auth.userId,\r\n    home: state.mainState.home,\r\n    navigationItems: state.mainState.navigationItems,\r\n    images: state.mainState.images,\r\n    stateBackup: state.mainState.state_copy,\r\n    updatePageToast: state.admin.pageUpdateToast,\r\n    isUpdating: state.admin.loading,\r\n    isError: state.admin.error,\r\n    availableRoutes: state.admin.routes,\r\n    template: state.mainState.template,\r\n    plugins: state.mainState.plugins\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onInitWebsiteState: () => dispatch(actions.initWebsiteState()),\r\n    onLogoutClick: () => dispatch(actions.logout()),\r\n    onChangePageState: (eventTarget, key, parent) =>\r\n      dispatch(actions.changePageState(eventTarget, key, parent)),\r\n    onUpdatePageSubmit: (pageInfo, url) =>\r\n      dispatch(actions.updatePageSubmit(pageInfo, url)),\r\n    onRevertChanges: () => dispatch(actions.revertStateChange())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Admin);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Page from \"../../components/page\";\r\n\r\nimport Admin from \"../../containers/Admin/Admin\";\r\n\r\nconst AdminRoute = ({ currentUser }) => (\r\n  <Page id=\"admin\" title=\"Admin\" noCrawl>\r\n    <Admin />\r\n  </Page>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: state.auth.currentUser\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(AdminRoute);\r\n","import React from \"react\";\r\nimport Page from \"../../components/page\";\r\n\r\nimport Admin from \"../../containers/Admin/Admin\";\r\n\r\nconst Admin_TEST = props => {\r\n  console.log(\"admin_TEST.props\", props);\r\n  return (\r\n    <Page id=\"admin\" title=\"Admin\" noCrawl>\r\n      <Admin {...props}/>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Admin_TEST;\r\n"],"sourceRoot":""}