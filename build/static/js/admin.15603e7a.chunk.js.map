{"version":3,"sources":["app/components/UI/Accordian.js","app/components/UI/Toast.js","app/components/UI/Wrappers/Minimizer.js","app/components/admin-controls/BannerControls.js","app/components/admin-controls/MainTextControls.js","app/components/admin-controls/TestimonialsControls.js","app/containers/Admin/Navigation/TabItems.js/TabItems.js","app/containers/Admin/Navigation/TabsMenu.js","app/components/UI/Modal.js","app/components/Forms/NewPageForm.js","app/containers/Admin/media/ImgGridList.js","app/containers/Admin/media/Media.js","app/containers/Admin/template/Template.js","app/containers/Admin/homepage/Homepage.js","app/components/UI/MultiSelect.js","app/containers/Admin/plugins/contactUsPlugin/ContactUsPlugin.js","app/containers/Admin/plugins/bookingPlugin/BookingPlugin.js","app/containers/Admin/plugins/testimonialPlugin/TestimonialPlugin.js","app/containers/Admin/plugins/Plugins.js","app/containers/Auth/AuthModal.js","app/containers/Admin/Admin.js","app/routes/admin/index.js","app/routes/adminTest/index.js"],"names":["StyledAccordian","styled","div","_templateObject","props","theme","primaryBackGroundColour","accordian","react_default","a","createElement","ExpansionPanel_default","onChange","onClick","name","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","title","ExpansionPanelDetails_default","children","Toast","state","open","handleClick","_this","setState","handleClose","event","reason","this","toastColour","error","success","StyledSnackBar","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","aria-describedby","message","id","action","IconButton_default","key","aria-label","color","Close_default","Component","Toast_templateObject","Minimizer","isOpen","handleMinimizer","StyledMinimizer","padding","Flex","margin","RemoveCircle_default","AddCircle_default","Collapse_default","in","className","Emtpy","emptyHeight","Minimizer_templateObject","_templateObject2","BannerControls","_this$props","pos","data","handleCheckbox","handleChange","handleMediaModal","clearInput","handleColourPicker","content","Object","keys","filter","fc","includes","map","c","replace","objectSpread","defineProperty","_content","Banner3D","BannerHalfwidth","BannerImgSize","BannerHWbackImg","BannerHWBackColour","BannerImgRoundHW","BannerImg3dHW","BannerTxtRightSide","BannerTxtLightTheme","BannerLogo","Bannerfade","BannerTitle","BannerSubtitle","BannerDescription","BannerBtnText","BannerLink","BannerTextBkgrnd","BannerTextBkgrndColor","BannerTextBkgrndAngled","BannerTextBkgrndRounded","Wrappers_Minimizer","Box","Input","inputtype","sideLabel","concat","checked","Fragment","label","value","mobile","type","min","max","changeColour","items","availableRoutes","onSelectChange","MainTextContols","console","log","mainTextPosition","mainTextCenterTitle","mainTextRightSide","mainTextBackColour","mainTextImg","mainTextImgAlign","mainTextImgWidth","mainTextImgHeight","positionArray","Grid","cols","colsSmall","pageId","TestimonialsContols","testimonials_A","testimonials_B","testimonials_C","testimonials_D","testimonials_E","StyledTabItems","TabItems_templateObject","Preview","TabItems_templateObject2","DeletePageIcon","_templateObject3","TabItems","itemProps","dropdownPages","TabsMenu_TabMenu","navigationItems","parentId","parent","handlePageDelete","openMediaModal","updatePageSubmit","isUpdating","cancelUpdate","stateBackup","template","plugins","preventDefault","target","check","newevent","inputName","_props$itemProps$cont","topBanner","topBannerHalfwidth","midBanner","midBannerHalfwidth","bottomBanner","bottomBannerHalfwidth","mainText","testimonialsPosition","Paper_default","elevation","admin_controls_BannerControls","MainTextControls","TestimonialsControls","pageID","Dashboard","assign","pageInfo","overlayBlocker","justifyContent","Button","Spinner","Delete_default","fontSize","TabMenu","disableTabText","topBannerOptions","midBannerOptions","bottomBannerOptions","prevProps","_this2","tabLabels","tabitems","index","item","Tab_default","TabItems_js_TabItems","StyledTabs","Tooltip_default","AppBar_default","position","Tabs_default","variant","scrollButtons","isError","UI_Toast","TabsMenu_templateObject","Modal","width","fullWidth","maxWidth","Dialog_default","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","description","NewPageForm","_Component","_getPrototypeOf2","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","selectVal","onInputChange","_event$target","scrubbedVal","inherits","createClass","prop","handleSubmit","disabled","loading","TitlebarGridList","columns","spacing","activeIndex","selectedValue","selectedName","handleResize","windowSize","window","innerWidth","handleSelect","tile","selectedImage","addEventListener","removeEventListener","tileData","StyledGrid","GridList_default","cellHeight","GridListTile_default","style","height","ListSubheader_default","component","gridTileClass","selectedIndex","e","src","img","alt","GridListTileBar_default","actionIcon","isModal","deleteImage","ImgGridList_templateObject","Media","uploadOpen","customURL","customURLtext","deleteImgOpen","getImageUrls","that","assertThisInitialized","imageContainer","imageCount","currentImages","returnedCount","storageRef","firebase","storage","ref","i","child","process","getDownloadURL","then","url","toConsumableArray","setMediaImages","catch","onDrop","acceptedFiles","rejectedFiles","auth","currentUser","file","checkFileAlreadyExists","put","snapshot","addImageRefToDb","err","isTimedOut","newPostKey","database","push","updates","update","refreshState","handleCustomURL","confirmImage","_this$state","tabItemReference","image","onChangePageState","imgUrl","confirmDelete","imageURLs","find","remove","delete","handleUploadOpen","isAuthenticated","_this$state2","dropZone","mediaTemplate","noMediaMessage","dist_es","multiple","accept","_ref","getRootProps","getInputProps","isDragActive","StyledDropArea","classNames","dropzone--isActive","selectedLabel","IsMediaModal","opacity","ImgGridList","placeholder","Divider_default","UI_Modal","Media_templateObject","Media_templateObject2","Template","changeTemplateState","handlesubmit","templateChangeSubmit","buttonStyle","_this$props$template","navButtons","siteButtons","transparentHeader","navLightTheme","siteLogo","version","StyledTemplate","colsLarge","colsMed","Template_templateObject","Homepage","previewOpen","changeHomepageState","homepageChangeSubmit","homePage","_this$props$homePage$","StyledHomePage","Homepage_Preview","mobileMargin","Homepage_templateObject","Homepage_templateObject2","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","MultiSelect","StyledSelect","FormControl_default","InputLabel_default","htmlFor","Select_default","input","Input_default","renderValue","selected","Chip_default","MenuItem_default","React","MultiSelect_templateObject","minwidth","ContactUsPlugin","plugin","_props$plugin","contactUsActive","contactUsPages","contactUsEmail","parentObj","UI_MultiSelect","BookingPlugin","bookingActive","bookingPages","bookingEmail","bookingForm","bookingCalendarID","bookingApiKey","bookingTimeSlotsAvailable","bookingTimeSlots","bookingGetCalandarAdvance","bookingSessions","TestimonialsPlugin","testimonialsActive","testimonialsPages","testimonialsEmail","Plugins","contactUsPlugin","accordianClick","changePluginState","pluginsChangeSubmit","route","split","pop","unshift","StyledPlugins","contactUsPlugin_ContactUsPlugin","contactUs","bookingPlugin_BookingPlugin","booking","TestimonialPlugin","testimonials","Plugins_templateObject","AuthModal","email","password","onFormChange","submitHandler","onAuth","admin","backToHome","history","errorMessage","connect","mainState","userId","dispatch","actions","Admin","homepage_accordian","navigation_accordian","template_accordian","media_accordian","showSignIn","newPageOpen","deletePageModal","pageToDelete","mediaModalTabItemRef","mediaImages","newPageToast","logoutHandler","signOut","onLogoutClick","parentKey","closeMediaModal","handleNewPageButton","submitNewPage","newPage_State","toLowerCase","defaultContent","Date","now","newPageObj","subpageIndex","newPage","code","onInitWebsiteState","handleDeletePageModal","submitDeletePage","_this$state$pageToDel","updatePage","eventTarget","URL","onUpdatePageSubmit","timedOutUser","plugins_accordian","StyledAdminPage","Auth_AuthModal","Accordian","media_Media","images","template_Template","onRevertChanges","homepage_Homepage","home","Forms_NewPageForm","plugins_Plugins","updatePageToast","Admin_templateObject","state_copy","pageUpdateToast","routes","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","_components_page__WEBPACK_IMPORTED_MODULE_2__","_containers_Admin_Admin__WEBPACK_IMPORTED_MODULE_3__","noCrawl","_components_page__WEBPACK_IMPORTED_MODULE_1__","_containers_Admin_Admin__WEBPACK_IMPORTED_MODULE_2__","Admin_TEST"],"mappings":"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","file":"static/js/admin.15603e7a.chunk.js","sourcesContent":["import React from \"react\";\n\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nimport styled from \"styled-components\";\n\nconst accordian = props => (\n  <StyledAccordian>\n    <ExpansionPanel onChange={() => props.onClick(props.name)}>\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n        <div>{props.title}</div>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        {props.children ? props.children : <div />}\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  </StyledAccordian>\n);\n\nconst StyledAccordian = styled.div`\n    margin: 15px 5px;\n  \n    /* > div {\n        height: 20px !important;\n        width: 20px !important;\n        margin: \"theme.spacing.unit * 2\";\n        color: ${props => props.theme.primaryBackGroundColour};\n\n    } */\n`;\n\nexport default accordian;\n","import React, { Component } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport styled from \"styled-components\";\n\nclass Toast extends Component {\n  state = {\n    open: false\n  };\n\n  componentDidMount() {\n    this.setState({ open: true });\n  }\n\n  handleClick = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    this.setState({ open: false });\n  };\n\n  render() {\n    let toastColour = \"rgb(49, 49, 49)\";\n    if (this.props.error) toastColour = \"rgb(220, 52, 54)\";\n    if (this.props.success) toastColour = \"rgb(70,154,16)\";\n\n    return (\n      <StyledSnackBar toastColour={toastColour}>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\"\n          }}\n          open={this.state.open}\n          autoHideDuration={6000}\n          onClose={this.handleClose}\n          ContentProps={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          message={<span id=\"message-id\">{this.props.message}</span>}\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              onClick={this.handleClose}\n            >\n              <CloseIcon />\n            </IconButton>\n          ]}\n        />\n      </StyledSnackBar>\n    );\n  }\n}\n\nconst StyledSnackBar = styled.div`\n  > div div {\n    background-color: ${props => props.toastColour};\n    font-weight: ${props => (props.error ? \"bold\" : \"initial\")};\n  }\n`;\n\nexport default Toast;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport AddIcon from \"@material-ui/icons/AddCircle\";\nimport MinusIcon from \"@material-ui/icons/RemoveCircle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Flex from \"./Flex\";\nimport Collapse from \"@material-ui/core/Collapse\";\n\nclass Minimizer extends Component {\n  state = {\n    isOpen: false\n  };\n\n  handleMinimizer = () => {\n    this.setState({ isOpen: !this.state.isOpen });\n  };\n\n  render() {\n    const { isOpen } = this.state;\n\n    return (\n      <StyledMinimizer padding={this.props.padding}>\n        <Flex margin=\"0\">\n          <IconButton\n            aria-label=\"Add\"\n            color=\"primary\"\n            onClick={this.handleMinimizer}\n          >\n            {isOpen ? <MinusIcon /> : <AddIcon />}\n          </IconButton>\n          {isOpen ? (\n            <small onClick={this.handleMinimizer}>\n              Click to minimise options\n            </small>\n          ) : (\n            <small onClick={this.handleMinimizer}>\n              Click to expand further options\n            </small>\n          )}\n        </Flex>\n        <Collapse in={isOpen}>\n          {isOpen ? (\n            <div className=\"minimized_children\">{this.props.children}</div>\n          ) : (\n            <Emtpy emptyHeight={this.props.emptyHeight} />\n          )}\n        </Collapse>\n      </StyledMinimizer>\n    );\n  }\n}\n\nconst Emtpy = styled.div`\n  height: ${props => props.emptyHeight || \"500px\"};\n`;\n\nconst StyledMinimizer = styled.div`\n  border: 2px solid rgba(0, 0, 0, 0.2);\n  border-top: 0;\n  border-bottom-left-radius: 8px;\n  border-bottom-right-radius: 8px;\n  margin-bottom: 35px;\n\n  > div small {\n    cursor: pointer;\n  }\n\n  .minimized_children {\n    padding: ${props => props.padding || \"auto\"};\n  }\n`;\n\nexport default Minimizer;\n","import React, { Component } from 'react';\n\nimport Input from \"../UI/Input\";\nimport Flex from \"../UI/Wrappers/Flex\";\nimport Box from \"../UI/Wrappers/Box\";\nimport Minimizer from \"../UI/Wrappers/Minimizer\";\n\n\nclass BannerControls extends Component {\n\n    render() {\n        const { pos, data, handleCheckbox, handleChange, handleMediaModal, clearInput, handleColourPicker } = this.props\n        let content = {}\n\n        Object.keys(data)\n        .filter(fc => fc.includes(pos+'Banner'))\n        .map(c => {\n            const key = c.replace(pos, '')\n            return content = {...content, [key]: data[c] }\n        });\n\n        const {\n          Banner3D,\n          BannerHalfwidth,\n          BannerImgSize,\n          BannerHWbackImg,\n          BannerHWBackColour,\n          BannerImgRoundHW,\n          BannerImg3dHW,\n          BannerTxtRightSide,\n          BannerTxtLightTheme,\n          BannerLogo,\n          Bannerfade,\n          BannerTitle,\n          BannerSubtitle,\n          BannerDescription,\n          BannerBtnText,\n          BannerLink,\n          BannerTextBkgrnd,\n          BannerTextBkgrndColor,\n          BannerTextBkgrndAngled,\n          BannerTextBkgrndRounded\n\n        } = content\n\n        return (\n            <Minimizer>\n              <Box>\n                <Input\n                  inputtype=\"checkbox\"\n                  sideLabel={`Use the ${pos} banner image inside the banner`}\n                  name={pos+\"BannerHalfwidth\"}\n                  checked={BannerHalfwidth}\n                  handleChange={handleCheckbox}\n                />\n\n                <Input\n                  inputtype=\"checkbox\"\n                  sideLabel={`3d Shadow around the banner`}\n                  name={pos+\"Banner3D\"}\n                  checked={Banner3D}\n                  handleChange={handleCheckbox}\n                />\n                \n                {BannerHalfwidth && (\n                  <>\n                    <Input\n                      inputtype=\"checkbox\"\n                      sideLabel={`Inner Banner image 3d shadow`}\n                      name={pos+\"BannerImg3dHW\"}\n                      checked={BannerImg3dHW}\n                      handleChange={handleCheckbox}\n                    />\n                    <Input\n                      inputtype=\"inputSelector\"\n                      label=\"Banner Background Image\"\n                      name={pos+\"BannerHWbackImg\"}\n                      value={BannerHWbackImg}\n                      onChange={handleChange}\n                      onClick={handleMediaModal}\n                      clearInput={clearInput}\n                    />\n                    <Flex mobile>\n                      <Input\n                        inputtype=\"input\"\n                        type=\"number\"\n                        label=\"Inner Image Size (-100 to 100)\"\n                        name={pos+\"BannerImgSize\"}\n                        value={BannerImgSize}\n                        onChange={handleChange}\n                        min={'-100'}\n                        max={'100'}\n                        \n                      />\n                      <Input\n                        inputtype=\"input\"\n                        type=\"number\"\n                        label=\"Inner Image rounded (0 to 50)\"\n                        name={pos+\"BannerImgRoundHW\"}\n                        value={BannerImgRoundHW}\n                        onChange={handleChange}\n                        min={'0'}\n                        max={'50'}\n                        margin={'0 0 0 15px'}\n                      />\n                      \n                    </Flex>\n                    <Input\n                        inputtype=\"inputColourPicker\"\n                        label=\"Banner Background Colour\"\n                        name={pos+\"BannerHWBackColour\"}\n                        value={BannerHWBackColour}\n                        changeColour={handleColourPicker}\n                    />\n                  </>\n                )}\n\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Banner Text has a Background\"\n                    name={pos+\"BannerTextBkgrnd\"}\n                    checked={BannerTextBkgrnd}\n                    handleChange={handleCheckbox}\n                  />\n\n                  {BannerTextBkgrnd &&\n                    <>\n                    <Flex mobile>\n                      <Input\n                        inputtype=\"input\"\n                        type={'number'}\n                        label=\"Text Background angled (-50 to 50)\"\n                        name={pos+\"BannerTextBkgrndAngled\"}\n                        value={BannerTextBkgrndAngled}\n                        onChange={handleChange}\n                        min={'-50'}\n                        max={'50'}\n                      />\n                      <Input\n                        inputtype=\"input\"\n                        type={'number'}\n                        label=\"Text Background round edges (0-50)\"\n                        name={pos+\"BannerTextBkgrndRounded\"}\n                        value={BannerTextBkgrndRounded}\n                        onChange={handleChange}\n                        min={'0'}\n                        max={'50'}\n                      />\n                    </Flex>\n                    <Input\n                      inputtype=\"inputColourPicker\"\n                      label=\"Banner Text Background Colour\"\n                      name={pos+\"BannerTextBkgrndColor\"}\n                      value={BannerTextBkgrndColor}\n                      changeColour={handleColourPicker}\n                     \n                    />\n                    </>\n                  }\n\n                <Flex mobile>\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Banner Text Right Side\"\n                    name={pos+\"BannerTxtRightSide\"}\n                    checked={BannerTxtRightSide}\n                    handleChange={handleCheckbox}\n                  />\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Banner Light Text Color\"\n                    name={pos+\"BannerTxtLightTheme\"}\n                    checked={BannerTxtLightTheme}\n                    handleChange={handleCheckbox}\n                  />\n                </Flex>\n\n                <Flex mobile>\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Use Logo in banner\"\n                    name={pos+\"BannerLogo\"}\n                    checked={BannerLogo}\n                    handleChange={handleCheckbox}\n                  />\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Banner content fade in effect\"\n                    name={pos+\"Bannerfade\"}\n                    checked={Bannerfade}\n                    handleChange={handleCheckbox}\n                  />\n                </Flex>\n                <Input\n                  inputtype=\"input\"\n                  label=\"Banner Title\"\n                  name={pos+\"BannerTitle\"}\n                  value={BannerTitle}\n                  onChange={handleChange}\n                />\n                <Input\n                  inputtype=\"input\"\n                  label=\"Banner Subtitle\"\n                  name={pos+\"BannerSubtitle\"}\n                  value={BannerSubtitle}\n                  onChange={handleChange}\n                />\n                <Input\n                  inputtype=\"input\"\n                  label=\"Banner Description\"\n                  name={pos+\"BannerDescription\"}\n                  value={BannerDescription}\n                  onChange={handleChange}\n                />\n                <Flex mobile>\n                  <Input\n                    inputtype=\"input\"\n                    label=\"Banner Button Text\"\n                    name={pos+\"BannerBtnText\"}\n                    value={BannerBtnText}\n                    onChange={handleChange}\n                  />\n                  <Input\n                    inputtype=\"select\"\n                    label=\"Banner Link\"\n                    name={pos+\"BannerLink\"}\n                    value={BannerLink}\n                    items={this.props.availableRoutes}\n                    onSelectChange={handleChange}\n                  />\n                </Flex>\n              </Box>\n            </Minimizer>\n\n        );\n    }\n}\n\nexport default BannerControls;","import React from 'react';\n\nimport Input from \"../UI/Input\";\nimport Flex from \"../UI/Wrappers/Flex\";\nimport Grid from \"../UI/Wrappers/Grid\";\nimport Box from \"../UI/Wrappers/Box\";\nimport Minimizer from \"../UI/Wrappers/Minimizer\";\n\nconst MainTextContols = (props) => {\n\n    const {data} = props\n    let content = {}\n\n    Object.keys(data)\n        .filter(fc => fc.includes('mainText'))\n        .map(c => {\n            return content = {...content, [c]: data[c] }\n        });\n    \n    console.log('content', content)\n    \n    const {\n      mainTextPosition,\n      mainTextCenterTitle,\n      mainTextRightSide,\n      mainTextBackColour,\n      mainTextImg,\n      mainTextImgAlign,\n      mainTextImgWidth,\n      mainTextImgHeight\n    } = content;\n    \n    const floatArray = [{ value: \"left\" }, { value: \"right\" }];\n\n    return (\n        <Minimizer>\n          <Box>\n            <Flex mobile>\n                <Input\n                inputtype=\"checkbox\"\n                sideLabel=\"Center Header text\"\n                name=\"mainTextCenterTitle\"\n                checked={mainTextCenterTitle}\n                handleChange={props.handleCheckbox}\n                />\n                <Input\n                inputtype=\"checkbox\"\n                sideLabel=\"Align Text Right Side\"\n                name=\"mainTextRightSide\"\n                checked={mainTextRightSide}\n                handleChange={props.handleCheckbox}\n                />\n            </Flex>\n            <Input\n                inputtype=\"select\"\n                label=\"Main Text Page Position\"\n                name=\"mainTextPosition\"\n                value={mainTextPosition}\n                items={props.positionArray}\n                onSelectChange={props.handleChange}\n            />\n            <Input\n                inputtype=\"inputSelector\"\n                label=\"Add a Small Image\"\n                name=\"mainTextImg\"\n                value={mainTextImg}\n                onChange={props.handleChange}\n                onClick={props.handleMediaModal}\n                clearInput={props.clearInput}\n            />\n            <Grid cols={\"33% 33% 33%\"} margin={\"0 15px 0 0\"} colsSmall={'100%'}>\n                <Input\n                inputtype=\"select\"\n                label=\"Image align position\"\n                name=\"mainTextImgAlign\"\n                value={mainTextImgAlign}\n                items={floatArray}\n                onSelectChange={props.handleChange}\n                />\n                <Input\n                inputtype=\"input\"\n                type=\"number\"\n                label=\"Banner Image Width\"\n                name=\"mainTextImgWidth\"\n                value={mainTextImgWidth || 200}\n                onChange={props.handleChange}\n                />\n                <Input\n                inputtype=\"input\"\n                type=\"number\"\n                label=\"Banner Image Height\"\n                name=\"mainTextImgHeight\"\n                value={mainTextImgHeight || 135}\n                onChange={props.handleChange}\n                />\n            </Grid>\n            <Input\n                inputtype=\"inputColourPicker\"\n                label=\"Banner Background Colour\"\n                name=\"mainTextBackColour\"\n                value={mainTextBackColour}\n                changeColour={props.handleColourPicker}\n                pageId={\"home\"}\n            />\n            </Box>\n        </Minimizer>\n    );\n};\n\nexport default MainTextContols;","import React from 'react';\n\nimport Input from \"../UI/Input\";\nimport Flex from \"../UI/Wrappers/Flex\";\nimport Grid from \"../UI/Wrappers/Grid\";\nimport Box from \"../UI/Wrappers/Box\";\nimport Minimizer from \"../UI/Wrappers/Minimizer\";\n\nconst TestimonialsContols = (props) => {\n\n    const {data} = props\n    let content = {}\n\n    Object.keys(data)\n        .filter(fc => fc.includes('testimonials'))\n        .map(c => {\n            return content = {...content, [c]: data[c] }\n        });\n    \n    console.log('content', content)\n    \n    const {\n        testimonials_A,\n        testimonials_B,\n        testimonials_C,\n        testimonials_D,\n        testimonials_E\n    } = content;\n\n    return (\n        <Minimizer>\n          <Box>\n            <Input\n                inputtype=\"input\"\n                label=\"Testimonial One\"\n                name=\"testimonials_A\"\n                value={testimonials_A}\n                onChange={props.handleChange}\n            />\n            <Input\n                inputtype=\"input\"\n                label=\"Testimonial Two\"\n                name=\"testimonials_B\"\n                value={testimonials_B}\n                onChange={props.handleChange}\n            />\n            <Input\n                inputtype=\"input\"\n                label=\"Testimonial Three\"\n                name=\"testimonials_C\"\n                value={testimonials_C}\n                onChange={props.handleChange}\n            />\n            <Input\n                inputtype=\"input\"\n                label=\"Testimonial Four\"\n                name=\"testimonials_D\"\n                value={testimonials_D}\n                onChange={props.handleChange}\n            />\n            <Input\n                inputtype=\"input\"\n                label=\"Testimonial Five\"\n                name=\"testimonials_E\"\n                value={testimonials_E}\n                onChange={props.handleChange}\n            />\n            {/* <Input\n                inputtype=\"select\"\n                label=\"Main Text Page Position\"\n                name=\"testimonialsPosition\"\n                value={testimonialsPosition}\n                items={props.positionArray}\n                onSelectChange={props.handleChange}\n            />\n            <Input\n                inputtype=\"inputSelector\"\n                label=\"Add a Small Image\"\n                name=\"testimonialsImg\"\n                value={testimonialsImg}\n                onChange={props.handleChange}\n                onClick={props.handleMediaModal}\n                clearInput={props.clearInput}\n            />\n            <Grid cols={\"33% 33% 33%\"} margin={\"0 15px 0 0\"} colsSmall={'100%'}>\n                <Input\n                inputtype=\"select\"\n                label=\"Image align position\"\n                name=\"testimonialsImgAlign\"\n                value={testimonialsImgAlign}\n                items={floatArray}\n                onSelectChange={props.handleChange}\n                />\n                <Input\n                inputtype=\"input\"\n                type=\"number\"\n                label=\"Banner Image Width\"\n                name=\"testimonialsImgWidth\"\n                value={testimonialsImgWidth || 200}\n                onChange={props.handleChange}\n                />\n                <Input\n                inputtype=\"input\"\n                type=\"number\"\n                label=\"Banner Image Height\"\n                name=\"testimonialsImgHeight\"\n                value={testimonialsImgHeight || 135}\n                onChange={props.handleChange}\n                />\n            </Grid>\n            <Input\n                inputtype=\"inputColourPicker\"\n                label=\"Banner Background Colour\"\n                name=\"testimonialsBackColour\"\n                value={testimonialsBackColour}\n                changeColour={props.handleColourPicker}\n                pageId={\"home\"}\n            /> */}\n            </Box>\n        </Minimizer>\n    );\n};\n\nexport default TestimonialsContols;","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Input from \"../../../../components/UI/Input\";\nimport TabMenu from \"../TabsMenu\";\nimport Button from \"../../../../components/UI/Buttons/Button\";\nimport Flex from \"../../../../components/UI/Wrappers/Flex\";\nimport Spinner from \"../../../../components/UI/Spinner\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport Dashboard from \"../../../Dashboard/Dashboard\";\n\nimport BannerControls from '../../../../components/admin-controls/BannerControls'\nimport MainTextControls from '../../../../components/admin-controls/MainTextControls'\nimport TestimonialsControls from '../../../../components/admin-controls/TestimonialsControls';\n\nconst TabItems = props => {\n  console.log(\"tabItems props\", props);\n  if (props.itemProps.dropdownPages) {\n    return (\n      <TabMenu\n        navigationItems={props.itemProps.dropdownPages}\n        parentId={props.pageId}\n        parent={props.children}\n        onChange={props.onChange}\n        handlePageDelete={props.handlePageDelete}\n        openMediaModal={props.openMediaModal}\n        updatePageSubmit={props.updatePageSubmit}\n        isUpdating={props.isUpdating}\n        cancelUpdate={props.cancelUpdate}\n        stateBackup={props.stateBackup}\n        availableRoutes={props.availableRoutes}\n        template={props.template}\n        plugins={props.plugins}\n      />\n    );\n  }\n\n  const handleChange = event => {\n    event.preventDefault();\n    props.onChange(event.target, props.pageId, props.parentId);\n  };\n\n  const handleCheckbox = check => event => {\n    console.log(check, event.target.checked);\n    const newevent = {\n      name: event.target.name,\n      value: event.target.checked\n    };\n    props.onChange(newevent, props.pageId, props.parentId);\n  };\n\n  const handleMediaModal = event => {\n    event.preventDefault();\n    props.openMediaModal(event.target, props.pageId, props.parentId);\n  };\n\n  const handleColourPicker = event => {\n    props.onChange(event.target, props.pageId, props.parentId);\n  };\n\n  const handlesubmit = event => {\n    event.preventDefault();\n    props.updatePageSubmit(\n      props.itemProps.content,\n      props.pageId,\n      props.parentId\n    );\n  };\n\n  const clearInput = inputName => {\n    const event = { name: inputName, value: \"\" };\n    props.onChange(event, props.pageId, props.parentId);\n  };\n\n  const deletePage = () => {\n    props.handlePageDelete(props.pageId, props.parentId);\n  };\n\n  const {\n    topBanner,\n    topBannerHalfwidth,\n    midBanner,\n    midBannerHalfwidth,\n    bottomBanner,\n    bottomBannerHalfwidth,\n    mainText,\n    testimonialsPosition,\n  } = props.itemProps.content;\n\n  const positionArray = [\n    { value: \"Top\" },\n    { value: \"Middle\" },\n    { value: \"Bottom\" }\n  ];\n\n  return (\n    <Paper elevation={20}>\n      <StyledTabItems>\n        <div>\n          {props.children}\n          <Input\n            inputtype=\"inputSelector\"\n            label={`${\n              topBannerHalfwidth\n                ? \"Top Banner Image (Inside Banner)\"\n                : \"Top Banner Image\"\n            }`}\n            name=\"topBanner\"\n            value={topBanner}\n            onChange={handleChange}\n            onClick={handleMediaModal}\n            clearInput={clearInput}\n          />\n          {topBanner && \n            <BannerControls \n              pos={'top'} \n              data={props.itemProps.content} \n              handleCheckbox={handleCheckbox}\n              handleChange={handleChange}\n              handleMediaModal={handleMediaModal}\n              clearInput={clearInput}\n              handleColourPicker={handleColourPicker}\n              availableRoutes={props.availableRoutes}\n              />\n          }\n\n          <Input\n            inputtype=\"inputSelector\"\n            label={`${\n              midBannerHalfwidth\n                ? \"Middle Banner Image (Inside Banner)\"\n                : \"Middle Banner Image\"\n            }`}\n            name=\"midBanner\"\n            value={midBanner}\n            onChange={handleChange}\n            onClick={handleMediaModal}\n            clearInput={clearInput}\n          />\n          {midBanner && (\n            <BannerControls \n              pos={'mid'} \n              data={props.itemProps.content} \n              handleCheckbox={handleCheckbox}\n              handleChange={handleChange}\n              handleMediaModal={handleMediaModal}\n              clearInput={clearInput}\n              handleColourPicker={handleColourPicker}\n              availableRoutes={props.availableRoutes}\n            />\n          )}\n\n          <Input\n            inputtype=\"inputSelector\"\n            label={`${\n              bottomBannerHalfwidth\n                ? \"Bottom Banner Image (Inside Banner)\"\n                : \"Bottom Banner Image\"\n            }`}\n            name=\"bottomBanner\"\n            value={bottomBanner}\n            onChange={handleChange}\n            onClick={handleMediaModal}\n            clearInput={clearInput}\n          />\n          {bottomBanner && (\n            <BannerControls \n              pos={'bottom'} \n              data={props.itemProps.content} \n              handleCheckbox={handleCheckbox}\n              handleChange={handleChange}\n              handleMediaModal={handleMediaModal}\n              clearInput={clearInput}\n              handleColourPicker={handleColourPicker}\n              availableRoutes={props.availableRoutes}\n            />\n          )}\n\n          <Input\n            inputtype=\"textarea\"\n            label=\"Main Body Text\"\n            name=\"mainText\"\n            value={mainText}\n            onChange={handleChange}\n          />\n          <MainTextControls \n            data={props.itemProps.content} \n            handleCheckbox={handleCheckbox}\n            handleChange={handleChange}\n            handleMediaModal={handleMediaModal}\n            clearInput={clearInput}\n            handleColourPicker={handleColourPicker}\n            availableRoutes={props.availableRoutes}\n            positionArray={positionArray}\n          />\n\n          <Input\n            inputtype=\"select\"\n            label=\"Testimonials Plugin Position\"\n            name=\"testimonialsPosition\"\n            value={testimonialsPosition}\n            onSelectChange={handleChange}\n            items={positionArray}\n          />\n          <TestimonialsControls \n            data={props.itemProps.content} \n            pageID={props.pageId}\n            handleCheckbox={handleCheckbox}\n            handleChange={handleChange}\n            handleMediaModal={handleMediaModal}\n            clearInput={clearInput}\n            handleColourPicker={handleColourPicker}\n            availableRoutes={props.availableRoutes}\n          />\n        </div>\n        <Preview>\n          <Dashboard\n            pageInfo={props.itemProps}\n            {...props}\n            template={props.template}\n            plugins={props.plugins}\n            overlayBlocker={true}\n            name={props.pageId}\n          />\n        </Preview>\n      </StyledTabItems>\n      <Flex justifyContent={\"space-between\"}>\n        <div>\n          <Flex justifyContent=\"flex-start\">\n            <Button margin=\"2px 5px 15px 20px\" onClick={handlesubmit}>\n              Update\n            </Button>\n            {props.isUpdating && <Spinner />}\n            {props.stateBackup && (\n              <Button margin=\"2px 20px 15px 20px\" onClick={props.cancelUpdate}>\n                Undo Changes\n              </Button>\n            )}\n          </Flex>\n        </div>\n        <DeletePageIcon>\n          <IconButton onClick={deletePage}>\n            <DeleteIcon fontSize=\"large\" />\n          </IconButton>\n        </DeletePageIcon>\n      </Flex>\n    </Paper>\n  );\n};\n\nconst StyledTabItems = styled.div`\n  padding: 3vh;\n  display: grid;\n  grid-template-columns: 65% 35%;\n  grid-gap: 8px;\n\n  @media (max-width: 500px) {\n    grid-template-columns: 100%;\n  }\n\n`;\n\nconst Preview = styled.div`\n  display: block;\n  zoom: 30%;\n  padding-top: 56px;\n  box-shadow: 2px 2px 2px;\n\n`;\n\nconst DeletePageIcon = styled.div`\n  padding: 5px;\n`;\n\nexport default TabItems;\n","import React, { Component } from \"react\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport styled from \"styled-components\";\n\nimport Toast from \"../../../components/UI/Toast\";\n\nimport TabItems from \"./TabItems.js/TabItems\";\n\nexport default class TabMenu extends Component {\n  state = {\n    value: 0,\n    disableTabText: \"\",\n    topBannerOptions: true,\n    midBannerOptions: true,\n    bottomBannerOptions: true\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.stateBackup !== prevProps.stateBackup) {\n      if (this.props.stateBackup) {\n        this.setState({\n          disableTabText:\n            \"You have made updates to this page, please save or undo your changes before selecting a new page\"\n        });\n      } else {\n        this.setState({ disableTabText: \"\" });\n      }\n    }\n  }\n\n  handleChange = (event, value) => {\n    if (!this.props.stateBackup) {\n      this.setState({ value });\n    }\n  };\n\n  render() {\n    const { value } = this.state;\n    const { navigationItems, parent, parentId } = this.props;\n    console.log(\"tabMenu props\", this.props);\n    let tabLabels = null;\n    let tabitems = null;\n\n    if (navigationItems !== null) {\n      tabLabels = Object.keys(navigationItems).map((key, index) => {\n        const item = navigationItems[key];\n        //passes the item title down to tabItems, which then runs tabs again if there is a drop down, and passes a parent value back\n        return (\n          <Tab\n            key={index}\n            label={\n              parent ? parent.props.children + \" - \" + item.title : item.title\n            }\n          />\n        );\n      });\n\n      tabitems = Object.keys(navigationItems).map((key, index) => {\n        return (\n          value === index && (\n            <TabItems\n              key={index}\n              pageId={key}\n              parentId={parentId || null}\n              itemProps={navigationItems[key]}\n              onChange={this.props.onChange}\n              handlePageDelete={this.props.handlePageDelete}\n              openMediaModal={this.props.openMediaModal}\n              updatePageSubmit={this.props.updatePageSubmit}\n              isUpdating={this.props.isUpdating}\n              cancelUpdate={this.props.cancelUpdate}\n              stateBackup={this.props.stateBackup}\n              availableRoutes={this.props.availableRoutes}\n              template={this.props.template}\n              plugins={this.props.plugins}\n            >\n              <h2>{navigationItems[key].title}</h2>\n            </TabItems>\n          )\n        );\n      });\n\n      // tabLabels = navigationItems.map( (item, index) => {\n      //     //passes the item title down to tabItems, which then runs tabs again if there is a drop down, and passes a parent value back\n      //     return <Tab key={index} label={ parent ? parent+' - '+item.title : item.title} />\n      // })\n      // tabitems = navigationItems.map( (item, index) => {\n      //     return( value === index && <TabItems key={index} itemProps={item}>{item.title }</TabItems> )\n      // })\n    }\n\n    if (tabitems === null && tabLabels === null) return <div />;\n    return (\n      <StyledTabs>\n        <Tooltip title={this.state.disableTabText}>\n          <AppBar position=\"static\">\n            <Tabs\n              value={value}\n              onChange={this.handleChange}\n              variant=\"scrollable\"\n              scrollButtons=\"auto\"\n            >\n              {tabLabels}\n            </Tabs>\n          </AppBar>\n        </Tooltip>\n        {tabitems}\n        {this.props.isError && (\n          <Toast message={this.props.isError} error={true} />\n        )}\n      </StyledTabs>\n    );\n  }\n}\n\nconst StyledTabs = styled.div`\n  > header {\n    background-color: ${props => props.theme.primaryBackGroundColour};\n    z-index: 20;\n  }\n`;\n","import React from \"react\";\n\n//import TextField from '@material-ui/core/TextField';\nimport Dialog from \"@material-ui/core/Dialog\";\n// import DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst Modal = props => {\n  // const childrenWithProps = React.Children.map()\n  const width = props.fullWidth ? props.fullWidth : true;\n  const maxWidth = props.maxWidth ? props.maxWidth : \"lg\";\n\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        onClose={props.handleClose}\n        aria-labelledby=\"form-dialog-title\"\n        fullWidth={width}\n        maxWidth={maxWidth}\n      >\n        <DialogTitle id=\"form-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>{props.description}</DialogContentText>\n          <br />\n          <br />\n          {/* {React.cloneElement(props.children, { handleSubmit: props.handleSubmit })} */}\n          {props.children}\n        </DialogContent>\n        {/* <DialogActions>\n            <button onClick={props.handleClose} >\n              Cancel\n            </button>\n            <button onClick={props.handleSubmit} >\n              Confirm\n            </button>\n          </DialogActions> */}\n      </Dialog>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { Component } from \"react\";\nimport Input from \"../UI/Input\";\nimport Flex from \"../UI/Wrappers/Flex\";\nimport Button from \"../UI/Buttons/Button\";\nimport Spinner from \"../UI/Spinner\";\n\nexport class NewPageForm extends Component {\n  state = {\n    title: \"\",\n    checked: false,\n    selectVal: null\n  };\n\n  componentDidMount() {\n    if (this.props.navigationItems !== null) {\n      // this.setState({selectVal: this.props.navigationItems[0].title})\n      let title = \"\";\n      for (var prop in this.props.navigationItems) {\n        title = this.props.navigationItems[prop].title;\n        break;\n      }\n\n      this.setState({ selectVal: title });\n    }\n  }\n\n  handleCheckbox = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  onSelectChange = event => {\n    this.setState({ selectVal: event.target.value });\n  };\n\n  onInputChange = event => {\n    const { value, name } = event.target;\n    const scrubbedVal = value.replace(/[^\\w\\s]/gi, \"\");\n\n    this.setState({ [name]: scrubbedVal });\n  };\n\n  render() {\n    console.log(\"newpageForm props\", this.props);\n    return (\n      <div>\n        <form>\n          <Input\n            inputtype=\"input\"\n            label=\"Page Title\"\n            name=\"title\"\n            value={this.state.title}\n            onChange={this.onInputChange}\n          />\n          {this.props.navigationItems !== null && (\n            <div>\n              <Input\n                inputtype=\"checkbox\"\n                sideLabel=\"Is this a dropdown SubPage\"\n                checked={this.state.checked}\n                handleChange={this.handleCheckbox}\n              />\n              <br />\n              {this.state.checked && (\n                <Input\n                  inputtype=\"select\"\n                  value={this.state.selectVal}\n                  label=\"Choose the parent page for this Subpage\"\n                  items={this.props.navigationItems}\n                  onSelectChange={this.onSelectChange}\n                />\n              )}\n            </div>\n          )}\n        </form>\n        <Flex justifyContent=\"flex-end\" margin=\"5px\">\n          <Button onClick={this.props.handleClose}>Cancel</Button>\n          <Button\n            onClick={() => this.props.handleSubmit(this.state)}\n            disabled={this.state.title === \"\" ? true : false}\n          >\n            Confirm\n          </Button>\n          {this.props.loading && <Spinner />}\n        </Flex>\n      </div>\n    );\n  }\n}\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//       //updateNewPageData: () => dispatch(actions.newPageData()),\n//   }\n// }\n\n//export default connect(null, mapDispatchToProps)(NewPageForm)\nexport default NewPageForm;\n","import React, { Component } from \"react\";\n\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport styled from \"styled-components\";\n\nclass TitlebarGridList extends Component {\n  state = {\n    columns: 5,\n    spacing: 20,\n    activeIndex: null,\n    selectedValue: \"\",\n    selectedName: \"\"\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.handleResize);\n    this.handleResize();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n\n  handleResize = () => {\n    const windowSize = window.innerWidth;\n    const columns = (windowSize > 768 && 5) || (windowSize <= 480 && 1) || 3;\n    const spacing = (windowSize > 768 && 20) || 8;\n\n    this.setState({\n      columns,\n      spacing\n    });\n  };\n\n  handleSelect = (event, index, tile) => {\n    this.props.selectedImage(index, tile);\n  };\n\n  render() {\n    const { tileData } = this.props;\n    if (!tileData || !tileData.length) return <div />;\n\n    return (\n      <StyledGrid>\n        <GridList\n          cellHeight={180}\n          className=\"gridList\"\n          cols={this.state.columns}\n          spacing={this.state.spacing}\n        >\n          <GridListTile\n            key=\"Subheader\"\n            cols={this.state.columns}\n            style={{ height: \"auto\" }}\n          >\n            <ListSubheader component=\"div\">\n              This is where your current websites images located.\n            </ListSubheader>\n          </GridListTile>\n          {tileData.map((tile, index) => {\n            const gridTileClass =\n              this.props.selectedIndex === index ? \"media active\" : \"media\";\n\n            return (\n              <GridListTile\n                key={tile.title}\n                className={gridTileClass}\n                onClick={e => this.handleSelect(e, index, tile)}\n              >\n                <img src={tile.img} alt={tile.title} />\n                <GridListTileBar\n                  title={tile.title}\n                  actionIcon={\n                    !this.props.isModal ? (\n                      <IconButton\n                        className=\"gridIcon\"\n                        onClick={() =>\n                          this.props.deleteImage(tile.img, tile.title)\n                        }\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    ) : (\n                      false\n                    )\n                  }\n                />\n              </GridListTile>\n            );\n          })}\n        </GridList>\n      </StyledGrid>\n    );\n  }\n}\n\nconst StyledGrid = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  /* justify-content: space-around; */\n  overflow: hidden;\n  margin: 20px 0;\n  padding: 10px;\n\n  .gridlist {\n    width: 100%;\n    height: 450px;\n  }\n\n  .media {\n    padding: 3px;\n    cursor: pointer;\n    -webkit-transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n    -moz-transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n    -ms-transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n    -o-transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n    transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n  }\n\n  .media.active {\n    border: 1px solid #09c;\n    border-radius: 5px;\n    box-shadow: 1px 1px 7px rgba(0, 200, 204, 0.7);\n    outline: none;\n  }\n\n  .gridIcon {\n    color: rgba(255, 255, 255, 0.54);\n  }\n`;\n\nexport default TitlebarGridList;\n","import React, { Component } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/storage\";\n\nimport classNames from \"classnames\";\n\nimport styled from \"styled-components\";\nimport Button from \"../../../components/UI/Buttons/Button\";\nimport Input from \"../../../components/UI/Input\";\nimport Flex from \"../../../components/UI/Wrappers/Flex\";\nimport Box from \"../../../components/UI/Wrappers/Box\";\nimport Modal from \"../../../components/UI/Modal\";\nimport Spinner from \"../../../components/UI/Spinner\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ImgGridList from \"./ImgGridList\";\n\nclass Media extends Component {\n  state = {\n    uploadOpen: false,\n    error: null,\n    customURL: false,\n    customURLtext: \"\",\n    activeIndex: null,\n    selectedValue: \"\",\n    selectedName: \"\",\n    deleteImgOpen: false\n  };\n\n  componentDidMount() {\n    console.log(\"mounted\");\n    this.getImageUrls();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.currentImages === null) return;\n\n    if (\n      this.props.currentImages !== prevProps.currentImages ||\n      this.props.isAuthenticated !== prevProps.isAuthenticated\n    ) {\n      this.getImageUrls();\n    }\n  }\n\n  getImageUrls = () => {\n    const that = this;\n    let imageContainer = [];\n    let imageCount = Object.keys(this.props.currentImages).length;\n    let returnedCount = 0;\n    const siteName = process.env.REACT_APP_SITENAME;\n\n    let storageRef = firebase.storage().ref();\n\n    Object.keys(this.props.currentImages).map((key, i) => {\n      const img = this.props.currentImages[key];\n      return storageRef\n        .child(`${siteName}/${img}`)\n        .getDownloadURL()\n        .then(url => {\n          imageContainer = [...imageContainer, { title: img, img: url, key }];\n          returnedCount++;\n\n          if (imageCount === returnedCount) {\n            that.props.setMediaImages(imageContainer);\n          }\n        })\n        .catch(error => {\n          // Handle any errors\n          console.log(error);\n        });\n    });\n  };\n\n  onDrop = (acceptedFiles, rejectedFiles) => {\n    // Do something with files\n    console.log(\"accepted\", acceptedFiles);\n    console.log(\"rejected\", rejectedFiles);\n    if (rejectedFiles.length !== 0) {\n      this.setState({ error: \"Rejected upload, incompatable file detected\" });\n      return;\n    }\n    const siteName = process.env.REACT_APP_SITENAME;\n    const user = firebase.auth().currentUser;\n\n    if (user) {\n      console.log(\"user is signed in\");\n      const file = acceptedFiles[0];\n      if (this.checkFileAlreadyExists(file)) {\n        this.setState({\n          error: `${\n            file.name\n          } already exists, please remove the old image first`\n        });\n        return;\n      }\n      firebase\n        .storage()\n        .ref()\n        .child(`${siteName}/${file.name}`)\n        .put(file)\n        .then(snapshot => {\n          console.log(\"Uploaded a blob or file!\");\n          console.log(snapshot);\n          this.addImageRefToDb(file);\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    } else {\n      // No user is signed in.\n      console.log(\" No user is signed in.\");\n      this.props.isTimedOut();\n    }\n  };\n\n  checkFileAlreadyExists = file => {\n    if (this.props.currentImages === null) return;\n\n    \n\n    const findImageRef = Object.keys(this.props.currentImages).filter(\n      (key, i) => {\n        const img = this.props.currentImages[key];\n        return img === file.name;\n      }\n    );\n\n    return !findImageRef.length ? false : true;\n  };\n  \n\n  addImageRefToDb = file => {\n    const siteName = process.env.REACT_APP_SITENAME;\n\n    var newPostKey = firebase\n      .database()\n      .ref()\n      .child(`${siteName}/site/images`)\n      .push().key;\n    var updates = { [newPostKey]: file.name };\n    const that = this;\n\n    return firebase\n      .database()\n      .ref()\n      .child(`${siteName}/site/images`)\n      .update(updates, function(error) {\n        if (error) {\n          // The write failed...\n          console.log(\"image ref in db write failed...\", error);\n        } else {\n          // Data saved successfully!\n          console.log(\"image ref in db saved successfully\");\n          that.props.refreshState();\n        }\n      });\n  };\n\n  selectedImage = (index, tile) => {\n    this.setState({\n      customURLtext: \"\",\n      activeIndex: index,\n      selectedValue: tile.img,\n      selectedName: tile.title\n    });\n  };\n\n  handleCustomURL = event => {\n    this.setState({\n      customURLtext: event.target.value,\n      activeIndex: null,\n      selectedValue: \"\",\n      selectedName: \"\"\n    });\n  };\n\n  confirmImage = () => {\n    const { customURLtext, selectedValue } = this.state;\n    const { tabItemReference } = this.props;\n    let image = customURLtext ? customURLtext : selectedValue;\n\n    this.props.onChangePageState(\n      { name: tabItemReference[0].name, value: image },\n      tabItemReference[1],\n      tabItemReference[2]\n    );\n    this.props.handleClose();\n  };\n\n  deleteImage = (imgUrl, name) => {\n    console.log(imgUrl, name);\n    this.setState({ deleteImgOpen: true });\n  };\n\n  confirmDelete = () => {\n    console.log(this.state, this.props);\n    const that = this;\n    const siteName = process.env.REACT_APP_SITENAME;\n\n    const img = this.props.imageURLs.find(\n      img => img.title === this.state.selectedName\n    );\n    let storageRef = firebase.storage().ref();\n\n    console.log(\"pre delete\");\n    firebase\n      .database()\n      .ref()\n      .child(`${siteName}/site/images/${img.key}`)\n      .remove()\n      .then(() => {\n        console.log(\"db delete succeeded!\");\n        storageRef\n          .child(`${siteName}/${img.title}`)\n          .delete()\n          .then(function() {\n            // File deleted successfully\n            console.log(\"storage img deleted\");\n            that.setState({ deleteImgOpen: false });\n            that.props.refreshState();\n          })\n          .catch(function(error) {\n            // Uh-oh, an error occurred!\n            console.log(\"storage error\", error);\n          });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  handleUploadOpen = () => {\n    this.setState({ uploadOpen: !this.state.uploadOpen });\n  };\n\n  render() {\n    console.log(\"media props\", this.props);\n    const {\n      error,\n      uploadOpen,\n      customURL,\n      activeIndex,\n      customURLtext,\n      selectedName,\n      selectedValue\n    } = this.state;\n    const { imageURLs, currentImages } = this.props;\n\n    let dropZone = null;\n    let mediaTemplate = null;\n    let noMediaMessage = null;\n\n    if (imageURLs.length === 0 && currentImages) {\n      noMediaMessage = (\n        <div>\n          <p>\n            <i>\n              Loading media, if nothing appears after ten seconds. Please\n              refresh the page{\" \"}\n            </i>\n          </p>\n          <Spinner />\n        </div>\n      );\n    } else if (currentImages === null) {\n      noMediaMessage = (\n        <div>\n          <p>\n            <i>\n              Here is where you can add images to your website, Click upload\n              media to create your media library\n            </i>\n          </p>\n        </div>\n      );\n    }\n\n    if (uploadOpen && !this.props.isModal) {\n      dropZone = (\n        <Dropzone onDrop={this.onDrop} multiple={false} accept=\"image/*\">\n          {({ getRootProps, getInputProps, isDragActive }) => {\n            return (\n              <StyledDropArea\n                {...getRootProps()}\n                className={classNames(\"dropzone\", {\n                  \"dropzone--isActive\": isDragActive\n                })}\n              >\n                <input {...getInputProps()} />\n                {isDragActive ? (\n                  <p>Drop files here...</p>\n                ) : (\n                  <p>\n                    Try dropping some files here, or click to select files to\n                    upload.\n                  </p>\n                )}\n              </StyledDropArea>\n            );\n          }}\n        </Dropzone>\n      );\n    }\n\n    if (!this.props.isModal) {\n      mediaTemplate = (\n        <div>\n          {noMediaMessage}\n          <Button onClick={this.handleUploadOpen}>\n            {uploadOpen ? \"Close DropZone\" : \"Upload Media\"}\n          </Button>\n          {dropZone}\n          {error && <div>{error}</div>}\n          <Paper elevation={7}>\n            <ImgGridList\n              tileData={this.props.imageURLs}\n              isModal={false}\n              selectedIndex={activeIndex}\n              selectedImage={this.selectedImage}\n              deleteImage={this.deleteImage}\n            />\n          </Paper>\n        </div>\n      );\n    } else {\n      const selectedLabel = `Current Selection:  ${selectedName}`;\n      mediaTemplate = (\n        <IsMediaModal>\n          {noMediaMessage}\n          <Flex mobile>\n            <Box opacity={customURL}>\n              <Button\n                onClick={() => {\n                  this.setState({ customURL: false });\n                }}\n              >\n                Use Media Library\n              </Button>\n            </Box>\n            <h2>OR ..</h2>\n            <Box opacity={!customURL}>\n              <Button\n                onClick={() => {\n                  this.setState({ customURL: true });\n                }}\n              >\n                {\" \"}\n                {!customURL ? \"Use\" : \"Close\"} custom URL location?\n              </Button>\n            </Box>\n          </Flex>\n          {/* <Fade in={customURL}> */}\n          {customURL ? (\n            <Input\n              inputtype=\"input\"\n              label=\"If you want to use an image stored elsewhere, enter the Url address below\"\n              value={customURLtext}\n              onChange={this.handleCustomURL}\n            />\n          ) : (\n            <div>\n              <Paper elevation={5}>\n                <ImgGridList\n                  tileData={this.props.imageURLs}\n                  isModal={true}\n                  selectedIndex={activeIndex}\n                  selectedImage={this.selectedImage}\n                />\n              </Paper>\n              <Input\n                inputtype=\"input\"\n                label={`${\n                  selectedValue ? selectedLabel : \"Select Media Image URL above\"\n                }`}\n                value={selectedValue}\n                disabled={true}\n                placeholder=\"No Media image selected\"\n              />\n            </div>\n          )}\n          {/* </Fade> */}\n          <Divider />\n          <br />\n          <Flex mobile>\n            <Button onClick={this.props.handleClose}>Cancel</Button>\n            <Button onClick={this.confirmImage}>Confirm Image</Button>\n          </Flex>\n          <br />\n        </IsMediaModal>\n      );\n    }\n\n    return (\n      <>\n        {mediaTemplate}\n        <Modal\n          open={this.state.deleteImgOpen}\n          handleClose={() => this.setState({ deleteImgOpen: false })}\n          title=\"Delete image\"\n          description={`Are you sure you would like to delete the image ${\n            this.state.selectedName\n          }. \\n Please note that anywhere this image is used on the website will no longer work once the image is deleted.`}\n        >\n          <Flex>\n            <Button onClick={this.confirmDelete}>Confirm Delete</Button>\n            <Button onClick={() => this.setState({ deleteImgOpen: false })}>\n              Cancel\n            </Button>\n          </Flex>\n        </Modal>\n      </>\n    );\n  }\n}\n\nconst StyledDropArea = styled.div`\n  border-style: dotted;\n  padding: 5px 20px;\n  margin: 20px 5px;\n  cursor: pointer;\n\n  /* desktop */\n  @media (min-width: 500px) {\n    min-width: 455px;\n  }\n`;\n\nconst IsMediaModal = styled.div`\n  margin-top: -40px;\n`;\n\nexport default Media;\n","import React, { Component } from \"react\";\n\nimport Input from \"../../../components/UI/Input\";\nimport Button from \"../../../components/UI/Buttons/Button\";\nimport Flex from \"../../../components/UI/Wrappers/Flex\";\nimport Grid from \"../../../components/UI/Wrappers/Grid\";\nimport Spinner from \"../../../components/UI/Spinner\";\n\nimport styled from \"styled-components\";\n\nclass Template extends Component {\n  handleChange = event => {\n    event.preventDefault();\n    this.props.changeTemplateState(event.target, \"template\", null);\n  };\n\n  handlesubmit = event => {\n    event.preventDefault();\n    const siteName = process.env.REACT_APP_SITENAME;\n\n    const url = `/${siteName}/site/template`;\n    this.props.templateChangeSubmit(url, this.props.template);\n  };\n\n  handleCheckbox = check => event => {\n    console.log(check, event.target.checked);\n    const newevent = {\n      name: event.target.name,\n      value: event.target.checked\n    };\n    this.props.changeTemplateState(newevent, \"template\", null);\n  };\n\n  handleMediaModal = event => {\n    event.preventDefault();\n    this.props.openMediaModal(event.target, \"template\", null);\n  };\n\n  clearInput = inputName => {\n    const event = { name: inputName, value: \"\" };\n    this.props.changeTemplateState(event, \"template\", null);\n  };\n\n  render() {\n    if (!this.props.template) return <div />;\n    //console.log('templateProps', this.props)\n    const buttonStyle = [{ value: \"contained\" }, { value: \"outlined\" }];\n    const {\n      navButtons,\n      siteButtons,\n      transparentHeader,\n      navLightTheme,\n      siteLogo,\n      version\n    } = this.props.template;\n\n    return (\n      <StyledTemplate>\n        <Flex mobile>\n          <Input\n            inputtype=\"checkbox\"\n            sideLabel=\"Is the header toolbar transparent\"\n            name=\"transparentHeader\"\n            checked={transparentHeader}\n            handleChange={this.handleCheckbox}\n          />\n          <Input\n            inputtype=\"checkbox\"\n            sideLabel=\"Use Light theme for navigation Bar\"\n            name=\"navLightTheme\"\n            checked={navLightTheme}\n            handleChange={this.handleCheckbox}\n          />\n        </Flex>\n        <Input\n          inputtype=\"inputSelector\"\n          label=\"Website Logo\"\n          name=\"siteLogo\"\n          value={siteLogo}\n          onChange={this.handleChange}\n          onClick={this.handleMediaModal}\n          clearInput={this.clearInput}\n        />\n        <br />\n        <Grid cols=\"25% 25%\" colsLarge={\"35% 35%\"} colsMed={\"50% 50%\"} colsSmall={'100%'}>\n          <Input\n            inputtype=\"select\"\n            label=\"Header Navigation button style\"\n            name=\"navButtons\"\n            value={navButtons}\n            items={buttonStyle}\n            onSelectChange={this.handleChange}\n          />\n          <Input\n            inputtype=\"select\"\n            label=\"Webpage button style\"\n            name=\"siteButtons\"\n            value={siteButtons}\n            items={buttonStyle}\n            onSelectChange={this.handleChange}\n          />\n          <Button variant={navButtons}>\n            {navButtons === \"contained\" ? \"Contained Style\" : \"Outlined Style\"}\n          </Button>\n          <Button variant={siteButtons}>\n            {siteButtons === \"contained\" ? \"Contained Style\" : \"Outlined Style\"}\n          </Button>\n        </Grid>\n        <br />\n        <hr />\n        <br />\n        <Flex justifyContent=\"flex-start\">\n          <Button margin=\"2px 5px 15px 20px\" onClick={this.handlesubmit}>\n            Update\n          </Button>\n          {this.props.isUpdating && <Spinner />}\n          {this.props.stateBackup && (\n            <Button\n              margin=\"2px 20px 15px 20px\"\n              onClick={this.props.cancelUpdate}\n            >\n              Undo Changes\n            </Button>\n          )}\n        </Flex>\n      </StyledTemplate>\n    );\n  }\n}\n\nconst StyledTemplate = styled.div`\n  width: 100%;\n`;\n\nexport default Template;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport Input from \"../../../components/UI/Input\";\nimport Button from \"../../../components/UI/Buttons/Button\";\nimport Flex from \"../../../components/UI/Wrappers/Flex\";\nimport Grid from \"../../../components/UI/Wrappers/Grid\";\nimport Box from \"../../../components/UI/Wrappers/Box\";\nimport Spinner from \"../../../components/UI/Spinner\";\nimport Minimizer from \"../../../components/UI/Wrappers/Minimizer\";\n\nimport Dashboard from \"../../Dashboard/Dashboard\";\n\nimport BannerControls from '../../../components/admin-controls/BannerControls';\nimport MainTextControls from '../../../components/admin-controls/MainTextControls';\nimport TestimonialsControls from '../../../components/admin-controls/TestimonialsControls';\nclass Homepage extends Component {\n  state = {\n    previewOpen: false\n  };\n\n  handleChange = event => {\n    event.preventDefault();\n    this.props.changeHomepageState(event.target, \"home\", null);\n  };\n\n  handlesubmit = event => {\n    event.preventDefault();\n    const siteName = process.env.REACT_APP_SITENAME;\n\n    const url = `/${siteName}/site/home/content`;\n    this.props.homepageChangeSubmit(url, this.props.homePage.content);\n  };\n\n  handleCheckbox = check => event => {\n    console.log(check, event.target.checked);\n    const newevent = {\n      name: event.target.name,\n      value: event.target.checked\n    };\n    this.props.changeHomepageState(newevent, \"home\", null);\n  };\n\n  handleMediaModal = event => {\n    event.preventDefault();\n    this.props.openMediaModal(event.target, \"home\", null);\n  };\n\n  handleColourPicker = event => {\n    this.props.changeHomepageState(event.target, \"home\", null);\n  };\n\n  clearInput = inputName => {\n    const event = { name: inputName, value: \"\" };\n    this.props.changeHomepageState(event, \"home\", null);\n  };\n\n  render() {\n    if (!this.props.homePage) return <div />;\n\n    const {\n      topBanner,\n      topBannerHalfwidth,\n      midBanner,\n      midBannerHalfwidth,\n      bottomBanner,\n      bottomBannerHalfwidth,\n      mainText,\n      testimonialsPosition\n    } = this.props.homePage.content;\n    console.log(\"Homepage Props\", this.props);\n\n    const positionArray = [\n      { value: \"Top\" },\n      { value: \"Middle\" },\n      { value: \"Bottom\" }\n    ];\n\n    return (\n      <div className=\"fullwidth\">\n        <StyledHomePage>\n          <div>\n            <Input\n              inputtype=\"inputSelector\"\n              label={`${\n                topBannerHalfwidth\n                  ? \"Top Banner Image (Inside Banner)\"\n                  : \"Top Banner Image\"\n              }`}\n              name=\"topBanner\"\n              value={topBanner}\n              onChange={this.handleChange}\n              onClick={this.handleMediaModal}\n              clearInput={this.clearInput}\n            />\n            {topBanner && (\n              <BannerControls \n                pos={'top'} \n                data={this.props.homePage.content} \n                handleCheckbox={this.handleCheckbox}\n                handleChange={this.handleChange}\n                handleMediaModal={this.handleMediaModal}\n                clearInput={this.clearInput}\n                handleColourPicker={this.handleColourPicker}\n                availableRoutes={this.props.availableRoutes}\n              />\n            )}\n\n            <Input\n              inputtype=\"inputSelector\"\n              label={`${\n                midBannerHalfwidth\n                  ? \"Middle Banner Image (Inside Banner)\"\n                  : \"Middle Banner Image\"\n              }`}\n              name=\"midBanner\"\n              value={midBanner}\n              onChange={this.handleChange}\n              onClick={this.handleMediaModal}\n              clearInput={this.clearInput}\n            />\n            {midBanner && (\n              <BannerControls \n                pos={'mid'} \n                data={this.props.homePage.content} \n                handleCheckbox={this.handleCheckbox}\n                handleChange={this.handleChange}\n                handleMediaModal={this.handleMediaModal}\n                clearInput={this.clearInput}\n                handleColourPicker={this.handleColourPicker}\n                availableRoutes={this.props.availableRoutes}\n              />\n            )}\n\n            <Input\n              inputtype=\"inputSelector\"\n              label={`${\n                bottomBannerHalfwidth\n                  ? \"Bottom Banner Image (Inside Banner)\"\n                  : \"Bottom Banner Image\"\n              }`}\n              name=\"bottomBanner\"\n              value={bottomBanner}\n              onChange={this.handleChange}\n              onClick={this.handleMediaModal}\n              clearInput={this.clearInput}\n            />\n            {bottomBanner && (\n              <BannerControls \n                pos={'bottom'} \n                data={this.props.homePage.content} \n                handleCheckbox={this.handleCheckbox}\n                handleChange={this.handleChange}\n                handleMediaModal={this.handleMediaModal}\n                clearInput={this.clearInput}\n                handleColourPicker={this.handleColourPicker}\n                availableRoutes={this.props.availableRoutes}\n              />\n            )}\n\n            <Input\n              inputtype=\"textarea\"\n              label=\"Main Body Text\"\n              name=\"mainText\"\n              value={mainText}\n              onChange={this.handleChange}\n            />\n            <MainTextControls \n                data={this.props.homePage.content} \n                pageID={'home'}\n                handleCheckbox={this.handleCheckbox}\n                handleChange={this.handleChange}\n                handleMediaModal={this.handleMediaModal}\n                clearInput={this.clearInput}\n                handleColourPicker={this.handleColourPicker}\n                availableRoutes={this.props.availableRoutes}\n                positionArray={positionArray}\n            />\n\n            <Input\n              inputtype=\"select\"\n              label=\"Testimonials Plugin Position\"\n              name=\"testimonialsPosition\"\n              value={testimonialsPosition}\n              onSelectChange={this.handleChange}\n              items={positionArray}\n            />\n            <TestimonialsControls \n                data={this.props.homePage.content} \n                pageID={'home'}\n                handleCheckbox={this.handleCheckbox}\n                handleChange={this.handleChange}\n                handleMediaModal={this.handleMediaModal}\n                clearInput={this.clearInput}\n                handleColourPicker={this.handleColourPicker}\n                availableRoutes={this.props.availableRoutes}\n            />\n\n          </div>\n          <Preview>\n            <Dashboard\n              pageInfo={this.props.homePage}\n              {...this.props}\n              template={this.props.template}\n              overlayBlocker={true}\n              name={'Home'}\n            />\n          </Preview>\n        </StyledHomePage>\n        <Flex justifyContent=\"flex-start\" mobile>\n          <Button \n            margin=\"2px 5px 15px 20px\" \n            onClick={this.handlesubmit} \n            mobileMargin={'15px'}\n          >\n            Update\n          </Button>\n          {this.props.isUpdating && <Spinner />}\n          {this.props.stateBackup && (\n            <Button\n              margin=\"2px 20px 15px 20px\"\n              onClick={this.props.cancelUpdate}\n              mobileMargin={'0'}\n            >\n              Undo Changes\n            </Button>\n          )}\n        </Flex>\n      </div>\n    );\n  }\n}\n\nconst Preview = styled.div`\n  display: block;\n  zoom: 30%;\n  padding-top: 56px;\n  box-shadow: 2px 2px 2px;\n`;\n\nconst StyledHomePage = styled.div`\n  padding: 3vh;\n  display: grid;\n  grid-gap: 8px;\n  grid-template-columns: 65% 35%;\n\n  @media (max-width: 500px) {\n    grid-template-columns: 100%;\n    padding: 0;\n  }\n\n`;\n\nexport default Homepage;\n","import React from \"react\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Chip from \"@material-ui/core/Chip\";\n\nimport styled from \"styled-components\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nclass MultiSelect extends React.Component {\n  state = {\n    name: []\n  };\n\n  handleChange = event => {\n    this.setState({ name: event.target.value });\n    if (this.props.handleChange) {\n      this.props.handleChange(event);\n    }\n  };\n\n  render() {\n    const { label, items, name, value, margin, width } = this.props;\n\n    return (\n      <StyledSelect margin={margin} width={width}>\n        <FormControl>\n          <InputLabel htmlFor=\"select-multiple-chip\">{label}</InputLabel>\n          <Select\n            multiple\n            value={value || this.state.name}\n            onChange={this.handleChange}\n            input={<Input id=\"select-multiple-chip\" />}\n            name={name}\n            renderValue={selected => (\n              <div className={\"chips\"}>\n                {selected.map(value => (\n                  <Chip key={value} label={value} className={\"chip\"} />\n                ))}\n              </div>\n            )}\n            MenuProps={MenuProps}\n          >\n            {items.map(name => (\n              <MenuItem key={name} value={name}>\n                {name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </StyledSelect>\n    );\n  }\n}\n\nconst StyledSelect = styled.div`\n    display: flex;\n    flex-wrap: wrap;    \n    margin: ${props => props.margin || \"8px\"};\n\n    div {\n      /* margin: ${props => props.margin || \"8px\"}; */\n      width: ${props => props.width || \"400px\"};\n      /* min-width: ${props => props.minwidth || \"200px\"}; */\n      max-width: ${props => props.minwidth || \"450px\"};\n\n      .chips {\n        min-width:auto;\n        display: flex;\n        flex-wrap: wrap;\n        \n\n        .chip{\n          margin: 2px;\n          flex-wrap: wrap;\n          width: auto;\n        }\n\n      }\n      \n      @media(max-width: 500px){\n        width: ${props => props.mobile || '175px'};\n      }\n    }\n\n   \n\n`;\n\nexport default MultiSelect;\n","import React from \"react\";\nimport Input from \"../../../../components/UI/Input\";\nimport Minimizer from \"../../../../components/UI/Wrappers/Minimizer\";\nimport Flex from \"../../../../components/UI/Wrappers/Flex\";\n\nimport MultiSelect from \"../../../../components/UI/MultiSelect\";\n\nconst ContactUsPlugin = props => {\n  if (!props.plugin) return <div />;\n\n  const { contactUsActive, contactUsPages, contactUsEmail } = props.plugin;\n  console.log(\"contact us settings props\", props);\n  return (\n    <div>\n      <Flex>\n        <Input\n          inputtype=\"checkbox\"\n          sideLabel=\"Contact Us Plugin\"\n          parentObj={props.parentObj}\n          name=\"contactUsActive\"\n          checked={contactUsActive}\n          handleChange={props.handleCheckbox}\n        />\n        {contactUsActive && (\n          <MultiSelect\n            label=\"Select the pages where this plugin is available\"\n            items={props.availableRoutes}\n            name=\"contactUsPages\"\n            value={contactUsPages}\n            handleChange={props.handleChange}\n            margin={\"0 10px 20px 15px\"}\n          />\n        )}\n      </Flex>\n\n      {contactUsActive && (\n        <Minimizer padding={\"20px\"}>\n          <div>\n            <Input\n              inputtype=\"input\"\n              label=\"Enter Business email where contact requests are received\"\n              parentObj={props.parentObj}\n              name=\"contactUsEmail\"\n              value={contactUsEmail}\n              onChange={props.handleChange}\n            />\n          </div>\n        </Minimizer>\n      )}\n    </div>\n  );\n};\n\nexport default ContactUsPlugin;\n","import React from \"react\";\nimport Input from \"../../../../components/UI/Input\";\nimport Minimizer from \"../../../../components/UI/Wrappers/Minimizer\";\nimport Flex from \"../../../../components/UI/Wrappers/Flex\";\n\nimport MultiSelect from \"../../../../components/UI/MultiSelect\";\n\nconst BookingPlugin = props => {\n    if (!props.plugin) return <div />;\n\n    const { bookingActive, bookingPages, bookingEmail, bookingForm, bookingCalendarID, bookingApiKey, bookingTimeSlotsAvailable, bookingTimeSlots, bookingGetCalandarAdvance, bookingSessions } = props.plugin;\n    console.log(\"booking settings props\", props);\n    return (\n        <div>\n            <Flex>\n                <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Booking Plugin\"\n                    parentObj={props.parentObj}\n                    name=\"bookingActive\"\n                    checked={bookingActive}\n                    handleChange={props.handleCheckbox}\n                />\n                {bookingActive && (\n                    <MultiSelect\n                        label=\"Select the pages where this plugin is available\"\n                        items={props.availableRoutes}\n                        name=\"bookingPages\"\n                        value={bookingPages}\n                        handleChange={props.handleChange}\n                        margin={\"0 10px 20px 15px\"}\n                    />\n                )}\n            </Flex>\n\n            {bookingActive && (\n                <Minimizer emptyHeight={\"200px\"} padding={\"20px\"}>\n                    <div>\n                        <Input\n                            inputtype=\"input\"\n                            label=\"Enter Business email where bookings are received\"\n                            parentObj={props.parentObj}\n                            name=\"bookingEmail\"\n                            value={bookingEmail}\n                            onChange={props.handleChange}\n                        />\n                        <Input\n                            inputtype=\"input\"\n                            label=\"Google Calendar Id\"\n                            parentObj={props.parentObj}\n                            name=\"bookingCalendarID\"\n                            value={bookingCalendarID}\n                            onChange={props.handleChange}\n                        />\n                        <Input\n                            inputtype=\"input\"\n                            label=\"Google Calendar Api Key\"\n                            parentObj={props.parentObj}\n                            name=\"bookingApiKey\"\n                            value={bookingApiKey}\n                            onChange={props.handleChange}\n                        />\n                        <Input\n                            inputtype=\"checkbox\"\n                            sideLabel=\"Include Contact form with booking calendar\"\n                            parentObj={props.parentObj}\n                            name=\"bookingForm\"\n                            checked={bookingForm}\n                            handleChange={props.handleCheckbox}\n                        />\n                        <br/>\n                        <h2>Booking Calandar options</h2>\n                        <Input\n                            inputtype=\"checkbox\"\n                            sideLabel=\"Timeslots available (leave unticked if booking times do not repeat)\"\n                            parentObj={props.parentObj}\n                            name=\"bookingTimeSlotsAvailable\"\n                            checked={bookingTimeSlotsAvailable}\n                            handleChange={props.handleCheckbox}\n                        />\n                        { bookingTimeSlotsAvailable &&\n                        <Input\n                            inputtype=\"input\"\n                            label=\"Enter the timeslots when events can be booked on a daily bases\"\n                            parentObj={props.parentObj}\n                            name=\"bookingTimeSlots\"\n                            value={bookingTimeSlots}\n                            placeholder={'eg 24 hour format..  09:30-10:00, 10:00-10:30, 14:30-15:00'}\n                            onChange={props.handleChange}\n                        />\n                        }\n                        <Input\n                            inputtype=\"select\"\n                            label=\"Select how far in the future customers can book\" \n                            value={bookingGetCalandarAdvance}\n                            name=\"bookingGetCalandarAdvance\"\n                            items={[\n                                {value : \"1 month\"},\n                                {value : \"2 months\"},\n                                {value : \"3 months\"},\n                                {value : \"6 months\"},\n                                {value : \"9 months\"},\n                                {value : \"12 months\"},                           \n                            ]}\n                            onSelectChange={props.handleChange}\n                        />\n                        <Input\n                            inputtype=\"input\"\n                            type=\"number\"\n                            label={bookingTimeSlotsAvailable ? 'Booking sessions available per timeslot' : 'Booking sessions available per day'}\n                            parentObj={props.parentObj}\n                            name=\"bookingSessions\"\n                            value={bookingSessions}\n                            placeholder={bookingTimeSlotsAvailable ? 'eg. Entering \"6\" will allow 6 bookings per timeslot' : 'eg. Entering \"6\" will allow 6 bookings per day'}\n                            onChange={props.handleChange}\n                        />\n\n\n                    </div>\n                </Minimizer>\n            )}\n        </div>\n    );\n};\n\nexport default BookingPlugin;\n","import React from \"react\";\nimport Input from \"../../../../components/UI/Input\";\nimport Minimizer from \"../../../../components/UI/Wrappers/Minimizer\";\nimport Flex from \"../../../../components/UI/Wrappers/Flex\";\n\nimport MultiSelect from \"../../../../components/UI/MultiSelect\";\n\nconst TestimonialsPlugin = props => {\n  if (!props.plugin) return <div />;\n\n  const { testimonialsActive, testimonialsPages, testimonialsEmail } = props.plugin;\n  console.log(\"Testimonals settings props\", props);\n\n  return (\n    <div>\n      <Flex>\n        <Input\n          inputtype=\"checkbox\"\n          sideLabel=\"Testimonals Plugin\"\n          parentObj={props.parentObj}\n          name=\"testimonialsActive\"\n          checked={testimonialsActive}\n          handleChange={props.handleCheckbox}\n        />\n        {testimonialsActive && (\n          <MultiSelect\n            label=\"Select the pages where this plugin is available\"\n            items={props.availableRoutes}\n            name=\"testimonialsPages\"\n            value={testimonialsPages}\n            handleChange={props.handleChange}\n            margin={\"0 10px 20px 15px\"}\n          />\n        )}\n      </Flex>\n\n      {/* {testimonialsActive && (\n        <Minimizer padding={\"20px\"}>\n          <div>\n            <Input\n              inputtype=\"input\"\n              label=\"Enter Business email where contact requests are received\"\n              parentObj={props.parentObj}\n              name=\"testimonialsEmail\"\n              value={testimonialsEmail}\n              onChange={props.handleChange}\n            />\n          </div>\n        </Minimizer>\n      )} */}\n    </div>\n  );\n};\n\nexport default TestimonialsPlugin;\n","import React, { Component } from \"react\";\n\nimport styled from \"styled-components\";\n\nimport Spinner from \"../../../components/UI/Spinner\";\nimport Flex from \"../../../components/UI/Wrappers/Flex\";\nimport Button from \"../../../components/UI/Buttons/Button\";\n\nimport ContactUsPlugin from \"./contactUsPlugin/ContactUsPlugin\";\nimport BookingPlugin from \"./bookingPlugin/BookingPlugin\";\nimport TesimonialsPlugin from './testimonialPlugin/TestimonialPlugin';\nclass Plugins extends Component {\n  state = {\n    contactUsPlugin: false\n  };\n\n  accordianClick = name => {\n    this.setState({ [name]: !this.state[name] });\n  };\n\n  handleChange = (event, parentObj) => {\n    //event.preventDefault();\n    this.props.changePluginState(event.target, \"plugins\", parentObj);\n  };\n\n  handleCheckbox = (check, parentObj) => event => {\n    console.log(check, parentObj, event.target.checked);\n    const newevent = {\n      name: event.target.name,\n      value: event.target.checked\n    };\n    this.props.changePluginState(newevent, \"plugins\", parentObj);\n  };\n\n  handlesubmit = event => {\n    event.preventDefault();\n    const siteName = process.env.REACT_APP_SITENAME;\n\n    const url = `/${siteName}/site/plugins`;\n    this.props.pluginsChangeSubmit(url, this.props.plugins);\n  };\n\n  render() {\n    if (!this.props.plugins)\n      return (\n        <div>\n          <Spinner />\n        </div>\n      );\n\n    console.log(\"plugins props\", this.props);\n\n    let availableRoutes = this.props.availableRoutes.map(route => {\n      const value = route.value === \"/\" ? \"home\" : route.value;\n      let str = value.split(\"/\").pop();\n      return str;\n    });\n\n    availableRoutes.unshift(\"All Pages\");\n\n    return (\n      <div>\n        <StyledPlugins>\n          <ContactUsPlugin\n            plugin={this.props.plugins.contactUs}\n            name={\"contactUsPlugin\"}\n            parentObj=\"contactUs\"\n            availableRoutes={availableRoutes}\n            accordianClick={this.accordianClick}\n            handleCheckbox={this.handleCheckbox}\n            handleChange={e => this.handleChange(e, \"contactUs\")}\n          />\n          <br/><br/>\n          <BookingPlugin\n            plugin={this.props.plugins.booking}\n            name={\"bookingPlugin\"}\n            parentObj=\"booking\"\n            availableRoutes={availableRoutes}\n            accordianClick={this.accordianClick}\n            handleCheckbox={this.handleCheckbox}\n            onSelectChange={this.onSelectChange}\n            handleChange={e => this.handleChange(e, \"booking\")}\n          />\n          <TesimonialsPlugin\n            plugin={this.props.plugins.testimonials}\n            name={\"testimonialsPlugin\"}\n            parentObj=\"testimonials\"\n            availableRoutes={availableRoutes}\n            accordianClick={this.accordianClick}\n            handleCheckbox={this.handleCheckbox}\n            onSelectChange={this.onSelectChange}\n            handleChange={e => this.handleChange(e, \"testimonials\")}\n          />\n        </StyledPlugins>\n        <Flex justifyContent=\"flex-start\">\n          <Button margin=\"2px 5px 15px 20px\" onClick={this.handlesubmit}>\n            Update\n          </Button>\n          {this.props.isUpdating && <Spinner />}\n          {this.props.stateBackup && (\n            <Button\n              margin=\"2px 20px 15px 20px\"\n              onClick={this.props.cancelUpdate}\n            >\n              Undo Changes\n            </Button>\n          )}\n        </Flex>\n      </div>\n    );\n  }\n}\n\nconst StyledPlugins = styled.div`\n  width: 100%;\n`;\nexport default Plugins;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../store/actions/index\";\n\nimport Spinner from \"../../components/UI/Spinner\";\nimport Button from \"../../components/UI/Buttons/Button\";\nimport Input from \"../../components/UI/Input\";\nimport Flex from \"../../components/UI/Wrappers/Flex\";\n\nclass AuthModal extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.isAuthenticated !== prevProps.isAuthenticated) {\n      this.props.isTimedOut();\n    }\n  }\n\n  onFormChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  submitHandler = event => {\n    event.preventDefault();\n    this.props.onAuth(this.state.email, this.state.password, this.props.admin);\n  };\n\n  backToHome = () => {\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    console.log(\"AuthModal page props\", this.props);\n\n    let errorMessage = null;\n\n    if (this.props.error) {\n      // const errorCode={\n      //   EMAIL_NOT_FOUND: 'There is no user record corresponding to this email address',\n      //   INVALID_PASSWORD: 'The password entered was invalid - please try again',\n      //   USER_DISABLED: 'The user account has been disabled by an administrator.',\n      //   INVALID_EMAIL: 'The email address entered is invalid'\n      // }\n      errorMessage = (\n        // <p>{ errorCode[this.props.error.message] }</p>\n        <p>{this.props.error}</p>\n      );\n    }\n\n    return (\n      <div>\n        <div>Administrator Login</div>\n        <br />\n        <Input\n          inputtype=\"input\"\n          placeholder=\"email\"\n          name=\"email\"\n          value={this.state.email}\n          onChange={this.onFormChange}\n        />\n        <Input\n          inputtype=\"input\"\n          placeholder=\"password\"\n          name=\"password\"\n          value={this.state.password}\n          onChange={this.onFormChange}\n        />\n        {errorMessage}\n        <br />\n        <Flex>\n          <Button onClick={this.backToHome}>Cancel</Button>\n          <Button onClick={this.submitHandler}>Submit</Button>\n        </Flex>\n\n        {this.props.loading && <Spinner />}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    admin: state.mainState.admin,\n    isAuthenticated: state.auth.userId !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (email, password, admin) =>\n      dispatch(actions.auth(email, password, admin))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AuthModal);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../store/actions/index\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nimport styled from \"styled-components\";\n\nimport Accordian from \"../../components/UI/Accordian\";\nimport TabsMenu from \"./Navigation/TabsMenu\";\nimport Modal from \"../../components/UI/Modal\";\nimport Button from \"../../components/UI/Buttons/Button\";\nimport Toast from \"../../components/UI/Toast\";\nimport Flex from \"../../components/UI/Wrappers/Flex\";\n\nimport NewPageForm from \"../../components/Forms/NewPageForm\";\nimport Media from \"./media/Media\";\nimport Template from \"./template/Template\";\nimport Homepage from \"./homepage/Homepage\";\nimport Plugins from \"./plugins/Plugins\";\nimport AuthModal from \"../Auth/AuthModal\";\n\nclass Admin extends Component {\n  state = {\n    homepage_accordian: false,\n    navigation_accordian: false,\n    template_accordian: false,\n    media_accordian: false,\n\n    showSignIn: false,\n    newPageOpen: false,\n    deletePageModal: false,\n    pageToDelete: null,\n    openMediaModal: false,\n    mediaModalTabItemRef: [],\n    mediaImages: [],\n    newPageToast: null,\n    loading: false,\n    error: null\n  };\n\n  componentWillMount() {\n    console.log('adminPage - sitename', process.env.REACT_APP_SITENAME)\n\n    if (!this.props.isAuthenticated && process.env.NODE_ENV === \"production\"){\n      this.props.history.push('/authenticate-admin')\n    }\n\n    const user = firebase.auth().currentUser;\n\n    if (user) {\n      // User is signed in.\n      console.log(\"user is signed in\");\n    } else {\n      // No user is signed in.\n      console.log(\" No user is signed in.\");\n      // firebase.auth().signInWithCustomToken(token).catch(function(error) {\n      //     // Handle Errors here.\n      //     var errorCode = error.code;\n      //     var errorMessage = error.message;\n      //     // ...\n      // });\n    }\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isAuthenticated && !this.props.isAuthenticated && process.env.NODE_ENV === \"production\"){\n      this.props.history.push('/authenticate-admin')\n    }\n  }\n\n  logoutHandler = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(\n        function() {\n          console.log(\"Signed Out\");\n        },\n        function(error) {\n          console.error(\"Sign Out Error\", error);\n        }\n      );\n    this.props.onLogoutClick();\n  };\n\n  openMediaModal = (pageInfo, key, parentKey) => {\n    console.log(\"opneMedia Modal\", pageInfo, key, parentKey);\n    this.setState({\n      openMediaModal: true,\n      mediaModalTabItemRef: [pageInfo, key, parentKey]\n    });\n  };\n\n  closeMediaModal = () => {\n    this.setState({ openMediaModal: false });\n  };\n\n  setMediaImages = mediaImages => {\n    this.setState({ mediaImages });\n  };\n\n  handleNewPageButton = event => {\n    event.preventDefault();\n    this.setState({ newPageOpen: !this.state.newPageOpen });\n  };\n\n  submitNewPage = newPage_State => {\n    console.log(\"newPage_State\", newPage_State);\n    const { title, checked, selectVal } = newPage_State;\n    const { navigationItems } = this.props;\n    const siteName = process.env.REACT_APP_SITENAME\n\n    const route = title.replace(/ /g, \"-\").toLowerCase();\n\n    const defaultContent = {\n      id: Date.now(),\n      mainText: `This is your newly added ${title} page`\n    };\n    let url = `/${siteName}/site/navigationItems`;\n\n    let newPageObj = {\n      title,\n      route,\n      selected: false,\n      content: defaultContent\n    };\n\n    if (checked) {\n      // const subpageIndex = this.props.navigationItems.findIndex(page => page.title === selectVal);\n\n      let subpageIndex = null;\n      for (let key in navigationItems) {\n        if (navigationItems[key].title === selectVal) {\n          subpageIndex = key;\n        }\n      }\n\n      url = `/${siteName}/site/navigationItems/${subpageIndex}/dropdownPages`;\n\n      newPageObj = {\n        title,\n        route,\n        content: defaultContent\n      };\n    }\n\n    this.setState({ loading: true, error: null }, () => {\n      const that = this;\n      const newPostKey = firebase\n        .database()\n        .ref()\n        .child(url)\n        .push().key;\n      const newPage = { [newPostKey]: newPageObj };\n\n      firebase\n        .database()\n        .ref()\n        .child(url)\n        .update(newPage, function(err) {\n          if (err) {\n            // The write failed...\n            that.setState({\n              loading: false,\n              error: err.code,\n              newPageOpen: false,\n              showSignIn: true\n            });\n          } else {\n            // Data saved successfully!\n            console.log(\"new page added successfully!\");\n            that.setState({\n              loading: false,\n              error: null,\n              newPageOpen: false,\n              newPageToast: \"New Page added successfully\"\n            });\n            that.props.onInitWebsiteState();\n          }\n\n          // axios.post(url, newPageObj)\n          //   .then(response => {\n          //     console.log(response)\n          //     this.props.onInitWebsiteState()\n          //   })\n          //   .then(() =>{\n          //     this.setState({loading: false, error: null, newPageOpen: false, newPageToast: 'New Page added successfully' })\n          //   })\n          //   .then(() => {\n          //     setTimeout(() => {\n          //         this.setState({newPageToast: null});\n          //     }, 7000 );\n          //   })\n          //   .catch(err => {\n          //     console.log(err);\n          //     this.setState({loading: false, error: err.response.data.error, newPageOpen: false, showSignIn: true})\n        });\n    });\n  };\n\n  handleDeletePageModal = (pageId, parentId) => {\n    if (this.state.deletePageModal) {\n      this.setState({ deletePageModal: false, pageToDelete: null });\n    } else {\n      this.setState({\n        deletePageModal: true,\n        pageToDelete: { id: pageId, parentId: parentId }\n      });\n    }\n  };\n\n  submitDeletePage = () => {\n    console.log(this.state.pageToDelete);\n    const that = this;\n    const { id, parentId } = this.state.pageToDelete;\n    const siteName = process.env.REACT_APP_SITENAME;\n\n    let url = `/${siteName}/site/navigationItems/${id}`;\n\n    if (parentId) {\n      url = `/${siteName}/site/navigationItems/${parentId}/dropdownPages/${id}`;\n    }\n\n    firebase\n      .database()\n      .ref(url)\n      .remove()\n      .then(function() {\n        console.log(\"Remove succeeded.\");\n        that.props.onInitWebsiteState();\n        that.setState({ deletePageModal: false, pageToDelete: null });\n      })\n      .catch(function(error) {\n        console.log(\"Remove failed: \" + error.message);\n      });\n  };\n\n  updatePage = (eventTarget, key, parent) => {\n    console.log(eventTarget.value, key, parent);\n    this.props.onChangePageState(eventTarget, key, parent);\n  };\n\n  updatePageSubmit = (pageInfo, key, parentKey) => {\n    console.log(pageInfo, key, parentKey);\n    const siteName = process.env.REACT_APP_SITENAME;\n\n    const URL = !parentKey\n      ? `/${siteName}/site/navigationItems/${key}/content`\n      : `/${siteName}/site/navigationItems/${parentKey}/dropdownPages/${key}/content`;\n\n    const user = firebase.auth().currentUser;\n\n    if (user) {\n      // User is signed in.\n      console.log(\"user is signed in\");\n      this.props.onUpdatePageSubmit(URL, pageInfo);\n    } else {\n      // No user is signed in.\n      console.log(\" No user is signed in.\");\n      this.setState({\n        showSignIn: true,\n        error: \"Permission denied. Please sign in again to Re-authenticate\"\n      });\n    }\n  };\n\n  timedOutUser = () => {\n    const user = firebase.auth().currentUser;\n    if (user) {\n      // User is signed in\n      this.setState({ showSignIn: false });\n    } else {\n      // No user is signed in.\n      console.log(\" No user is signed in.\");\n      this.setState({ showSignIn: true });\n    }\n  };\n\n  accordianClick = name => {\n    this.setState({ [name]: !this.state[name] });\n  };\n\n  // this.props.addPage(url, newPageObj)\n\n  render() {\n    console.log(\"Admin Page props\", this.props);\n    const {\n      media_accordian,\n      template_accordian,\n      homepage_accordian,\n      navigation_accordian,\n      plugins_accordian\n    } = this.state;\n\n    return (\n      <StyledAdminPage>\n        <Flex justifyContent=\"space-between\">\n          <h1 className=\"admin-title\">Admin Page</h1>\n          <Button onClick={this.logoutHandler}>logout</Button>\n        </Flex>\n        <Modal\n          open={this.state.showSignIn}\n          title=\"You have been logged out\"\n          description=\"Your administrator session has expired you will need to log back in to continue\"\n        >\n          <AuthModal\n            history={this.props.history}\n            isTimedOut={this.timedOutUser}\n          />\n        </Modal>\n        <div>\n          <Accordian\n            title={\"Media\"}\n            name={\"media_accordian\"}\n            onClick={e => this.accordianClick(e)}\n          >\n            {media_accordian && (\n              <Media\n                isAuthenticated={this.props.isAuthenticated}\n                isTimedOut={this.timedOutUser}\n                currentImages={this.props.images}\n                refreshState={this.props.onInitWebsiteState}\n                isModal={false}\n                imageURLs={this.state.mediaImages}\n                setMediaImages={this.setMediaImages}\n              />\n            )}\n          </Accordian>\n          <br />\n\n          <Accordian\n            title={\"Template\"}\n            name={\"template_accordian\"}\n            onClick={e => this.accordianClick(e)}\n          >\n            {template_accordian && (\n              <Template\n                template={this.props.template}\n                changeTemplateState={this.props.onChangePageState}\n                templateChangeSubmit={this.props.onUpdatePageSubmit}\n                isUpdating={this.props.isUpdating}\n                isError={this.props.isError}\n                stateBackup={this.props.stateBackup}\n                cancelUpdate={this.props.onRevertChanges}\n                openMediaModal={this.openMediaModal}\n              />\n            )}\n          </Accordian>\n          <br />\n\n          <Accordian\n            title={\"Homepage\"}\n            name={\"homepage_accordian\"}\n            onClick={e => this.accordianClick(e)}\n          >\n            {homepage_accordian && (\n              <Homepage\n                homePage={this.props.home}\n                changeHomepageState={this.props.onChangePageState}\n                homepageChangeSubmit={this.props.onUpdatePageSubmit}\n                isUpdating={this.props.isUpdating}\n                isError={this.props.isError}\n                stateBackup={this.props.stateBackup}\n                cancelUpdate={this.props.onRevertChanges}\n                openMediaModal={this.openMediaModal}\n                availableRoutes={this.props.availableRoutes}\n                template={this.props.template}\n                plugins={this.props.plugins}\n              />\n            )}\n          </Accordian>\n          <br />\n\n          <Accordian\n            title=\"Navigation and Pages\"\n            name={\"navigation_accordian\"}\n            onClick={e => this.accordianClick(e)}\n          >\n            {navigation_accordian && (\n              <div className=\"fullwidth\">\n                <Button onClick={this.handleNewPageButton}>\n                  Add a new page\n                </Button>\n\n                <Modal\n                  open={this.state.newPageOpen}\n                  navigationItems={this.props.navigationItems}\n                  handleClose={this.handleNewPageButton}\n                  title=\"Add a new Webpage\"\n                  description=\"Here you can add a new page to your website which will show in the header navigation. You can also make the new page a subpage of another navigation link\"\n                >\n                  <NewPageForm\n                    loading={this.state.loading}\n                    navigationItems={this.props.navigationItems}\n                    handleClose={this.handleNewPageButton}\n                    handleSubmit={this.submitNewPage}\n                  />\n                </Modal>\n\n                <Modal\n                  open={this.state.deletePageModal}\n                  navigationItems={this.props.navigationItems}\n                  handleClose={this.handleDeletePageModal}\n                  title=\"Delete Webpage\"\n                  description=\"You are about to delete selected page this is a permanent action, would you like to continue with deleting this page\"\n                >\n                  <Flex>\n                    <Button onClick={this.submitDeletePage}>Delete</Button>\n                    <Button onClick={this.handleDeletePageModal}>Cancel</Button>\n                  </Flex>\n                </Modal>\n\n                <br />\n                <br />\n                <TabsMenu\n                  navigationItems={this.props.navigationItems}\n                  updatePageSubmit={this.updatePageSubmit}\n                  onChange={this.updatePage}\n                  openMediaModal={this.openMediaModal}\n                  handlePageDelete={this.handleDeletePageModal}\n                  isUpdating={this.props.isUpdating}\n                  cancelUpdate={this.props.onRevertChanges}\n                  isError={this.props.isError}\n                  stateBackup={this.props.stateBackup}\n                  availableRoutes={this.props.availableRoutes}\n                  template={this.props.template}\n                  plugins={this.props.plugins}\n                />\n                <br />\n              </div>\n            )}\n          </Accordian>\n          <br />\n\n          <Accordian\n            title={\"Plugins\"}\n            name={\"plugins_accordian\"}\n            onClick={e => this.accordianClick(e)}\n          >\n            {plugins_accordian && (\n              <Plugins\n                plugins={this.props.plugins}\n                changePluginState={this.props.onChangePageState}\n                pluginsChangeSubmit={this.props.onUpdatePageSubmit}\n                availableRoutes={this.props.availableRoutes}\n                isUpdating={this.props.isUpdating}\n                isError={this.props.isError}\n                stateBackup={this.props.stateBackup}\n                cancelUpdate={this.props.onRevertChanges}\n              />\n            )}\n          </Accordian>\n\n          <Modal\n            open={this.state.openMediaModal}\n            title=\"Choose an image\"\n            description=\"Select the media location you would like to use\"\n            handleClose={this.closeMediaModal}\n          >\n            <Media\n              isModal={true}\n              isAuthenticated={this.props.isAuthenticated}\n              handleClose={this.closeMediaModal}\n              currentImages={this.props.images}\n              imageURLs={this.state.mediaImages}\n              setMediaImages={this.setMediaImages}\n              tabItemReference={this.state.mediaModalTabItemRef}\n              onChangePageState={this.props.onChangePageState}\n            />\n          </Modal>\n        </div>\n        {this.state.newPageToast !== null && (\n          <Toast message={this.state.newPageToast} />\n        )}\n        {this.props.updatePageToast !== null && (\n          <Toast message={this.props.updatePageToast} />\n        )}\n        {this.state.error && <Toast message={this.state.error} error={true} />}\n      </StyledAdminPage>\n    );\n  }\n}\n\nconst StyledAdminPage = styled.div`\n  background-color: #424242;\n  /* min-height: 100vh; */\n  padding: 100px 50px;\n  margin-top: -75px;\n\n  .admin-title {\n    color: #f5f5f5;\n  }\n\n  @media(max-width: 500px){\n    padding: 100px 10px;\n  }\n`;\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.userId !== null,\n    userId: state.auth.userId,\n    home: state.mainState.home,\n    navigationItems: state.mainState.navigationItems,\n    images: state.mainState.images,\n    stateBackup: state.mainState.state_copy,\n    updatePageToast: state.admin.pageUpdateToast,\n    isUpdating: state.admin.loading,\n    isError: state.admin.error,\n    availableRoutes: state.admin.routes,\n    template: state.mainState.template,\n    plugins: state.mainState.plugins\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onInitWebsiteState: () => dispatch(actions.initWebsiteState()),\n    onLogoutClick: () => dispatch(actions.logout()),\n    onChangePageState: (eventTarget, key, parent) =>\n      dispatch(actions.changePageState(eventTarget, key, parent)),\n    onUpdatePageSubmit: (pageInfo, url) =>\n      dispatch(actions.updatePageSubmit(pageInfo, url)),\n    onRevertChanges: () => dispatch(actions.revertStateChange())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Admin);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Page from \"../../components/page\";\n\nimport Admin from \"../../containers/Admin/Admin\";\n\nconst AdminRoute = ({ currentUser }) => (\n  <Page id=\"admin\" title=\"Admin\" noCrawl>\n    <Admin />\n  </Page>\n);\n\nconst mapStateToProps = state => ({\n  currentUser: state.auth.currentUser\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(AdminRoute);\n","import React from \"react\";\nimport Page from \"../../components/page\";\n\nimport Admin from \"../../containers/Admin/Admin\";\n\nconst Admin_TEST = props => {\n  console.log(\"admin_TEST.props\", props);\n  return (\n    <Page id=\"admin\" title=\"Admin\" noCrawl>\n      <Admin {...props}/>\n    </Page>\n  );\n};\n\nexport default Admin_TEST;\n"],"sourceRoot":""}