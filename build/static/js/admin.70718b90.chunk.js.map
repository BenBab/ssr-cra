{"version":3,"sources":["app/components/UI/Accordian.js","app/components/UI/Wrappers/Box.js","app/components/UI/Wrappers/Minimizer.js","app/containers/Admin/Navigation/TabItems.js/TabItems.js","app/containers/Admin/Navigation/TabsMenu.js","app/components/UI/Modal.js","app/components/Forms/NewPageForm.js","app/containers/Admin/media/ImgGridList.js","app/containers/Admin/media/Media.js","app/containers/Admin/template/Template.js","app/containers/Admin/homepage/Homepage.js","app/components/UI/MultiSelect.js","app/containers/Admin/plugins/contactUsPlugin/ContactUsPlugin.js","app/containers/Admin/plugins/bookingPlugin/BookingPlugin.js","app/containers/Admin/plugins/Plugins.js","app/containers/Auth/AuthModal.js","app/containers/Admin/Admin.js","app/routes/admin/index.js","app/routes/adminTest/index.js"],"names":["StyledAccordian","styled","div","_templateObject","props","theme","primaryBackGroundColour","accordian","react_default","a","createElement","ExpansionPanel_default","onChange","onClick","name","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","title","ExpansionPanelDetails_default","children","StyledBox","Box_templateObject","margin","opacity","Box","boxOpacity","Minimizer","state","isOpen","handleMinimizer","_this","setState","this","StyledMinimizer","padding","Flex","IconButton_default","aria-label","color","RemoveCircle_default","AddCircle_default","Collapse_default","in","className","Emtpy","emptyHeight","Component","Minimizer_templateObject","_templateObject2","StyledTabItems","TabItems_templateObject","Preview","TabItems_templateObject2","DeletePageIcon","_templateObject3","TabItems","console","log","itemProps","dropdownPages","TabsMenu_TabMenu","navigationItems","parentId","pageId","parent","handlePageDelete","openMediaModal","updatePageSubmit","isUpdating","cancelUpdate","stateBackup","availableRoutes","template","plugins","handleChange","event","preventDefault","target","handleCheckbox","check","checked","newevent","value","handleMediaModal","handleColourPicker","clearInput","inputName","_props$itemProps$cont","content","topBanner","topBannerHalfwidth","topBannerImgSize","topBannerHWbackImg","topBannerHWBackColour","topBannerTxtRightSide","topBannerTxtLightTheme","topBannerLogo","topBannerfade","topBannerTitle","topBannerSubtitle","topBannerDescription","topBannerBtnText","topBannerLink","midBanner","midBannerHalfwidth","midBannerImgSize","midBannerHWbackImg","midBannerHWBackColour","midBannerTxtRightSide","midBannerTxtLightTheme","midBannerLogo","midBannerfade","midBannerTitle","midBannerSubtitle","midBannerDescription","midBannerBtnText","midBannerLink","mainText","bottomBanner","Paper_default","elevation","Input","inputtype","label","concat","Wrappers_Minimizer","Wrappers_Box","sideLabel","Fragment","type","changeColour","items","onSelectChange","Dashboard","Object","assign","pageInfo","overlayBlocker","justifyContent","Button","Spinner","Delete_default","fontSize","TabMenu","disableTabText","topBannerOptions","midBannerOptions","bottomBannerOptions","prevProps","_this2","_this$props","tabLabels","tabitems","keys","map","key","index","item","Tab_default","TabItems_js_TabItems","StyledTabs","Tooltip_default","AppBar_default","position","Tabs_default","variant","scrollButtons","isError","Toast","message","error","TabsMenu_templateObject","Modal","width","fullWidth","maxWidth","Dialog_default","open","onClose","handleClose","aria-labelledby","DialogTitle_default","id","DialogContent_default","DialogContentText_default","description","NewPageForm","_Component","_getPrototypeOf2","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","selectVal","defineProperty","onInputChange","_event$target","scrubbedVal","replace","inherits","createClass","prop","handleSubmit","disabled","loading","TitlebarGridList","columns","spacing","activeIndex","selectedValue","selectedName","handleResize","windowSize","window","innerWidth","handleSelect","tile","selectedImage","addEventListener","removeEventListener","tileData","StyledGrid","GridList_default","cellHeight","cols","GridListTile_default","style","height","ListSubheader_default","component","gridTileClass","selectedIndex","e","src","img","alt","GridListTileBar_default","actionIcon","isModal","deleteImage","ImgGridList_templateObject","Media","uploadOpen","customURL","customURLtext","deleteImgOpen","getImageUrls","that","assertThisInitialized","imageContainer","imageCount","currentImages","returnedCount","storageRef","firebase","storage","ref","i","child","process","getDownloadURL","then","url","toConsumableArray","setMediaImages","catch","onDrop","acceptedFiles","rejectedFiles","auth","currentUser","file","checkFileAlreadyExists","put","snapshot","addImageRefToDb","err","isTimedOut","filter","newPostKey","database","push","updates","update","refreshState","handleCustomURL","confirmImage","_this$state","tabItemReference","image","onChangePageState","imgUrl","confirmDelete","imageURLs","find","remove","delete","handleUploadOpen","isAuthenticated","_this$state2","dropZone","mediaTemplate","noMediaMessage","dist_es","multiple","accept","_ref","getRootProps","getInputProps","isDragActive","StyledDropArea","classNames","dropzone--isActive","selectedLabel","IsMediaModal","ImgGridList","placeholder","Divider_default","UI_Modal","Media_templateObject","Media_templateObject2","Template","changeTemplateState","handlesubmit","templateChangeSubmit","buttonStyle","_this$props$template","navButtons","siteButtons","transparentHeader","navLightTheme","siteLogo","version","StyledTemplate","Grid","colsLarge","colsMed","Template_templateObject","Homepage","previewOpen","changeHomepageState","homepageChangeSubmit","homePage","_this$props$homePage$","mainTextPosition","mainTextCenterTitle","mainTextRightSide","mainTextBackColour","mainTextImg","mainTextImgAlign","mainTextImgWidth","mainTextImgHeight","StyledHomePage","Homepage_Preview","Homepage_templateObject","Homepage_templateObject2","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","MultiSelect","StyledSelect","FormControl_default","InputLabel_default","htmlFor","Select_default","input","Input_default","renderValue","selected","Chip_default","MenuItem_default","React","MultiSelect_templateObject","minwidth","ContactUsPlugin","plugin","_props$plugin","contactUsActive","contactUsPages","contactUsEmail","parentObj","UI_MultiSelect","BookingPlugin","bookingActive","bookingPages","bookingEmail","bookingForm","bookingCalendarID","bookingApiKey","Plugins","contactUsPlugin","accordianClick","changePluginState","pluginsChangeSubmit","route","split","pop","unshift","StyledPlugins","contactUsPlugin_ContactUsPlugin","contactUs","bookingPlugin_BookingPlugin","booking","Plugins_templateObject","AuthModal","email","password","onFormChange","submitHandler","onAuth","admin","backToHome","history","errorMessage","connect","mainState","userId","dispatch","actions","Admin","homepage_accordian","navigation_accordian","template_accordian","media_accordian","showSignIn","newPageOpen","deletePageModal","pageToDelete","mediaModalTabItemRef","mediaImages","newPageToast","logoutHandler","signOut","onLogoutClick","parentKey","closeMediaModal","handleNewPageButton","submitNewPage","newPage_State","toLowerCase","defaultContent","Date","now","newPageObj","subpageIndex","newPage","code","onInitWebsiteState","handleDeletePageModal","submitDeletePage","_this$state$pageToDel","updatePage","eventTarget","URL","onUpdatePageSubmit","timedOutUser","plugins_accordian","StyledAdminPage","Auth_AuthModal","Accordian","media_Media","images","template_Template","onRevertChanges","homepage_Homepage","home","Forms_NewPageForm","plugins_Plugins","updatePageToast","Admin_templateObject","state_copy","pageUpdateToast","routes","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","_components_page__WEBPACK_IMPORTED_MODULE_2__","_containers_Admin_Admin__WEBPACK_IMPORTED_MODULE_3__","noCrawl","_components_page__WEBPACK_IMPORTED_MODULE_1__","_containers_Admin_Admin__WEBPACK_IMPORTED_MODULE_2__","Admin_TEST"],"mappings":"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","file":"static/js/admin.70718b90.chunk.js","sourcesContent":["import React from \"react\";\n\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nimport styled from \"styled-components\";\n\nconst accordian = props => (\n  <StyledAccordian>\n    <ExpansionPanel onChange={() => props.onClick(props.name)}>\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n        <div>{props.title}</div>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        {props.children ? props.children : <div />}\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  </StyledAccordian>\n);\n\nconst StyledAccordian = styled.div`\n    margin: 15px 5px;\n  \n    /* > div {\n        height: 20px !important;\n        width: 20px !important;\n        margin: \"theme.spacing.unit * 2\";\n        color: ${props => props.theme.primaryBackGroundColour};\n\n    } */\n`;\n\nexport default accordian;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Box = props => {\n  const boxOpacity = props.opacity || false;\n\n  return (\n    <StyledBox margin={props.margin} opacity={boxOpacity ? \"0.5\" : \"1\"}>\n      {props.children}\n    </StyledBox>\n  );\n};\n\nconst StyledBox = styled.div`\n  margin: ${props => props.margin || \"20px\"};\n  opacity: ${props => props.opacity};\n`;\n\nexport default Box;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport AddIcon from \"@material-ui/icons/AddCircle\";\nimport MinusIcon from \"@material-ui/icons/RemoveCircle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Flex from \"./Flex\";\nimport Collapse from \"@material-ui/core/Collapse\";\n\nclass Minimizer extends Component {\n  state = {\n    isOpen: false\n  };\n\n  handleMinimizer = () => {\n    this.setState({ isOpen: !this.state.isOpen });\n  };\n\n  render() {\n    const { isOpen } = this.state;\n\n    return (\n      <StyledMinimizer padding={this.props.padding}>\n        <Flex margin=\"0\">\n          <IconButton\n            aria-label=\"Add\"\n            color=\"primary\"\n            onClick={this.handleMinimizer}\n          >\n            {isOpen ? <MinusIcon /> : <AddIcon />}\n          </IconButton>\n          {isOpen ? (\n            <small onClick={this.handleMinimizer}>\n              Click to minimise options\n            </small>\n          ) : (\n            <small onClick={this.handleMinimizer}>\n              Click to expand further options\n            </small>\n          )}\n        </Flex>\n        <Collapse in={isOpen}>\n          {isOpen ? (\n            <div className=\"minimized_children\">{this.props.children}</div>\n          ) : (\n            <Emtpy emptyHeight={this.props.emptyHeight} />\n          )}\n        </Collapse>\n      </StyledMinimizer>\n    );\n  }\n}\n\nconst Emtpy = styled.div`\n  height: ${props => props.emptyHeight || \"500px\"};\n`;\n\nconst StyledMinimizer = styled.div`\n  border: 2px solid rgba(0, 0, 0, 0.2);\n  border-top: 0;\n  border-bottom-left-radius: 8px;\n  border-bottom-right-radius: 8px;\n  margin-bottom: 35px;\n\n  > div small {\n    cursor: pointer;\n  }\n\n  .minimized_children {\n    padding: ${props => props.padding || \"auto\"};\n  }\n`;\n\nexport default Minimizer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Input from \"../../../../components/UI/Input\";\nimport TabMenu from \"../TabsMenu\";\nimport Button from \"../../../../components/UI/Buttons/Button\";\nimport Flex from \"../../../../components/UI/Wrappers/Flex\";\nimport Box from \"../../../../components/UI/Wrappers/Box\";\nimport Spinner from \"../../../../components/UI/Spinner\";\nimport Minimizer from \"../../../../components/UI/Wrappers/Minimizer\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport Dashboard from \"../../../Dashboard/Dashboard\";\n\nconst TabItems = props => {\n  console.log(\"tabItems props\", props);\n  if (props.itemProps.dropdownPages) {\n    return (\n      <TabMenu\n        navigationItems={props.itemProps.dropdownPages}\n        parentId={props.pageId}\n        parent={props.children}\n        onChange={props.onChange}\n        handlePageDelete={props.handlePageDelete}\n        openMediaModal={props.openMediaModal}\n        updatePageSubmit={props.updatePageSubmit}\n        isUpdating={props.isUpdating}\n        cancelUpdate={props.cancelUpdate}\n        stateBackup={props.stateBackup}\n        availableRoutes={props.availableRoutes}\n        template={props.template}\n        plugins={props.plugins}\n      />\n    );\n  }\n\n  const handleChange = event => {\n    event.preventDefault();\n    props.onChange(event.target, props.pageId, props.parentId);\n  };\n\n  const handleCheckbox = check => event => {\n    console.log(check, event.target.checked);\n    const newevent = {\n      name: event.target.name,\n      value: event.target.checked\n    };\n    props.onChange(newevent, props.pageId, props.parentId);\n  };\n\n  const handleMediaModal = event => {\n    event.preventDefault();\n    props.openMediaModal(event.target, props.pageId, props.parentId);\n  };\n\n  const handleColourPicker = event => {\n    props.onChange(event.target, props.pageId, props.parentId);\n  };\n\n  const handlesubmit = event => {\n    event.preventDefault();\n    props.updatePageSubmit(\n      props.itemProps.content,\n      props.pageId,\n      props.parentId\n    );\n  };\n\n  const clearInput = inputName => {\n    const event = { name: inputName, value: \"\" };\n    props.onChange(event, props.pageId, props.parentId);\n  };\n\n  const deletePage = () => {\n    props.handlePageDelete(props.pageId, props.parentId);\n  };\n\n  const {\n    topBanner,\n    topBannerHalfwidth,\n    topBannerImgSize,\n    topBannerHWbackImg,\n    topBannerHWBackColour,\n    topBannerTxtRightSide,\n    topBannerTxtLightTheme,\n    topBannerLogo,\n    topBannerfade,\n    topBannerTitle,\n    topBannerSubtitle,\n    topBannerDescription,\n    topBannerBtnText,\n    topBannerLink,\n    midBanner,\n    midBannerHalfwidth,\n    midBannerImgSize,\n    midBannerHWbackImg,\n    midBannerHWBackColour,\n    midBannerTxtRightSide,\n    midBannerTxtLightTheme,\n    midBannerLogo,\n    midBannerfade,\n    midBannerTitle,\n    midBannerSubtitle,\n    midBannerDescription,\n    midBannerBtnText,\n    midBannerLink,\n    bottomBanner,\n    mainText\n  } = props.itemProps.content;\n\n  return (\n    <Paper elevation={20}>\n      <StyledTabItems>\n        <div>\n          {props.children}\n          <Input\n            inputtype=\"inputSelector\"\n            label={`${\n              topBannerHalfwidth\n                ? \"Top Banner Image (Inside Banner)\"\n                : \"Top Banner Image\"\n            }`}\n            name=\"topBanner\"\n            value={topBanner}\n            onChange={handleChange}\n            onClick={handleMediaModal}\n            clearInput={clearInput}\n          />\n          {topBanner && (\n            <Minimizer>\n              <Box>\n                <Flex>\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Use the Top Banner image inside the Banner \"\n                    name=\"topBannerHalfwidth\"\n                    checked={topBannerHalfwidth}\n                    handleChange={handleCheckbox}\n                  />\n                </Flex>\n                {topBannerHalfwidth && (\n                  <>\n                    <Input\n                      inputtype=\"inputSelector\"\n                      label=\"Banner Background Image\"\n                      name=\"topBannerHWbackImg\"\n                      value={topBannerHWbackImg}\n                      onChange={handleChange}\n                      onClick={handleMediaModal}\n                      clearInput={clearInput}\n                    />\n                    <Flex>\n                      <Input\n                        inputtype=\"input\"\n                        type=\"number\"\n                        label=\"Banner Image Size\"\n                        name=\"topBannerImgSize\"\n                        value={topBannerImgSize}\n                        onChange={handleChange}\n                      />\n                      <Input\n                        inputtype=\"inputColourPicker\"\n                        label=\"Banner Background Colour\"\n                        name=\"topBannerHWBackColour\"\n                        value={topBannerHWBackColour}\n                        changeColour={handleColourPicker}\n                        pageId={\"home\"}\n                      />\n                    </Flex>\n                  </>\n                )}\n                <Flex>\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Banner Text Right Side\"\n                    name=\"topBannerTxtRightSide\"\n                    checked={topBannerTxtRightSide}\n                    handleChange={handleCheckbox}\n                  />\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Banner Light Text Color\"\n                    name=\"topBannerTxtLightTheme\"\n                    checked={topBannerTxtLightTheme}\n                    handleChange={handleCheckbox}\n                  />\n                </Flex>\n                <Flex>\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Use Logo in banner\"\n                    name=\"topBannerLogo\"\n                    checked={topBannerLogo}\n                    handleChange={handleCheckbox}\n                  />\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Banner content fade in effect\"\n                    name=\"topBannerfade\"\n                    checked={topBannerfade}\n                    handleChange={handleCheckbox}\n                  />\n                </Flex>\n                <Input\n                  inputtype=\"input\"\n                  label=\"Banner Title\"\n                  name=\"topBannerTitle\"\n                  value={topBannerTitle}\n                  onChange={handleChange}\n                />\n                <Input\n                  inputtype=\"input\"\n                  label=\"Banner Subtitle\"\n                  name=\"topBannerSubtitle\"\n                  value={topBannerSubtitle}\n                  onChange={handleChange}\n                />\n                <Input\n                  inputtype=\"input\"\n                  label=\"Banner Description\"\n                  name=\"topBannerDescription\"\n                  value={topBannerDescription}\n                  onChange={handleChange}\n                />\n                <Flex>\n                  <Input\n                    inputtype=\"input\"\n                    label=\"Banner Button Text\"\n                    name=\"topBannerBtnText\"\n                    value={topBannerBtnText}\n                    onChange={handleChange}\n                  />\n                  <Input\n                    inputtype=\"select\"\n                    label=\"Banner Link\"\n                    name=\"topBannerLink\"\n                    value={topBannerLink}\n                    items={props.availableRoutes}\n                    onSelectChange={handleChange}\n                  />\n                </Flex>\n              </Box>\n            </Minimizer>\n          )}\n          <Input\n            inputtype=\"inputSelector\"\n            label={`${\n              midBannerHalfwidth\n                ? \"Middle Banner Image (Inside Banner)\"\n                : \"Middle Banner Image\"\n            }`}\n            name=\"midBanner\"\n            value={midBanner}\n            onChange={handleChange}\n            onClick={handleMediaModal}\n            clearInput={clearInput}\n          />\n          {midBanner && (\n            <Minimizer>\n              <Box>\n                <Flex>\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Use the Middle Banner image inside the Banner\"\n                    name=\"midBannerHalfwidth\"\n                    checked={midBannerHalfwidth}\n                    handleChange={handleCheckbox}\n                  />\n                </Flex>\n                {midBannerHalfwidth && (\n                  <>\n                    <Input\n                      inputtype=\"inputSelector\"\n                      label=\"Banner Background Image\"\n                      name=\"midBannerHWbackImg\"\n                      value={midBannerHWbackImg}\n                      onChange={handleChange}\n                      onClick={handleMediaModal}\n                      clearInput={clearInput}\n                    />\n                    <Flex>\n                      <Input\n                        inputtype=\"input\"\n                        type=\"number\"\n                        label=\"Banner Image Size\"\n                        name=\"midBannerImgSize\"\n                        value={midBannerImgSize}\n                        onChange={handleChange}\n                      />\n                      <Input\n                        inputtype=\"inputColourPicker\"\n                        label=\"Banner Background Colour\"\n                        name=\"midBannerHWBackColour\"\n                        value={midBannerHWBackColour}\n                        changeColour={handleColourPicker}\n                        pageId={\"home\"}\n                      />\n                    </Flex>\n                  </>\n                )}\n                <Flex>\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Banner Text Right Side\"\n                    name=\"midBannerTxtRightSide\"\n                    checked={midBannerTxtRightSide}\n                    handleChange={handleCheckbox}\n                  />\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Banner Light Text Color\"\n                    name=\"midBannerTxtLightTheme\"\n                    checked={midBannerTxtLightTheme}\n                    handleChange={handleCheckbox}\n                  />\n                </Flex>\n                <Flex>\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Use Logo in banner\"\n                    name=\"midBannerLogo\"\n                    checked={midBannerLogo}\n                    handleChange={handleCheckbox}\n                  />\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Banner content fade in effect\"\n                    name=\"midBannerfade\"\n                    checked={midBannerfade}\n                    handleChange={handleCheckbox}\n                  />\n                </Flex>\n                <Input\n                  inputtype=\"input\"\n                  label=\"Banner Title\"\n                  name=\"midBannerTitle\"\n                  value={midBannerTitle}\n                  onChange={handleChange}\n                />\n                <Input\n                  inputtype=\"input\"\n                  label=\"Banner Subtitle\"\n                  name=\"midBannerSubtitle\"\n                  value={midBannerSubtitle}\n                  onChange={handleChange}\n                />\n                <Input\n                  inputtype=\"input\"\n                  label=\"Banner Description\"\n                  name=\"midBannerDescription\"\n                  value={midBannerDescription}\n                  onChange={handleChange}\n                />\n                <Flex>\n                  <Input\n                    inputtype=\"input\"\n                    label=\"Banner Button Text\"\n                    name=\"midBannerBtnText\"\n                    value={midBannerBtnText}\n                    onChange={handleChange}\n                  />\n                  <Input\n                    inputtype=\"select\"\n                    label=\"Banner Link\"\n                    name=\"midBannerLink\"\n                    value={midBannerLink}\n                    items={props.availableRoutes}\n                    onSelectChange={handleChange}\n                  />\n                </Flex>\n              </Box>\n            </Minimizer>\n          )}\n          <Input\n            inputtype=\"textarea\"\n            label=\"Main Body Text\"\n            name=\"mainText\"\n            value={mainText}\n            onChange={handleChange}\n          />\n        </div>\n        <Preview>\n          <Dashboard\n            pageInfo={props.itemProps}\n            {...props}\n            template={props.template}\n            plugins={props.plugins}\n            overlayBlocker={true}\n          />\n        </Preview>\n      </StyledTabItems>\n      <Flex justifyContent={\"space-between\"}>\n        <div>\n          <Flex justifyContent=\"flex-start\">\n            <Button margin=\"2px 5px 15px 20px\" onClick={handlesubmit}>\n              Update\n            </Button>\n            {props.isUpdating && <Spinner />}\n            {props.stateBackup && (\n              <Button margin=\"2px 20px 15px 20px\" onClick={props.cancelUpdate}>\n                Undo Changes\n              </Button>\n            )}\n          </Flex>\n        </div>\n        <DeletePageIcon>\n          <IconButton onClick={deletePage}>\n            <DeleteIcon fontSize=\"large\" />\n          </IconButton>\n        </DeletePageIcon>\n      </Flex>\n    </Paper>\n  );\n};\n\nconst StyledTabItems = styled.div`\n  padding: 3vh;\n  display: grid;\n  grid-template-columns: 65% 35%;\n  grid-gap: 8px;\n`;\n\nconst Preview = styled.div`\n  display: block;\n  zoom: 30%;\n  padding-top: 56px;\n  box-shadow: 2px 2px 2px;\n\n  @media (max-width: 500px) {\n    display: none;\n  }\n`;\n\nconst DeletePageIcon = styled.div`\n  padding: 5px;\n`;\n\nexport default TabItems;\n","import React, { Component } from \"react\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport styled from \"styled-components\";\n\nimport Toast from \"../../../components/UI/Toast\";\n\nimport TabItems from \"./TabItems.js/TabItems\";\n\nexport default class TabMenu extends Component {\n  state = {\n    value: 0,\n    disableTabText: \"\",\n    topBannerOptions: true,\n    midBannerOptions: true,\n    bottomBannerOptions: true\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.stateBackup !== prevProps.stateBackup) {\n      if (this.props.stateBackup) {\n        this.setState({\n          disableTabText:\n            \"You have made updates to this page, please save or undo your changes before selecting a new page\"\n        });\n      } else {\n        this.setState({ disableTabText: \"\" });\n      }\n    }\n  }\n\n  handleChange = (event, value) => {\n    if (!this.props.stateBackup) {\n      this.setState({ value });\n    }\n  };\n\n  render() {\n    const { value } = this.state;\n    const { navigationItems, parent, parentId } = this.props;\n    console.log(\"tabMenu props\", this.props);\n    let tabLabels = null;\n    let tabitems = null;\n\n    if (navigationItems !== null) {\n      tabLabels = Object.keys(navigationItems).map((key, index) => {\n        const item = navigationItems[key];\n        //passes the item title down to tabItems, which then runs tabs again if there is a drop down, and passes a parent value back\n        return (\n          <Tab\n            key={index}\n            label={\n              parent ? parent.props.children + \" - \" + item.title : item.title\n            }\n          />\n        );\n      });\n\n      tabitems = Object.keys(navigationItems).map((key, index) => {\n        return (\n          value === index && (\n            <TabItems\n              key={index}\n              pageId={key}\n              parentId={parentId || null}\n              itemProps={navigationItems[key]}\n              onChange={this.props.onChange}\n              handlePageDelete={this.props.handlePageDelete}\n              openMediaModal={this.props.openMediaModal}\n              updatePageSubmit={this.props.updatePageSubmit}\n              isUpdating={this.props.isUpdating}\n              cancelUpdate={this.props.cancelUpdate}\n              stateBackup={this.props.stateBackup}\n              availableRoutes={this.props.availableRoutes}\n              template={this.props.template}\n              plugins={this.props.plugins}\n            >\n              <h2>{navigationItems[key].title}</h2>\n            </TabItems>\n          )\n        );\n      });\n\n      // tabLabels = navigationItems.map( (item, index) => {\n      //     //passes the item title down to tabItems, which then runs tabs again if there is a drop down, and passes a parent value back\n      //     return <Tab key={index} label={ parent ? parent+' - '+item.title : item.title} />\n      // })\n      // tabitems = navigationItems.map( (item, index) => {\n      //     return( value === index && <TabItems key={index} itemProps={item}>{item.title }</TabItems> )\n      // })\n    }\n\n    if (tabitems === null && tabLabels === null) return <div />;\n    return (\n      <StyledTabs>\n        <Tooltip title={this.state.disableTabText}>\n          <AppBar position=\"static\">\n            <Tabs\n              value={value}\n              onChange={this.handleChange}\n              variant=\"scrollable\"\n              scrollButtons=\"auto\"\n            >\n              {tabLabels}\n            </Tabs>\n          </AppBar>\n        </Tooltip>\n        {tabitems}\n        {this.props.isError && (\n          <Toast message={this.props.isError} error={true} />\n        )}\n      </StyledTabs>\n    );\n  }\n}\n\nconst StyledTabs = styled.div`\n  > header {\n    background-color: ${props => props.theme.primaryBackGroundColour};\n    z-index: 20;\n  }\n`;\n","import React from \"react\";\n\n//import TextField from '@material-ui/core/TextField';\nimport Dialog from \"@material-ui/core/Dialog\";\n// import DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst Modal = props => {\n  // const childrenWithProps = React.Children.map()\n  const width = props.fullWidth ? props.fullWidth : true;\n  const maxWidth = props.maxWidth ? props.maxWidth : \"lg\";\n\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        onClose={props.handleClose}\n        aria-labelledby=\"form-dialog-title\"\n        fullWidth={width}\n        maxWidth={maxWidth}\n      >\n        <DialogTitle id=\"form-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>{props.description}</DialogContentText>\n          <br />\n          <br />\n          {/* {React.cloneElement(props.children, { handleSubmit: props.handleSubmit })} */}\n          {props.children}\n        </DialogContent>\n        {/* <DialogActions>\n            <button onClick={props.handleClose} >\n              Cancel\n            </button>\n            <button onClick={props.handleSubmit} >\n              Confirm\n            </button>\n          </DialogActions> */}\n      </Dialog>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { Component } from \"react\";\nimport Input from \"../UI/Input\";\nimport Flex from \"../UI/Wrappers/Flex\";\nimport Button from \"../UI/Buttons/Button\";\nimport Spinner from \"../UI/Spinner\";\n\nexport class NewPageForm extends Component {\n  state = {\n    title: \"\",\n    checked: false,\n    selectVal: null\n  };\n\n  componentDidMount() {\n    if (this.props.navigationItems !== null) {\n      // this.setState({selectVal: this.props.navigationItems[0].title})\n      let title = \"\";\n      for (var prop in this.props.navigationItems) {\n        title = this.props.navigationItems[prop].title;\n        break;\n      }\n\n      this.setState({ selectVal: title });\n    }\n  }\n\n  handleCheckbox = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  onSelectChange = event => {\n    this.setState({ selectVal: event.target.value });\n  };\n\n  onInputChange = event => {\n    const { value, name } = event.target;\n    const scrubbedVal = value.replace(/[^\\w\\s]/gi, \"\");\n\n    this.setState({ [name]: scrubbedVal });\n  };\n\n  render() {\n    console.log(\"newpageForm props\", this.props);\n    return (\n      <div>\n        <form>\n          <Input\n            inputtype=\"input\"\n            label=\"Page Title\"\n            name=\"title\"\n            value={this.state.title}\n            onChange={this.onInputChange}\n          />\n          {this.props.navigationItems !== null && (\n            <div>\n              <Input\n                inputtype=\"checkbox\"\n                sideLabel=\"Is this a dropdown SubPage\"\n                checked={this.state.checked}\n                handleChange={this.handleCheckbox}\n              />\n              <br />\n              {this.state.checked && (\n                <Input\n                  inputtype=\"select\"\n                  value={this.state.selectVal}\n                  label=\"Choose the parent page for this Subpage\"\n                  items={this.props.navigationItems}\n                  onSelectChange={this.onSelectChange}\n                />\n              )}\n            </div>\n          )}\n        </form>\n        <Flex justifyContent=\"flex-end\" margin=\"5px\">\n          <Button onClick={this.props.handleClose}>Cancel</Button>\n          <Button\n            onClick={() => this.props.handleSubmit(this.state)}\n            disabled={this.state.title === \"\" ? true : false}\n          >\n            Confirm\n          </Button>\n          {this.props.loading && <Spinner />}\n        </Flex>\n      </div>\n    );\n  }\n}\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//       //updateNewPageData: () => dispatch(actions.newPageData()),\n//   }\n// }\n\n//export default connect(null, mapDispatchToProps)(NewPageForm)\nexport default NewPageForm;\n","import React, { Component } from \"react\";\n\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport styled from \"styled-components\";\n\nclass TitlebarGridList extends Component {\n  state = {\n    columns: 5,\n    spacing: 20,\n    activeIndex: null,\n    selectedValue: \"\",\n    selectedName: \"\"\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.handleResize);\n    this.handleResize();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n\n  handleResize = () => {\n    const windowSize = window.innerWidth;\n    const columns = (windowSize > 768 && 5) || (windowSize <= 480 && 1) || 3;\n    const spacing = (windowSize > 768 && 20) || 8;\n\n    this.setState({\n      columns,\n      spacing\n    });\n  };\n\n  handleSelect = (event, index, tile) => {\n    this.props.selectedImage(index, tile);\n  };\n\n  render() {\n    const { tileData } = this.props;\n    if (!tileData || !tileData.length) return <div />;\n\n    return (\n      <StyledGrid>\n        <GridList\n          cellHeight={180}\n          className=\"gridList\"\n          cols={this.state.columns}\n          spacing={this.state.spacing}\n        >\n          <GridListTile\n            key=\"Subheader\"\n            cols={this.state.columns}\n            style={{ height: \"auto\" }}\n          >\n            <ListSubheader component=\"div\">\n              This is where your current websites images located.\n            </ListSubheader>\n          </GridListTile>\n          {tileData.map((tile, index) => {\n            const gridTileClass =\n              this.props.selectedIndex === index ? \"media active\" : \"media\";\n\n            return (\n              <GridListTile\n                key={tile.title}\n                className={gridTileClass}\n                onClick={e => this.handleSelect(e, index, tile)}\n              >\n                <img src={tile.img} alt={tile.title} />\n                <GridListTileBar\n                  title={tile.title}\n                  actionIcon={\n                    !this.props.isModal ? (\n                      <IconButton\n                        className=\"gridIcon\"\n                        onClick={() =>\n                          this.props.deleteImage(tile.img, tile.title)\n                        }\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    ) : (\n                      false\n                    )\n                  }\n                />\n              </GridListTile>\n            );\n          })}\n        </GridList>\n      </StyledGrid>\n    );\n  }\n}\n\nconst StyledGrid = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  /* justify-content: space-around; */\n  overflow: hidden;\n  margin: 20px 0;\n  padding: 10px;\n\n  .gridlist {\n    width: 100%;\n    height: 450px;\n  }\n\n  .media {\n    padding: 3px;\n    cursor: pointer;\n    -webkit-transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n    -moz-transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n    -ms-transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n    -o-transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n    transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n  }\n\n  .media.active {\n    border: 1px solid #09c;\n    border-radius: 5px;\n    box-shadow: 1px 1px 7px rgba(0, 200, 204, 0.7);\n    outline: none;\n  }\n\n  .gridIcon {\n    color: rgba(255, 255, 255, 0.54);\n  }\n`;\n\nexport default TitlebarGridList;\n","import React, { Component } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/storage\";\n\nimport classNames from \"classnames\";\n\nimport styled from \"styled-components\";\nimport Button from \"../../../components/UI/Buttons/Button\";\nimport Input from \"../../../components/UI/Input\";\nimport Flex from \"../../../components/UI/Wrappers/Flex\";\nimport Box from \"../../../components/UI/Wrappers/Box\";\nimport Modal from \"../../../components/UI/Modal\";\nimport Spinner from \"../../../components/UI/Spinner\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ImgGridList from \"./ImgGridList\";\n\nclass Media extends Component {\n  state = {\n    uploadOpen: false,\n    error: null,\n    customURL: false,\n    customURLtext: \"\",\n    activeIndex: null,\n    selectedValue: \"\",\n    selectedName: \"\",\n    deleteImgOpen: false\n  };\n\n  componentDidMount() {\n    console.log(\"mounted\");\n    this.getImageUrls();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.currentImages === null) return;\n\n    if (\n      this.props.currentImages !== prevProps.currentImages ||\n      this.props.isAuthenticated !== prevProps.isAuthenticated\n    ) {\n      this.getImageUrls();\n    }\n  }\n\n  getImageUrls = () => {\n    const that = this;\n    let imageContainer = [];\n    let imageCount = Object.keys(this.props.currentImages).length;\n    let returnedCount = 0;\n    const siteName = process.env.REACT_APP_SITENAME;\n\n    let storageRef = firebase.storage().ref();\n\n    Object.keys(this.props.currentImages).map((key, i) => {\n      const img = this.props.currentImages[key];\n      return storageRef\n        .child(`${siteName}/${img}`)\n        .getDownloadURL()\n        .then(url => {\n          imageContainer = [...imageContainer, { title: img, img: url, key }];\n          returnedCount++;\n\n          if (imageCount === returnedCount) {\n            that.props.setMediaImages(imageContainer);\n          }\n        })\n        .catch(error => {\n          // Handle any errors\n          console.log(error);\n        });\n    });\n  };\n\n  onDrop = (acceptedFiles, rejectedFiles) => {\n    // Do something with files\n    console.log(\"accepted\", acceptedFiles);\n    console.log(\"rejected\", rejectedFiles);\n    if (rejectedFiles.length !== 0) {\n      this.setState({ error: \"Rejected upload, incompatable file detected\" });\n      return;\n    }\n    const siteName = process.env.REACT_APP_SITENAME;\n    const user = firebase.auth().currentUser;\n\n    if (user) {\n      console.log(\"user is signed in\");\n      const file = acceptedFiles[0];\n      if (this.checkFileAlreadyExists(file)) {\n        this.setState({\n          error: `${\n            file.name\n          } already exists, please remove the old image first`\n        });\n        return;\n      }\n      firebase\n        .storage()\n        .ref()\n        .child(`${siteName}/${file.name}`)\n        .put(file)\n        .then(snapshot => {\n          console.log(\"Uploaded a blob or file!\");\n          console.log(snapshot);\n          this.addImageRefToDb(file);\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    } else {\n      // No user is signed in.\n      console.log(\" No user is signed in.\");\n      this.props.isTimedOut();\n    }\n  };\n\n  checkFileAlreadyExists = file => {\n    if (this.props.currentImages === null) return;\n\n    \n\n    const findImageRef = Object.keys(this.props.currentImages).filter(\n      (key, i) => {\n        const img = this.props.currentImages[key];\n        return img === file.name;\n      }\n    );\n\n    return !findImageRef.length ? false : true;\n  };\n  \n\n  addImageRefToDb = file => {\n    const siteName = process.env.REACT_APP_SITENAME;\n\n    var newPostKey = firebase\n      .database()\n      .ref()\n      .child(`${siteName}/site/images`)\n      .push().key;\n    var updates = { [newPostKey]: file.name };\n    const that = this;\n\n    return firebase\n      .database()\n      .ref()\n      .child(`${siteName}/site/images`)\n      .update(updates, function(error) {\n        if (error) {\n          // The write failed...\n          console.log(\"image ref in db write failed...\", error);\n        } else {\n          // Data saved successfully!\n          console.log(\"image ref in db saved successfully\");\n          that.props.refreshState();\n        }\n      });\n  };\n\n  selectedImage = (index, tile) => {\n    this.setState({\n      customURLtext: \"\",\n      activeIndex: index,\n      selectedValue: tile.img,\n      selectedName: tile.title\n    });\n  };\n\n  handleCustomURL = event => {\n    this.setState({\n      customURLtext: event.target.value,\n      activeIndex: null,\n      selectedValue: \"\",\n      selectedName: \"\"\n    });\n  };\n\n  confirmImage = () => {\n    const { customURLtext, selectedValue } = this.state;\n    const { tabItemReference } = this.props;\n    let image = customURLtext ? customURLtext : selectedValue;\n\n    this.props.onChangePageState(\n      { name: tabItemReference[0].name, value: image },\n      tabItemReference[1],\n      tabItemReference[2]\n    );\n    this.props.handleClose();\n  };\n\n  deleteImage = (imgUrl, name) => {\n    console.log(imgUrl, name);\n    this.setState({ deleteImgOpen: true });\n  };\n\n  confirmDelete = () => {\n    console.log(this.state, this.props);\n    const that = this;\n    const siteName = process.env.REACT_APP_SITENAME;\n\n    const img = this.props.imageURLs.find(\n      img => img.title === this.state.selectedName\n    );\n    let storageRef = firebase.storage().ref();\n\n    console.log(\"pre delete\");\n    firebase\n      .database()\n      .ref()\n      .child(`${siteName}/site/images/${img.key}`)\n      .remove()\n      .then(() => {\n        console.log(\"db delete succeeded!\");\n        storageRef\n          .child(`${siteName}/${img.title}`)\n          .delete()\n          .then(function() {\n            // File deleted successfully\n            console.log(\"storage img deleted\");\n            that.setState({ deleteImgOpen: false });\n            that.props.refreshState();\n          })\n          .catch(function(error) {\n            // Uh-oh, an error occurred!\n            console.log(\"storage error\", error);\n          });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  handleUploadOpen = () => {\n    this.setState({ uploadOpen: !this.state.uploadOpen });\n  };\n\n  render() {\n    console.log(\"media props\", this.props);\n    const {\n      error,\n      uploadOpen,\n      customURL,\n      activeIndex,\n      customURLtext,\n      selectedName,\n      selectedValue\n    } = this.state;\n    const { imageURLs, currentImages } = this.props;\n\n    let dropZone = null;\n    let mediaTemplate = null;\n    let noMediaMessage = null;\n\n    if (imageURLs.length === 0 && currentImages) {\n      noMediaMessage = (\n        <div>\n          <p>\n            <i>\n              Loading media, if nothing appears after ten seconds. Please\n              refresh the page{\" \"}\n            </i>\n          </p>\n          <Spinner />\n        </div>\n      );\n    } else if (currentImages === null) {\n      noMediaMessage = (\n        <div>\n          <p>\n            <i>\n              Here is where you can add images to your website, Click upload\n              media to create your media library\n            </i>\n          </p>\n        </div>\n      );\n    }\n\n    if (uploadOpen && !this.props.isModal) {\n      dropZone = (\n        <Dropzone onDrop={this.onDrop} multiple={false} accept=\"image/*\">\n          {({ getRootProps, getInputProps, isDragActive }) => {\n            return (\n              <StyledDropArea\n                {...getRootProps()}\n                className={classNames(\"dropzone\", {\n                  \"dropzone--isActive\": isDragActive\n                })}\n              >\n                <input {...getInputProps()} />\n                {isDragActive ? (\n                  <p>Drop files here...</p>\n                ) : (\n                  <p>\n                    Try dropping some files here, or click to select files to\n                    upload.\n                  </p>\n                )}\n              </StyledDropArea>\n            );\n          }}\n        </Dropzone>\n      );\n    }\n\n    if (!this.props.isModal) {\n      mediaTemplate = (\n        <div>\n          {noMediaMessage}\n          <Button onClick={this.handleUploadOpen}>\n            {uploadOpen ? \"Close DropZone\" : \"Upload Media\"}\n          </Button>\n          {dropZone}\n          {error && <div>{error}</div>}\n          <Paper elevation={7}>\n            <ImgGridList\n              tileData={this.props.imageURLs}\n              isModal={false}\n              selectedIndex={activeIndex}\n              selectedImage={this.selectedImage}\n              deleteImage={this.deleteImage}\n            />\n          </Paper>\n        </div>\n      );\n    } else {\n      const selectedLabel = `Current Selection:  ${selectedName}`;\n      mediaTemplate = (\n        <IsMediaModal>\n          {noMediaMessage}\n          <Flex>\n            <Box opacity={customURL}>\n              <Button\n                onClick={() => {\n                  this.setState({ customURL: false });\n                }}\n              >\n                Use Media Library\n              </Button>\n            </Box>\n            <h2>OR ..</h2>\n            <Box opacity={!customURL}>\n              <Button\n                onClick={() => {\n                  this.setState({ customURL: true });\n                }}\n              >\n                {\" \"}\n                {!customURL ? \"Use\" : \"Close\"} custom URL location?\n              </Button>\n            </Box>\n          </Flex>\n          {/* <Fade in={customURL}> */}\n          {customURL ? (\n            <Input\n              inputtype=\"input\"\n              label=\"If you want to use an image stored elsewhere, enter the Url address below\"\n              value={customURLtext}\n              onChange={this.handleCustomURL}\n            />\n          ) : (\n            <div>\n              <Paper elevation={5}>\n                <ImgGridList\n                  tileData={this.props.imageURLs}\n                  isModal={true}\n                  selectedIndex={activeIndex}\n                  selectedImage={this.selectedImage}\n                />\n              </Paper>\n              <Input\n                inputtype=\"input\"\n                label={`${\n                  selectedValue ? selectedLabel : \"Select Media Image URL above\"\n                }`}\n                value={selectedValue}\n                disabled={true}\n                placeholder=\"No Media image selected\"\n              />\n            </div>\n          )}\n          {/* </Fade> */}\n          <Divider />\n          <br />\n          <Flex>\n            <Button onClick={this.props.handleClose}>Cancel</Button>\n            <Button onClick={this.confirmImage}>Confirm Image</Button>\n          </Flex>\n          <br />\n        </IsMediaModal>\n      );\n    }\n\n    return (\n      <>\n        {mediaTemplate}\n        <Modal\n          open={this.state.deleteImgOpen}\n          handleClose={() => this.setState({ deleteImgOpen: false })}\n          title=\"Delete image\"\n          description={`Are you sure you would like to delete the image ${\n            this.state.selectedName\n          }. \\n Please note that anywhere this image is used on the website will no longer work once the image is deleted.`}\n        >\n          <Flex>\n            <Button onClick={this.confirmDelete}>Confirm Delete</Button>\n            <Button onClick={() => this.setState({ deleteImgOpen: false })}>\n              Cancel\n            </Button>\n          </Flex>\n        </Modal>\n      </>\n    );\n  }\n}\n\nconst StyledDropArea = styled.div`\n  border-style: dotted;\n  padding: 5px 20px;\n  margin: 20px 5px;\n  cursor: pointer;\n\n  /* desktop */\n  @media (min-width: 500px) {\n    min-width: 455px;\n  }\n`;\n\nconst IsMediaModal = styled.div`\n  margin-top: -40px;\n`;\n\nexport default Media;\n","import React, { Component } from \"react\";\n\nimport Input from \"../../../components/UI/Input\";\nimport Button from \"../../../components/UI/Buttons/Button\";\nimport Flex from \"../../../components/UI/Wrappers/Flex\";\nimport Grid from \"../../../components/UI/Wrappers/Grid\";\nimport Spinner from \"../../../components/UI/Spinner\";\n\nimport styled from \"styled-components\";\n\nclass Template extends Component {\n  handleChange = event => {\n    event.preventDefault();\n    this.props.changeTemplateState(event.target, \"template\", null);\n  };\n\n  handlesubmit = event => {\n    event.preventDefault();\n    const siteName = process.env.REACT_APP_SITENAME;\n\n    const url = `/${siteName}/site/template`;\n    this.props.templateChangeSubmit(url, this.props.template);\n  };\n\n  handleCheckbox = check => event => {\n    console.log(check, event.target.checked);\n    const newevent = {\n      name: event.target.name,\n      value: event.target.checked\n    };\n    this.props.changeTemplateState(newevent, \"template\", null);\n  };\n\n  handleMediaModal = event => {\n    event.preventDefault();\n    this.props.openMediaModal(event.target, \"template\", null);\n  };\n\n  clearInput = inputName => {\n    const event = { name: inputName, value: \"\" };\n    this.props.changeTemplateState(event, \"template\", null);\n  };\n\n  render() {\n    if (!this.props.template) return <div />;\n    //console.log('templateProps', this.props)\n    const buttonStyle = [{ value: \"contained\" }, { value: \"outlined\" }];\n    const {\n      navButtons,\n      siteButtons,\n      transparentHeader,\n      navLightTheme,\n      siteLogo,\n      version\n    } = this.props.template;\n\n    return (\n      <StyledTemplate>\n        <Flex>\n          <Input\n            inputtype=\"checkbox\"\n            sideLabel=\"Is the header toolbar transparent\"\n            name=\"transparentHeader\"\n            checked={transparentHeader}\n            handleChange={this.handleCheckbox}\n          />\n          <Input\n            inputtype=\"checkbox\"\n            sideLabel=\"Use Light theme for navigation Bar\"\n            name=\"navLightTheme\"\n            checked={navLightTheme}\n            handleChange={this.handleCheckbox}\n          />\n        </Flex>\n        <Input\n          inputtype=\"inputSelector\"\n          label=\"Website Logo\"\n          name=\"siteLogo\"\n          value={siteLogo}\n          onChange={this.handleChange}\n          onClick={this.handleMediaModal}\n          clearInput={this.clearInput}\n        />\n        <br />\n        <Grid cols=\"25% 25%\" colsLarge={\"35% 35%\"} colsMed={\"50% 50%\"}>\n          <Input\n            inputtype=\"select\"\n            label=\"Header Navigation button style\"\n            name=\"navButtons\"\n            value={navButtons}\n            items={buttonStyle}\n            onSelectChange={this.handleChange}\n          />\n          <Input\n            inputtype=\"select\"\n            label=\"Webpage button style\"\n            name=\"siteButtons\"\n            value={siteButtons}\n            items={buttonStyle}\n            onSelectChange={this.handleChange}\n          />\n          <Button variant={navButtons}>\n            {navButtons === \"contained\" ? \"Contained Style\" : \"Outlined Style\"}\n          </Button>\n          <Button variant={siteButtons}>\n            {siteButtons === \"contained\" ? \"Contained Style\" : \"Outlined Style\"}\n          </Button>\n        </Grid>\n        <br />\n        <hr />\n        <br />\n        <Flex justifyContent=\"flex-start\">\n          <Button margin=\"2px 5px 15px 20px\" onClick={this.handlesubmit}>\n            Update\n          </Button>\n          {this.props.isUpdating && <Spinner />}\n          {this.props.stateBackup && (\n            <Button\n              margin=\"2px 20px 15px 20px\"\n              onClick={this.props.cancelUpdate}\n            >\n              Undo Changes\n            </Button>\n          )}\n        </Flex>\n      </StyledTemplate>\n    );\n  }\n}\n\nconst StyledTemplate = styled.div`\n  width: 100%;\n`;\n\nexport default Template;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport Input from \"../../../components/UI/Input\";\nimport Button from \"../../../components/UI/Buttons/Button\";\nimport Flex from \"../../../components/UI/Wrappers/Flex\";\nimport Grid from \"../../../components/UI/Wrappers/Grid\";\nimport Box from \"../../../components/UI/Wrappers/Box\";\nimport Spinner from \"../../../components/UI/Spinner\";\nimport Minimizer from \"../../../components/UI/Wrappers/Minimizer\";\n\nimport Dashboard from \"../../Dashboard/Dashboard\";\n\nclass Homepage extends Component {\n  state = {\n    previewOpen: false\n  };\n\n  handleChange = event => {\n    event.preventDefault();\n    this.props.changeHomepageState(event.target, \"home\", null);\n  };\n\n  handlesubmit = event => {\n    event.preventDefault();\n    const siteName = process.env.REACT_APP_SITENAME;\n\n    const url = `/${siteName}/site/home/content`;\n    this.props.homepageChangeSubmit(url, this.props.homePage.content);\n  };\n\n  handleCheckbox = check => event => {\n    console.log(check, event.target.checked);\n    const newevent = {\n      name: event.target.name,\n      value: event.target.checked\n    };\n    this.props.changeHomepageState(newevent, \"home\", null);\n  };\n\n  handleMediaModal = event => {\n    event.preventDefault();\n    this.props.openMediaModal(event.target, \"home\", null);\n  };\n\n  handleColourPicker = event => {\n    this.props.changeHomepageState(event.target, \"home\", null);\n  };\n\n  clearInput = inputName => {\n    const event = { name: inputName, value: \"\" };\n    this.props.changeHomepageState(event, \"home\", null);\n  };\n\n  render() {\n    if (!this.props.homePage) return <div />;\n    const positionArray = [\n      { value: \"Top\" },\n      { value: \"Middle\" },\n      { value: \"Bottom\" }\n    ];\n    const floatArray = [{ value: \"left\" }, { value: \"right\" }];\n\n    const {\n      topBanner,\n      topBannerHalfwidth,\n      topBannerImgSize,\n      topBannerHWbackImg,\n      topBannerHWBackColour,\n      topBannerTxtRightSide,\n      topBannerTxtLightTheme,\n      topBannerLogo,\n      topBannerfade,\n      topBannerTitle,\n      topBannerSubtitle,\n      topBannerDescription,\n      topBannerBtnText,\n      topBannerLink,\n      midBanner,\n      midBannerHalfwidth,\n      midBannerImgSize,\n      midBannerHWbackImg,\n      midBannerHWBackColour,\n      midBannerTxtRightSide,\n      midBannerTxtLightTheme,\n      midBannerLogo,\n      midBannerfade,\n      midBannerTitle,\n      midBannerSubtitle,\n      midBannerDescription,\n      midBannerBtnText,\n      midBannerLink,\n      bottomBanner,\n      mainText,\n      mainTextPosition,\n      mainTextCenterTitle,\n      mainTextRightSide,\n      mainTextBackColour,\n      mainTextImg,\n      mainTextImgAlign,\n      mainTextImgWidth,\n      mainTextImgHeight\n    } = this.props.homePage.content;\n    console.log(\"Homepage Props\", this.props);\n\n    return (\n      <div className=\"fullwidth\">\n        <StyledHomePage>\n          <div>\n            <Input\n              inputtype=\"inputSelector\"\n              label={`${\n                topBannerHalfwidth\n                  ? \"Top Banner Image (Inside Banner)\"\n                  : \"Top Banner Image\"\n              }`}\n              name=\"topBanner\"\n              value={topBanner}\n              onChange={this.handleChange}\n              onClick={this.handleMediaModal}\n              clearInput={this.clearInput}\n            />\n            {topBanner && (\n              <Minimizer>\n                <Box>\n                  <Flex>\n                    <Input\n                      inputtype=\"checkbox\"\n                      sideLabel=\"Use the Top Banner image inside the Banner \"\n                      name=\"topBannerHalfwidth\"\n                      checked={topBannerHalfwidth}\n                      handleChange={this.handleCheckbox}\n                    />\n                  </Flex>\n                  {topBannerHalfwidth && (\n                    <>\n                      <Input\n                        inputtype=\"inputSelector\"\n                        label=\"Banner Background Image\"\n                        name=\"topBannerHWbackImg\"\n                        value={topBannerHWbackImg}\n                        onChange={this.handleChange}\n                        onClick={this.handleMediaModal}\n                        clearInput={this.clearInput}\n                      />\n                      <Flex>\n                        <Input\n                          inputtype=\"input\"\n                          type=\"number\"\n                          label=\"Banner Image Size\"\n                          name=\"topBannerImgSize\"\n                          value={topBannerImgSize}\n                          onChange={this.handleChange}\n                        />\n                        <Input\n                          inputtype=\"inputColourPicker\"\n                          label=\"Banner Background Colour\"\n                          name=\"topBannerHWBackColour\"\n                          value={topBannerHWBackColour}\n                          changeColour={this.handleColourPicker}\n                          pageId={\"home\"}\n                        />\n                      </Flex>\n                    </>\n                  )}\n                  <Flex>\n                    <Input\n                      inputtype=\"checkbox\"\n                      sideLabel=\"Banner Text Right Side\"\n                      name=\"topBannerTxtRightSide\"\n                      checked={topBannerTxtRightSide}\n                      handleChange={this.handleCheckbox}\n                    />\n                    <Input\n                      inputtype=\"checkbox\"\n                      sideLabel=\"Banner Light Text Color\"\n                      name=\"topBannerTxtLightTheme\"\n                      checked={topBannerTxtLightTheme}\n                      handleChange={this.handleCheckbox}\n                    />\n                  </Flex>\n                  <Flex>\n                    <Input\n                      inputtype=\"checkbox\"\n                      sideLabel=\"Use Logo in banner\"\n                      name=\"topBannerLogo\"\n                      checked={topBannerLogo}\n                      handleChange={this.handleCheckbox}\n                    />\n                    <Input\n                      inputtype=\"checkbox\"\n                      sideLabel=\"Banner content fade in effect\"\n                      name=\"topBannerfade\"\n                      checked={topBannerfade}\n                      handleChange={this.handleCheckbox}\n                    />\n                  </Flex>\n                  <Input\n                    inputtype=\"input\"\n                    label=\"Banner Title\"\n                    name=\"topBannerTitle\"\n                    value={topBannerTitle}\n                    onChange={this.handleChange}\n                  />\n                  <Input\n                    inputtype=\"input\"\n                    label=\"Banner Subtitle\"\n                    name=\"topBannerSubtitle\"\n                    value={topBannerSubtitle}\n                    onChange={this.handleChange}\n                  />\n                  <Input\n                    inputtype=\"input\"\n                    label=\"Banner Description\"\n                    name=\"topBannerDescription\"\n                    value={topBannerDescription}\n                    onChange={this.handleChange}\n                  />\n                  <Flex>\n                    <Input\n                      inputtype=\"input\"\n                      label=\"Banner Button Text\"\n                      name=\"topBannerBtnText\"\n                      value={topBannerBtnText}\n                      onChange={this.handleChange}\n                    />\n                    <Input\n                      inputtype=\"select\"\n                      label=\"Banner Link\"\n                      name=\"topBannerLink\"\n                      value={topBannerLink}\n                      items={this.props.availableRoutes}\n                      onSelectChange={this.handleChange}\n                    />\n                  </Flex>\n                </Box>\n              </Minimizer>\n            )}\n            <Input\n              inputtype=\"inputSelector\"\n              label={`${\n                midBannerHalfwidth\n                  ? \"Middle Banner Image (Inside Banner)\"\n                  : \"Middle Banner Image\"\n              }`}\n              name=\"midBanner\"\n              value={midBanner}\n              onChange={this.handleChange}\n              onClick={this.handleMediaModal}\n              clearInput={this.clearInput}\n            />\n            {midBanner && (\n              <Minimizer>\n                <Box>\n                  <Flex>\n                    <Input\n                      inputtype=\"checkbox\"\n                      sideLabel=\"Use the Middle Banner image inside the Banner\"\n                      name=\"midBannerHalfwidth\"\n                      checked={midBannerHalfwidth}\n                      handleChange={this.handleCheckbox}\n                    />\n                  </Flex>\n                  {midBannerHalfwidth && (\n                    <>\n                      <Input\n                        inputtype=\"inputSelector\"\n                        label=\"Banner Background Image\"\n                        name=\"midBannerHWbackImg\"\n                        value={midBannerHWbackImg}\n                        onChange={this.handleChange}\n                        onClick={this.handleMediaModal}\n                        clearInput={this.clearInput}\n                      />\n                      <Flex>\n                        <Input\n                          inputtype=\"input\"\n                          type=\"number\"\n                          label=\"Banner Image Size\"\n                          name=\"midBannerImgSize\"\n                          value={midBannerImgSize}\n                          onChange={this.handleChange}\n                        />\n                        <Input\n                          inputtype=\"inputColourPicker\"\n                          label=\"Banner Background Colour\"\n                          name=\"midBannerHWBackColour\"\n                          value={midBannerHWBackColour}\n                          changeColour={this.handleColourPicker}\n                          pageId={\"home\"}\n                        />\n                      </Flex>\n                    </>\n                  )}\n                  <Flex>\n                    <Input\n                      inputtype=\"checkbox\"\n                      sideLabel=\"Banner Text Right Side\"\n                      name=\"midBannerTxtRightSide\"\n                      checked={midBannerTxtRightSide}\n                      handleChange={this.handleCheckbox}\n                    />\n                    <Input\n                      inputtype=\"checkbox\"\n                      sideLabel=\"Banner Light Text Color\"\n                      name=\"midBannerTxtLightTheme\"\n                      checked={midBannerTxtLightTheme}\n                      handleChange={this.handleCheckbox}\n                    />\n                  </Flex>\n                  <Flex>\n                    <Input\n                      inputtype=\"checkbox\"\n                      sideLabel=\"Use Logo in banner\"\n                      name=\"midBannerLogo\"\n                      checked={midBannerLogo}\n                      handleChange={this.handleCheckbox}\n                    />\n                    <Input\n                      inputtype=\"checkbox\"\n                      sideLabel=\"Banner content fade in effect\"\n                      name=\"midBannerfade\"\n                      checked={midBannerfade}\n                      handleChange={this.handleCheckbox}\n                    />\n                  </Flex>\n                  <Input\n                    inputtype=\"input\"\n                    label=\"Banner Title\"\n                    name=\"midBannerTitle\"\n                    value={midBannerTitle}\n                    onChange={this.handleChange}\n                  />\n                  <Input\n                    inputtype=\"input\"\n                    label=\"Banner Subtitle\"\n                    name=\"midBannerSubtitle\"\n                    value={midBannerSubtitle}\n                    onChange={this.handleChange}\n                  />\n                  <Input\n                    inputtype=\"input\"\n                    label=\"Banner Description\"\n                    name=\"midBannerDescription\"\n                    value={midBannerDescription}\n                    onChange={this.handleChange}\n                  />\n                  <Flex>\n                    <Input\n                      inputtype=\"input\"\n                      label=\"Banner Button Text\"\n                      name=\"midBannerBtnText\"\n                      value={midBannerBtnText}\n                      onChange={this.handleChange}\n                    />\n                    <Input\n                      inputtype=\"select\"\n                      label=\"Banner Link\"\n                      name=\"midBannerLink\"\n                      value={midBannerLink}\n                      items={this.props.availableRoutes}\n                      onSelectChange={this.handleChange}\n                    />\n                  </Flex>\n                </Box>\n              </Minimizer>\n            )}\n            <Input\n              inputtype=\"textarea\"\n              label=\"Main Body Text\"\n              name=\"mainText\"\n              value={mainText}\n              onChange={this.handleChange}\n            />\n            <Minimizer>\n              <Box>\n                <Flex>\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Center Header text\"\n                    name=\"mainTextCenterTitle\"\n                    checked={mainTextCenterTitle}\n                    handleChange={this.handleCheckbox}\n                  />\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Align Text Right Side\"\n                    name=\"mainTextRightSide\"\n                    checked={mainTextRightSide}\n                    handleChange={this.handleCheckbox}\n                  />\n                </Flex>\n                <Input\n                  inputtype=\"select\"\n                  label=\"Main Text Page Position\"\n                  name=\"mainTextPosition\"\n                  value={mainTextPosition}\n                  items={positionArray}\n                  onSelectChange={this.handleChange}\n                />\n                <Input\n                  inputtype=\"inputSelector\"\n                  label=\"Add a Small Image\"\n                  name=\"mainTextImg\"\n                  value={mainTextImg}\n                  onChange={this.handleChange}\n                  onClick={this.handleMediaModal}\n                  clearInput={this.clearInput}\n                />\n                <Grid cols={\"33% 33% 33%\"} margin={\"0 15px 0 0\"}>\n                  <Input\n                    inputtype=\"select\"\n                    label=\"Image align position\"\n                    name=\"mainTextImgAlign\"\n                    value={mainTextImgAlign}\n                    items={floatArray}\n                    onSelectChange={this.handleChange}\n                  />\n                  <Input\n                    inputtype=\"input\"\n                    type=\"number\"\n                    label=\"Banner Image Width\"\n                    name=\"mainTextImgWidth\"\n                    value={mainTextImgWidth || 200}\n                    onChange={this.handleChange}\n                  />\n                  <Input\n                    inputtype=\"input\"\n                    type=\"number\"\n                    label=\"Banner Image Height\"\n                    name=\"mainTextImgHeight\"\n                    value={mainTextImgHeight || 135}\n                    onChange={this.handleChange}\n                  />\n                </Grid>\n                <Input\n                  inputtype=\"inputColourPicker\"\n                  label=\"Banner Background Colour\"\n                  name=\"mainTextBackColour\"\n                  value={mainTextBackColour}\n                  changeColour={this.handleColourPicker}\n                  pageId={\"home\"}\n                />\n              </Box>\n            </Minimizer>\n          </div>\n          <Preview>\n            <Dashboard\n              pageInfo={this.props.homePage}\n              {...this.props}\n              template={this.props.template}\n              overlayBlocker={true}\n            />\n          </Preview>\n        </StyledHomePage>\n        <Flex justifyContent=\"flex-start\">\n          <Button margin=\"2px 5px 15px 20px\" onClick={this.handlesubmit}>\n            Update\n          </Button>\n          {this.props.isUpdating && <Spinner />}\n          {this.props.stateBackup && (\n            <Button\n              margin=\"2px 20px 15px 20px\"\n              onClick={this.props.cancelUpdate}\n            >\n              Undo Changes\n            </Button>\n          )}\n        </Flex>\n      </div>\n    );\n  }\n}\n\nconst Preview = styled.div`\n  display: block;\n  zoom: 30%;\n  padding-top: 56px;\n  box-shadow: 2px 2px 2px;\n\n  @media (max-width: 500px) {\n    display: none;\n  }\n`;\n\nconst StyledHomePage = styled.div`\n  padding: 3vh;\n  display: grid;\n  grid-gap: 8px;\n  grid-template-columns: 65% 35%;\n`;\n\nexport default Homepage;\n","import React from \"react\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Chip from \"@material-ui/core/Chip\";\n\nimport styled from \"styled-components\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nclass MultiSelect extends React.Component {\n  state = {\n    name: []\n  };\n\n  handleChange = event => {\n    this.setState({ name: event.target.value });\n    if (this.props.handleChange) {\n      this.props.handleChange(event);\n    }\n  };\n\n  render() {\n    const { label, items, name, value, margin, width } = this.props;\n\n    return (\n      <StyledSelect margin={margin} width={width}>\n        <FormControl>\n          <InputLabel htmlFor=\"select-multiple-chip\">{label}</InputLabel>\n          <Select\n            multiple\n            value={value || this.state.name}\n            onChange={this.handleChange}\n            input={<Input id=\"select-multiple-chip\" />}\n            name={name}\n            renderValue={selected => (\n              <div className={\"chips\"}>\n                {selected.map(value => (\n                  <Chip key={value} label={value} className={\"chip\"} />\n                ))}\n              </div>\n            )}\n            MenuProps={MenuProps}\n          >\n            {items.map(name => (\n              <MenuItem key={name} value={name}>\n                {name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </StyledSelect>\n    );\n  }\n}\n\nconst StyledSelect = styled.div`\n    display: flex;\n    flex-wrap: wrap;    \n    margin: ${props => props.margin || \"8px\"};\n\n    div {\n      /* margin: ${props => props.margin || \"8px\"}; */\n      width: ${props => props.width || \"400px\"};\n      /* min-width: ${props => props.minwidth || \"200px\"}; */\n      max-width: ${props => props.minwidth || \"450px\"};\n\n      .chips {\n        min-width:auto;\n        display: flex;\n        flex-wrap: wrap;\n        \n\n        .chip{\n          margin: 2px;\n          flex-wrap: wrap;\n          width: auto;\n        }\n\n      }\n\n    }\n\n`;\n\nexport default MultiSelect;\n","import React from \"react\";\nimport Input from \"../../../../components/UI/Input\";\nimport Minimizer from \"../../../../components/UI/Wrappers/Minimizer\";\nimport Flex from \"../../../../components/UI/Wrappers/Flex\";\n\nimport MultiSelect from \"../../../../components/UI/MultiSelect\";\n\nconst ContactUsPlugin = props => {\n  if (!props.plugin) return <div />;\n\n  const { contactUsActive, contactUsPages, contactUsEmail } = props.plugin;\n  console.log(\"contact us settings props\", props);\n  return (\n    <div>\n      <Flex>\n        <Input\n          inputtype=\"checkbox\"\n          sideLabel=\"Contact Us Plugin\"\n          parentObj={props.parentObj}\n          name=\"contactUsActive\"\n          checked={contactUsActive}\n          handleChange={props.handleCheckbox}\n        />\n        {contactUsActive && (\n          <MultiSelect\n            label=\"Select the pages where this plugin is available\"\n            items={props.availableRoutes}\n            name=\"contactUsPages\"\n            value={contactUsPages}\n            handleChange={props.handleChange}\n            margin={\"0 10px 20px 15px\"}\n          />\n        )}\n      </Flex>\n\n      {contactUsActive && (\n        <Minimizer padding={\"20px\"}>\n          <div>\n            <Input\n              inputtype=\"input\"\n              label=\"Enter Business email where contact requests are received\"\n              parentObj={props.parentObj}\n              name=\"contactUsEmail\"\n              value={contactUsEmail}\n              onChange={props.handleChange}\n            />\n          </div>\n        </Minimizer>\n      )}\n    </div>\n  );\n};\n\nexport default ContactUsPlugin;\n","import React from \"react\";\nimport Input from \"../../../../components/UI/Input\";\nimport Minimizer from \"../../../../components/UI/Wrappers/Minimizer\";\nimport Flex from \"../../../../components/UI/Wrappers/Flex\";\n\nimport MultiSelect from \"../../../../components/UI/MultiSelect\";\n\nconst BookingPlugin = props => {\n    if (!props.plugin) return <div />;\n\n    const { bookingActive, bookingPages, bookingEmail, bookingForm, bookingCalendarID, bookingApiKey } = props.plugin;\n    console.log(\"booking settings props\", props);\n    return (\n        <div>\n            <Flex>\n                <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Booking Plugin\"\n                    parentObj={props.parentObj}\n                    name=\"bookingActive\"\n                    checked={bookingActive}\n                    handleChange={props.handleCheckbox}\n                />\n                {bookingActive && (\n                    <MultiSelect\n                        label=\"Select the pages where this plugin is available\"\n                        items={props.availableRoutes}\n                        name=\"bookingPages\"\n                        value={bookingPages}\n                        handleChange={props.handleChange}\n                        margin={\"0 10px 20px 15px\"}\n                    />\n                )}\n            </Flex>\n\n            {bookingActive && (\n                <Minimizer emptyHeight={\"200px\"} padding={\"20px\"}>\n                    <div>\n                        <Input\n                            inputtype=\"input\"\n                            label=\"Enter Business email where bookings are received\"\n                            parentObj={props.parentObj}\n                            name=\"bookingEmail\"\n                            value={bookingEmail}\n                            onChange={props.handleChange}\n                        />\n                        <Input\n                            inputtype=\"checkbox\"\n                            sideLabel=\"Include Contact form with booking calendar\"\n                            parentObj={props.parentObj}\n                            name=\"bookingForm\"\n                            checked={bookingForm}\n                            handleChange={props.handleCheckbox}\n                        />\n                        <Input\n                            inputtype=\"input\"\n                            label=\"Gmail Calendar Id\"\n                            parentObj={props.parentObj}\n                            name=\"bookingCalendarID\"\n                            value={bookingCalendarID}\n                            onChange={props.handleChange}\n                        />\n                        <Input\n                            inputtype=\"input\"\n                            label=\"Gmail Api Key\"\n                            parentObj={props.parentObj}\n                            name=\"bookingApiKey\"\n                            value={bookingApiKey}\n                            onChange={props.handleChange}\n                        />\n                    </div>\n                </Minimizer>\n            )}\n        </div>\n    );\n};\n\nexport default BookingPlugin;\n","import React, { Component } from \"react\";\n\nimport styled from \"styled-components\";\n\nimport Spinner from \"../../../components/UI/Spinner\";\nimport Flex from \"../../../components/UI/Wrappers/Flex\";\nimport Button from \"../../../components/UI/Buttons/Button\";\n\nimport ContactUsPlugin from \"./contactUsPlugin/ContactUsPlugin\";\nimport BookingPlugin from \"./bookingPlugin/BookingPlugin\";\n\nclass Plugins extends Component {\n  state = {\n    contactUsPlugin: false\n  };\n\n  accordianClick = name => {\n    this.setState({ [name]: !this.state[name] });\n  };\n\n  handleChange = (event, parentObj) => {\n    //event.preventDefault();\n    this.props.changePluginState(event.target, \"plugins\", parentObj);\n  };\n\n  handleCheckbox = (check, parentObj) => event => {\n    console.log(check, parentObj, event.target.checked);\n    const newevent = {\n      name: event.target.name,\n      value: event.target.checked\n    };\n    this.props.changePluginState(newevent, \"plugins\", parentObj);\n  };\n\n  handlesubmit = event => {\n    event.preventDefault();\n    const siteName = process.env.REACT_APP_SITENAME;\n\n    const url = `/${siteName}/site/plugins`;\n    this.props.pluginsChangeSubmit(url, this.props.plugins);\n  };\n\n  render() {\n    if (!this.props.plugins)\n      return (\n        <div>\n          <Spinner />\n        </div>\n      );\n\n    console.log(\"plugins props\", this.props);\n\n    let availableRoutes = this.props.availableRoutes.map(route => {\n      const value = route.value === \"/\" ? \"home\" : route.value;\n      let str = value.split(\"/\").pop();\n      return str;\n    });\n\n    availableRoutes.unshift(\"All Pages\");\n\n    return (\n      <div>\n        <StyledPlugins>\n          <ContactUsPlugin\n            plugin={this.props.plugins.contactUs}\n            name={\"contactUsPlugin\"}\n            parentObj=\"contactUs\"\n            availableRoutes={availableRoutes}\n            accordianClick={this.accordianClick}\n            handleCheckbox={this.handleCheckbox}\n            handleChange={e => this.handleChange(e, \"contactUs\")}\n          />\n          <br/><br/>\n          <BookingPlugin\n            plugin={this.props.plugins.booking}\n            name={\"bookingPlugin\"}\n            parentObj=\"booking\"\n            availableRoutes={availableRoutes}\n            accordianClick={this.accordianClick}\n            handleCheckbox={this.handleCheckbox}\n            handleChange={e => this.handleChange(e, \"booking\")}\n          />\n        </StyledPlugins>\n        <Flex justifyContent=\"flex-start\">\n          <Button margin=\"2px 5px 15px 20px\" onClick={this.handlesubmit}>\n            Update\n          </Button>\n          {this.props.isUpdating && <Spinner />}\n          {this.props.stateBackup && (\n            <Button\n              margin=\"2px 20px 15px 20px\"\n              onClick={this.props.cancelUpdate}\n            >\n              Undo Changes\n            </Button>\n          )}\n        </Flex>\n      </div>\n    );\n  }\n}\n\nconst StyledPlugins = styled.div`\n  width: 100%;\n`;\nexport default Plugins;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../store/actions/index\";\n\nimport Spinner from \"../../components/UI/Spinner\";\nimport Button from \"../../components/UI/Buttons/Button\";\nimport Input from \"../../components/UI/Input\";\nimport Flex from \"../../components/UI/Wrappers/Flex\";\n\nclass AuthModal extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.isAuthenticated !== prevProps.isAuthenticated) {\n      this.props.isTimedOut();\n    }\n  }\n\n  onFormChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  submitHandler = event => {\n    event.preventDefault();\n    this.props.onAuth(this.state.email, this.state.password, this.props.admin);\n  };\n\n  backToHome = () => {\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    console.log(\"AuthModal page props\", this.props);\n\n    let errorMessage = null;\n\n    if (this.props.error) {\n      // const errorCode={\n      //   EMAIL_NOT_FOUND: 'There is no user record corresponding to this email address',\n      //   INVALID_PASSWORD: 'The password entered was invalid - please try again',\n      //   USER_DISABLED: 'The user account has been disabled by an administrator.',\n      //   INVALID_EMAIL: 'The email address entered is invalid'\n      // }\n      errorMessage = (\n        // <p>{ errorCode[this.props.error.message] }</p>\n        <p>{this.props.error}</p>\n      );\n    }\n\n    return (\n      <div>\n        <div>Administrator Login</div>\n        <br />\n        <Input\n          inputtype=\"input\"\n          placeholder=\"email\"\n          name=\"email\"\n          value={this.state.email}\n          onChange={this.onFormChange}\n        />\n        <Input\n          inputtype=\"input\"\n          placeholder=\"password\"\n          name=\"password\"\n          value={this.state.password}\n          onChange={this.onFormChange}\n        />\n        {errorMessage}\n        <br />\n        <Flex>\n          <Button onClick={this.backToHome}>Cancel</Button>\n          <Button onClick={this.submitHandler}>Submit</Button>\n        </Flex>\n\n        {this.props.loading && <Spinner />}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    admin: state.mainState.admin,\n    isAuthenticated: state.auth.userId !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (email, password, admin) =>\n      dispatch(actions.auth(email, password, admin))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AuthModal);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../store/actions/index\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nimport styled from \"styled-components\";\n\nimport Accordian from \"../../components/UI/Accordian\";\nimport TabsMenu from \"./Navigation/TabsMenu\";\nimport Modal from \"../../components/UI/Modal\";\nimport Button from \"../../components/UI/Buttons/Button\";\nimport Toast from \"../../components/UI/Toast\";\nimport Flex from \"../../components/UI/Wrappers/Flex\";\n\nimport NewPageForm from \"../../components/Forms/NewPageForm\";\nimport Media from \"./media/Media\";\nimport Template from \"./template/Template\";\nimport Homepage from \"./homepage/Homepage\";\nimport Plugins from \"./plugins/Plugins\";\nimport AuthModal from \"../Auth/AuthModal\";\n\nclass Admin extends Component {\n  state = {\n    homepage_accordian: false,\n    navigation_accordian: false,\n    template_accordian: false,\n    media_accordian: false,\n\n    showSignIn: false,\n    newPageOpen: false,\n    deletePageModal: false,\n    pageToDelete: null,\n    openMediaModal: false,\n    mediaModalTabItemRef: [],\n    mediaImages: [],\n    newPageToast: null,\n    loading: false,\n    error: null\n  };\n\n  componentWillMount() {\n    console.log('adminPage - sitename', process.env.REACT_APP_SITENAME)\n\n    if (!this.props.isAuthenticated && process.env.NODE_ENV === \"production\"){\n      this.props.history.push('/authenticate-admin')\n    }\n\n    const user = firebase.auth().currentUser;\n\n    if (user) {\n      // User is signed in.\n      console.log(\"user is signed in\");\n    } else {\n      // No user is signed in.\n      console.log(\" No user is signed in.\");\n      // firebase.auth().signInWithCustomToken(token).catch(function(error) {\n      //     // Handle Errors here.\n      //     var errorCode = error.code;\n      //     var errorMessage = error.message;\n      //     // ...\n      // });\n    }\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isAuthenticated && !this.props.isAuthenticated && process.env.NODE_ENV === \"production\"){\n      this.props.history.push('/authenticate-admin')\n    }\n  }\n\n  logoutHandler = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(\n        function() {\n          console.log(\"Signed Out\");\n        },\n        function(error) {\n          console.error(\"Sign Out Error\", error);\n        }\n      );\n    this.props.onLogoutClick();\n  };\n\n  openMediaModal = (pageInfo, key, parentKey) => {\n    console.log(\"opneMedia Modal\", pageInfo, key, parentKey);\n    this.setState({\n      openMediaModal: true,\n      mediaModalTabItemRef: [pageInfo, key, parentKey]\n    });\n  };\n\n  closeMediaModal = () => {\n    this.setState({ openMediaModal: false });\n  };\n\n  setMediaImages = mediaImages => {\n    this.setState({ mediaImages });\n  };\n\n  handleNewPageButton = event => {\n    event.preventDefault();\n    this.setState({ newPageOpen: !this.state.newPageOpen });\n  };\n\n  submitNewPage = newPage_State => {\n    console.log(\"newPage_State\", newPage_State);\n    const { title, checked, selectVal } = newPage_State;\n    const { navigationItems } = this.props;\n    const siteName = process.env.REACT_APP_SITENAME\n\n    const route = title.replace(/ /g, \"-\").toLowerCase();\n\n    const defaultContent = {\n      id: Date.now(),\n      mainText: `This is your newly added ${title} page`\n    };\n    let url = `/${siteName}/site/navigationItems`;\n\n    let newPageObj = {\n      title,\n      route,\n      selected: false,\n      content: defaultContent\n    };\n\n    if (checked) {\n      // const subpageIndex = this.props.navigationItems.findIndex(page => page.title === selectVal);\n\n      let subpageIndex = null;\n      for (let key in navigationItems) {\n        if (navigationItems[key].title === selectVal) {\n          subpageIndex = key;\n        }\n      }\n\n      url = `/${siteName}/site/navigationItems/${subpageIndex}/dropdownPages`;\n\n      newPageObj = {\n        title,\n        route,\n        content: defaultContent\n      };\n    }\n\n    this.setState({ loading: true, error: null }, () => {\n      const that = this;\n      const newPostKey = firebase\n        .database()\n        .ref()\n        .child(url)\n        .push().key;\n      const newPage = { [newPostKey]: newPageObj };\n\n      firebase\n        .database()\n        .ref()\n        .child(url)\n        .update(newPage, function(err) {\n          if (err) {\n            // The write failed...\n            that.setState({\n              loading: false,\n              error: err.code,\n              newPageOpen: false,\n              showSignIn: true\n            });\n          } else {\n            // Data saved successfully!\n            console.log(\"new page added successfully!\");\n            that.setState({\n              loading: false,\n              error: null,\n              newPageOpen: false,\n              newPageToast: \"New Page added successfully\"\n            });\n            that.props.onInitWebsiteState();\n          }\n\n          // axios.post(url, newPageObj)\n          //   .then(response => {\n          //     console.log(response)\n          //     this.props.onInitWebsiteState()\n          //   })\n          //   .then(() =>{\n          //     this.setState({loading: false, error: null, newPageOpen: false, newPageToast: 'New Page added successfully' })\n          //   })\n          //   .then(() => {\n          //     setTimeout(() => {\n          //         this.setState({newPageToast: null});\n          //     }, 7000 );\n          //   })\n          //   .catch(err => {\n          //     console.log(err);\n          //     this.setState({loading: false, error: err.response.data.error, newPageOpen: false, showSignIn: true})\n        });\n    });\n  };\n\n  handleDeletePageModal = (pageId, parentId) => {\n    if (this.state.deletePageModal) {\n      this.setState({ deletePageModal: false, pageToDelete: null });\n    } else {\n      this.setState({\n        deletePageModal: true,\n        pageToDelete: { id: pageId, parentId: parentId }\n      });\n    }\n  };\n\n  submitDeletePage = () => {\n    console.log(this.state.pageToDelete);\n    const that = this;\n    const { id, parentId } = this.state.pageToDelete;\n    const siteName = process.env.REACT_APP_SITENAME;\n\n    let url = `/${siteName}/site/navigationItems/${id}`;\n\n    if (parentId) {\n      url = `/${siteName}/site/navigationItems/${parentId}/dropdownPages/${id}`;\n    }\n\n    firebase\n      .database()\n      .ref(url)\n      .remove()\n      .then(function() {\n        console.log(\"Remove succeeded.\");\n        that.props.onInitWebsiteState();\n        that.setState({ deletePageModal: false, pageToDelete: null });\n      })\n      .catch(function(error) {\n        console.log(\"Remove failed: \" + error.message);\n      });\n  };\n\n  updatePage = (eventTarget, key, parent) => {\n    console.log(eventTarget.value, key, parent);\n    this.props.onChangePageState(eventTarget, key, parent);\n  };\n\n  updatePageSubmit = (pageInfo, key, parentKey) => {\n    console.log(pageInfo, key, parentKey);\n    const siteName = process.env.REACT_APP_SITENAME;\n\n    const URL = !parentKey\n      ? `/${siteName}/site/navigationItems/${key}/content`\n      : `/${siteName}/site/navigationItems/${parentKey}/dropdownPages/${key}/content`;\n\n    const user = firebase.auth().currentUser;\n\n    if (user) {\n      // User is signed in.\n      console.log(\"user is signed in\");\n      this.props.onUpdatePageSubmit(URL, pageInfo);\n    } else {\n      // No user is signed in.\n      console.log(\" No user is signed in.\");\n      this.setState({\n        showSignIn: true,\n        error: \"Permission denied. Please sign in again to Re-authenticate\"\n      });\n    }\n  };\n\n  timedOutUser = () => {\n    const user = firebase.auth().currentUser;\n    if (user) {\n      // User is signed in\n      this.setState({ showSignIn: false });\n    } else {\n      // No user is signed in.\n      console.log(\" No user is signed in.\");\n      this.setState({ showSignIn: true });\n    }\n  };\n\n  accordianClick = name => {\n    this.setState({ [name]: !this.state[name] });\n  };\n\n  // this.props.addPage(url, newPageObj)\n\n  render() {\n    console.log(\"Admin Page props\", this.props);\n    const {\n      media_accordian,\n      template_accordian,\n      homepage_accordian,\n      navigation_accordian,\n      plugins_accordian\n    } = this.state;\n\n    return (\n      <StyledAdminPage>\n        <Flex justifyContent=\"space-between\">\n          <h1 className=\"admin-title\">Admin Page</h1>\n          <Button onClick={this.logoutHandler}>logout</Button>\n        </Flex>\n        <Modal\n          open={this.state.showSignIn}\n          title=\"You have been logged out\"\n          description=\"Your administrator session has expired you will need to log back in to continue\"\n        >\n          <AuthModal\n            history={this.props.history}\n            isTimedOut={this.timedOutUser}\n          />\n        </Modal>\n        <div>\n          <Accordian\n            title={\"Media\"}\n            name={\"media_accordian\"}\n            onClick={e => this.accordianClick(e)}\n          >\n            {media_accordian && (\n              <Media\n                isAuthenticated={this.props.isAuthenticated}\n                isTimedOut={this.timedOutUser}\n                currentImages={this.props.images}\n                refreshState={this.props.onInitWebsiteState}\n                isModal={false}\n                imageURLs={this.state.mediaImages}\n                setMediaImages={this.setMediaImages}\n              />\n            )}\n          </Accordian>\n          <br />\n\n          <Accordian\n            title={\"Template\"}\n            name={\"template_accordian\"}\n            onClick={e => this.accordianClick(e)}\n          >\n            {template_accordian && (\n              <Template\n                template={this.props.template}\n                changeTemplateState={this.props.onChangePageState}\n                templateChangeSubmit={this.props.onUpdatePageSubmit}\n                isUpdating={this.props.isUpdating}\n                isError={this.props.isError}\n                stateBackup={this.props.stateBackup}\n                cancelUpdate={this.props.onRevertChanges}\n                openMediaModal={this.openMediaModal}\n              />\n            )}\n          </Accordian>\n          <br />\n\n          <Accordian\n            title={\"Homepage\"}\n            name={\"homepage_accordian\"}\n            onClick={e => this.accordianClick(e)}\n          >\n            {homepage_accordian && (\n              <Homepage\n                homePage={this.props.home}\n                changeHomepageState={this.props.onChangePageState}\n                homepageChangeSubmit={this.props.onUpdatePageSubmit}\n                isUpdating={this.props.isUpdating}\n                isError={this.props.isError}\n                stateBackup={this.props.stateBackup}\n                cancelUpdate={this.props.onRevertChanges}\n                openMediaModal={this.openMediaModal}\n                availableRoutes={this.props.availableRoutes}\n                template={this.props.template}\n                plugins={this.props.plugins}\n              />\n            )}\n          </Accordian>\n          <br />\n\n          <Accordian\n            title=\"Navigation and Pages\"\n            name={\"navigation_accordian\"}\n            onClick={e => this.accordianClick(e)}\n          >\n            {navigation_accordian && (\n              <div className=\"fullwidth\">\n                <Button onClick={this.handleNewPageButton}>\n                  Add a new page\n                </Button>\n\n                <Modal\n                  open={this.state.newPageOpen}\n                  navigationItems={this.props.navigationItems}\n                  handleClose={this.handleNewPageButton}\n                  title=\"Add a new Webpage\"\n                  description=\"Here you can add a new page to your website which will show in the header navigation. You can also make the new page a subpage of another navigation link\"\n                >\n                  <NewPageForm\n                    loading={this.state.loading}\n                    navigationItems={this.props.navigationItems}\n                    handleClose={this.handleNewPageButton}\n                    handleSubmit={this.submitNewPage}\n                  />\n                </Modal>\n\n                <Modal\n                  open={this.state.deletePageModal}\n                  navigationItems={this.props.navigationItems}\n                  handleClose={this.handleDeletePageModal}\n                  title=\"Delete Webpage\"\n                  description=\"You are about to delete selected page this is a permanent action, would you like to continue with deleting this page\"\n                >\n                  <Flex>\n                    <Button onClick={this.submitDeletePage}>Delete</Button>\n                    <Button onClick={this.handleDeletePageModal}>Cancel</Button>\n                  </Flex>\n                </Modal>\n\n                <br />\n                <br />\n                <TabsMenu\n                  navigationItems={this.props.navigationItems}\n                  updatePageSubmit={this.updatePageSubmit}\n                  onChange={this.updatePage}\n                  openMediaModal={this.openMediaModal}\n                  handlePageDelete={this.handleDeletePageModal}\n                  isUpdating={this.props.isUpdating}\n                  cancelUpdate={this.props.onRevertChanges}\n                  isError={this.props.isError}\n                  stateBackup={this.props.stateBackup}\n                  availableRoutes={this.props.availableRoutes}\n                  template={this.props.template}\n                  plugins={this.props.plugins}\n                />\n                <br />\n              </div>\n            )}\n          </Accordian>\n          <br />\n\n          <Accordian\n            title={\"Plugins\"}\n            name={\"plugins_accordian\"}\n            onClick={e => this.accordianClick(e)}\n          >\n            {plugins_accordian && (\n              <Plugins\n                plugins={this.props.plugins}\n                changePluginState={this.props.onChangePageState}\n                pluginsChangeSubmit={this.props.onUpdatePageSubmit}\n                availableRoutes={this.props.availableRoutes}\n                isUpdating={this.props.isUpdating}\n                isError={this.props.isError}\n                stateBackup={this.props.stateBackup}\n                cancelUpdate={this.props.onRevertChanges}\n              />\n            )}\n          </Accordian>\n\n          <Modal\n            open={this.state.openMediaModal}\n            title=\"Choose an image\"\n            description=\"Select the media location you would like to use\"\n            handleClose={this.closeMediaModal}\n          >\n            <Media\n              isModal={true}\n              isAuthenticated={this.props.isAuthenticated}\n              handleClose={this.closeMediaModal}\n              currentImages={this.props.images}\n              imageURLs={this.state.mediaImages}\n              setMediaImages={this.setMediaImages}\n              tabItemReference={this.state.mediaModalTabItemRef}\n              onChangePageState={this.props.onChangePageState}\n            />\n          </Modal>\n        </div>\n        {this.state.newPageToast !== null && (\n          <Toast message={this.state.newPageToast} />\n        )}\n        {this.props.updatePageToast !== null && (\n          <Toast message={this.props.updatePageToast} />\n        )}\n        {this.state.error && <Toast message={this.state.error} error={true} />}\n      </StyledAdminPage>\n    );\n  }\n}\n\nconst StyledAdminPage = styled.div`\n  background-color: #424242;\n  min-height: 100vh;\n  padding: 100px 50px;\n  margin-top: -75px;\n\n  .admin-title {\n    color: #f5f5f5;\n  }\n`;\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.userId !== null,\n    userId: state.auth.userId,\n    home: state.mainState.home,\n    navigationItems: state.mainState.navigationItems,\n    images: state.mainState.images,\n    stateBackup: state.mainState.state_copy,\n    updatePageToast: state.admin.pageUpdateToast,\n    isUpdating: state.admin.loading,\n    isError: state.admin.error,\n    availableRoutes: state.admin.routes,\n    template: state.mainState.template,\n    plugins: state.mainState.plugins\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onInitWebsiteState: () => dispatch(actions.initWebsiteState()),\n    onLogoutClick: () => dispatch(actions.logout()),\n    onChangePageState: (eventTarget, key, parent) =>\n      dispatch(actions.changePageState(eventTarget, key, parent)),\n    onUpdatePageSubmit: (pageInfo, url) =>\n      dispatch(actions.updatePageSubmit(pageInfo, url)),\n    onRevertChanges: () => dispatch(actions.revertStateChange())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Admin);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Page from \"../../components/page\";\n\nimport Admin from \"../../containers/Admin/Admin\";\n\nconst AdminRoute = ({ currentUser }) => (\n  <Page id=\"admin\" title=\"Admin\" noCrawl>\n    <Admin />\n  </Page>\n);\n\nconst mapStateToProps = state => ({\n  currentUser: state.auth.currentUser\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(AdminRoute);\n","import React from \"react\";\nimport Page from \"../../components/page\";\n\nimport Admin from \"../../containers/Admin/Admin\";\n\nconst Admin_TEST = props => {\n  console.log(\"admin_TEST.props\", props);\n  return (\n    <Page id=\"admin\" title=\"Admin\" noCrawl>\n      <Admin {...props}/>\n    </Page>\n  );\n};\n\nexport default Admin_TEST;\n"],"sourceRoot":""}