{"version":3,"sources":["app/components/UI/Accordian.js","app/components/UI/Toast.js","app/components/UI/Wrappers/Minimizer.js","app/components/admin-controls/BannerControls.js","app/components/admin-controls/MainTextControls.js","app/containers/Admin/Navigation/TabItems.js/TabItems.js","app/containers/Admin/Navigation/TabsMenu.js","app/components/UI/Modal.js","app/components/Forms/NewPageForm.js","app/containers/Admin/media/ImgGridList.js","app/containers/Admin/media/Media.js","app/containers/Admin/template/Template.js","app/containers/Admin/homepage/Homepage.js","app/components/UI/MultiSelect.js","app/containers/Admin/plugins/contactUsPlugin/ContactUsPlugin.js","app/containers/Admin/plugins/bookingPlugin/BookingPlugin.js","app/containers/Admin/plugins/Plugins.js","app/containers/Auth/AuthModal.js","app/containers/Admin/Admin.js","app/routes/admin/index.js","app/routes/adminTest/index.js"],"names":["StyledAccordian","styled","div","_templateObject","props","theme","primaryBackGroundColour","accordian","react_default","a","createElement","ExpansionPanel_default","onChange","onClick","name","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","title","ExpansionPanelDetails_default","children","Toast","state","open","handleClick","_this","setState","handleClose","event","reason","this","toastColour","error","success","StyledSnackBar","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","aria-describedby","message","id","action","IconButton_default","key","aria-label","color","Close_default","Component","Toast_templateObject","Minimizer","isOpen","handleMinimizer","StyledMinimizer","padding","Flex","margin","RemoveCircle_default","AddCircle_default","Collapse_default","in","className","Emtpy","emptyHeight","Minimizer_templateObject","_templateObject2","BannerControls","_this$props","pos","data","handleCheckbox","handleChange","handleMediaModal","clearInput","handleColourPicker","content","Object","keys","filter","fc","includes","map","c","replace","objectSpread","defineProperty","_content","BannerHalfwidth","BannerImgSize","BannerHWbackImg","BannerHWBackColour","BannerTxtRightSide","BannerTxtLightTheme","BannerLogo","Bannerfade","BannerTitle","BannerSubtitle","BannerDescription","BannerBtnText","BannerLink","BannerTextBkgrnd","BannerTextBkgrndColor","BannerTextBkgrndAngled","BannerTextBkgrndRounded","Wrappers_Minimizer","Box","Input","inputtype","sideLabel","concat","checked","Fragment","label","value","type","changeColour","min","max","items","availableRoutes","onSelectChange","MainTextContols","console","log","mainTextPosition","mainTextCenterTitle","mainTextRightSide","mainTextBackColour","mainTextImg","mainTextImgAlign","mainTextImgWidth","mainTextImgHeight","Grid","cols","pageId","StyledTabItems","TabItems_templateObject","Preview","TabItems_templateObject2","DeletePageIcon","_templateObject3","TabItems","itemProps","dropdownPages","TabsMenu_TabMenu","navigationItems","parentId","parent","handlePageDelete","openMediaModal","updatePageSubmit","isUpdating","cancelUpdate","stateBackup","template","plugins","preventDefault","target","check","newevent","inputName","_props$itemProps$cont","topBanner","topBannerHalfwidth","midBanner","midBannerHalfwidth","mainText","Paper_default","elevation","admin_controls_BannerControls","MainTextControls","Dashboard","assign","pageInfo","overlayBlocker","justifyContent","Button","Spinner","Delete_default","fontSize","TabMenu","disableTabText","topBannerOptions","midBannerOptions","bottomBannerOptions","prevProps","_this2","tabLabels","tabitems","index","item","Tab_default","TabItems_js_TabItems","StyledTabs","Tooltip_default","AppBar_default","position","Tabs_default","variant","scrollButtons","isError","UI_Toast","TabsMenu_templateObject","Modal","width","fullWidth","maxWidth","Dialog_default","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","description","NewPageForm","_Component","_getPrototypeOf2","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","selectVal","onInputChange","_event$target","scrubbedVal","inherits","createClass","prop","handleSubmit","disabled","loading","TitlebarGridList","columns","spacing","activeIndex","selectedValue","selectedName","handleResize","windowSize","window","innerWidth","handleSelect","tile","selectedImage","addEventListener","removeEventListener","tileData","StyledGrid","GridList_default","cellHeight","GridListTile_default","style","height","ListSubheader_default","component","gridTileClass","selectedIndex","e","src","img","alt","GridListTileBar_default","actionIcon","isModal","deleteImage","ImgGridList_templateObject","Media","uploadOpen","customURL","customURLtext","deleteImgOpen","getImageUrls","that","assertThisInitialized","imageContainer","imageCount","currentImages","returnedCount","storageRef","firebase","storage","ref","i","child","process","getDownloadURL","then","url","toConsumableArray","setMediaImages","catch","onDrop","acceptedFiles","rejectedFiles","auth","currentUser","file","checkFileAlreadyExists","put","snapshot","addImageRefToDb","err","isTimedOut","newPostKey","database","push","updates","update","refreshState","handleCustomURL","confirmImage","_this$state","tabItemReference","image","onChangePageState","imgUrl","confirmDelete","imageURLs","find","remove","delete","handleUploadOpen","isAuthenticated","_this$state2","dropZone","mediaTemplate","noMediaMessage","dist_es","multiple","accept","_ref","getRootProps","getInputProps","isDragActive","StyledDropArea","classNames","dropzone--isActive","selectedLabel","IsMediaModal","opacity","ImgGridList","placeholder","Divider_default","UI_Modal","Media_templateObject","Media_templateObject2","Template","changeTemplateState","handlesubmit","templateChangeSubmit","buttonStyle","_this$props$template","navButtons","siteButtons","transparentHeader","navLightTheme","siteLogo","version","StyledTemplate","colsLarge","colsMed","Template_templateObject","Homepage","previewOpen","changeHomepageState","homepageChangeSubmit","homePage","_this$props$homePage$","bottomBanner","StyledHomePage","pageID","Homepage_Preview","Homepage_templateObject","Homepage_templateObject2","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","MultiSelect","StyledSelect","FormControl_default","InputLabel_default","htmlFor","Select_default","input","Input_default","renderValue","selected","Chip_default","MenuItem_default","React","MultiSelect_templateObject","minwidth","ContactUsPlugin","plugin","_props$plugin","contactUsActive","contactUsPages","contactUsEmail","parentObj","UI_MultiSelect","BookingPlugin","bookingActive","bookingPages","bookingEmail","bookingForm","bookingCalendarID","bookingApiKey","bookingTimeSlotsAvailable","bookingTimeSlots","bookingGetCalandarAdvance","bookingSessions","Plugins","contactUsPlugin","accordianClick","changePluginState","pluginsChangeSubmit","route","split","pop","unshift","StyledPlugins","contactUsPlugin_ContactUsPlugin","contactUs","bookingPlugin_BookingPlugin","booking","Plugins_templateObject","AuthModal","email","password","onFormChange","submitHandler","onAuth","admin","backToHome","history","errorMessage","connect","mainState","userId","dispatch","actions","Admin","homepage_accordian","navigation_accordian","template_accordian","media_accordian","showSignIn","newPageOpen","deletePageModal","pageToDelete","mediaModalTabItemRef","mediaImages","newPageToast","logoutHandler","signOut","onLogoutClick","parentKey","closeMediaModal","handleNewPageButton","submitNewPage","newPage_State","toLowerCase","defaultContent","Date","now","newPageObj","subpageIndex","newPage","code","onInitWebsiteState","handleDeletePageModal","submitDeletePage","_this$state$pageToDel","updatePage","eventTarget","URL","onUpdatePageSubmit","timedOutUser","plugins_accordian","StyledAdminPage","Auth_AuthModal","Accordian","media_Media","images","template_Template","onRevertChanges","homepage_Homepage","home","Forms_NewPageForm","plugins_Plugins","updatePageToast","Admin_templateObject","state_copy","pageUpdateToast","routes","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","_components_page__WEBPACK_IMPORTED_MODULE_2__","_containers_Admin_Admin__WEBPACK_IMPORTED_MODULE_3__","noCrawl","_components_page__WEBPACK_IMPORTED_MODULE_1__","_containers_Admin_Admin__WEBPACK_IMPORTED_MODULE_2__","Admin_TEST"],"mappings":"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","file":"static/js/admin.c3b84e3e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst accordian = props => (\r\n  <StyledAccordian>\r\n    <ExpansionPanel onChange={() => props.onClick(props.name)}>\r\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n        <div>{props.title}</div>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails>\r\n        {props.children ? props.children : <div />}\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  </StyledAccordian>\r\n);\r\n\r\nconst StyledAccordian = styled.div`\r\n    margin: 15px 5px;\r\n  \r\n    /* > div {\r\n        height: 20px !important;\r\n        width: 20px !important;\r\n        margin: \"theme.spacing.unit * 2\";\r\n        color: ${props => props.theme.primaryBackGroundColour};\r\n\r\n    } */\r\n`;\r\n\r\nexport default accordian;\r\n","import React, { Component } from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nclass Toast extends Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ open: true });\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    let toastColour = \"rgb(49, 49, 49)\";\r\n    if (this.props.error) toastColour = \"rgb(220, 52, 54)\";\r\n    if (this.props.success) toastColour = \"rgb(70,154,16)\";\r\n\r\n    return (\r\n      <StyledSnackBar toastColour={toastColour}>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"center\"\r\n          }}\r\n          open={this.state.open}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleClose}\r\n          ContentProps={{\r\n            \"aria-describedby\": \"message-id\"\r\n          }}\r\n          message={<span id=\"message-id\">{this.props.message}</span>}\r\n          action={[\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"Close\"\r\n              color=\"inherit\"\r\n              onClick={this.handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          ]}\r\n        />\r\n      </StyledSnackBar>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledSnackBar = styled.div`\r\n  > div div {\r\n    background-color: ${props => props.toastColour};\r\n    font-weight: ${props => (props.error ? \"bold\" : \"initial\")};\r\n  }\r\n`;\r\n\r\nexport default Toast;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport AddIcon from \"@material-ui/icons/AddCircle\";\r\nimport MinusIcon from \"@material-ui/icons/RemoveCircle\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Flex from \"./Flex\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\n\r\nclass Minimizer extends Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n\r\n  handleMinimizer = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  };\r\n\r\n  render() {\r\n    const { isOpen } = this.state;\r\n\r\n    return (\r\n      <StyledMinimizer padding={this.props.padding}>\r\n        <Flex margin=\"0\">\r\n          <IconButton\r\n            aria-label=\"Add\"\r\n            color=\"primary\"\r\n            onClick={this.handleMinimizer}\r\n          >\r\n            {isOpen ? <MinusIcon /> : <AddIcon />}\r\n          </IconButton>\r\n          {isOpen ? (\r\n            <small onClick={this.handleMinimizer}>\r\n              Click to minimise options\r\n            </small>\r\n          ) : (\r\n            <small onClick={this.handleMinimizer}>\r\n              Click to expand further options\r\n            </small>\r\n          )}\r\n        </Flex>\r\n        <Collapse in={isOpen}>\r\n          {isOpen ? (\r\n            <div className=\"minimized_children\">{this.props.children}</div>\r\n          ) : (\r\n            <Emtpy emptyHeight={this.props.emptyHeight} />\r\n          )}\r\n        </Collapse>\r\n      </StyledMinimizer>\r\n    );\r\n  }\r\n}\r\n\r\nconst Emtpy = styled.div`\r\n  height: ${props => props.emptyHeight || \"500px\"};\r\n`;\r\n\r\nconst StyledMinimizer = styled.div`\r\n  border: 2px solid rgba(0, 0, 0, 0.2);\r\n  border-top: 0;\r\n  border-bottom-left-radius: 8px;\r\n  border-bottom-right-radius: 8px;\r\n  margin-bottom: 35px;\r\n\r\n  > div small {\r\n    cursor: pointer;\r\n  }\r\n\r\n  .minimized_children {\r\n    padding: ${props => props.padding || \"auto\"};\r\n  }\r\n`;\r\n\r\nexport default Minimizer;\r\n","import React, { Component } from 'react';\r\n\r\nimport Input from \"../UI/Input\";\r\nimport Flex from \"../UI/Wrappers/Flex\";\r\nimport Box from \"../UI/Wrappers/Box\";\r\nimport Minimizer from \"../UI/Wrappers/Minimizer\";\r\n\r\n\r\nclass BannerControls extends Component {\r\n\r\n    render() {\r\n        const { pos, data, handleCheckbox, handleChange, handleMediaModal, clearInput, handleColourPicker } = this.props\r\n        let content = {}\r\n\r\n        Object.keys(data)\r\n        .filter(fc => fc.includes(pos+'Banner'))\r\n        .map(c => {\r\n            const key = c.replace(pos, '')\r\n            return content = {...content, [key]: data[c] }\r\n        });\r\n\r\n\r\n        const {\r\n          BannerHalfwidth,\r\n          BannerImgSize,\r\n          BannerHWbackImg,\r\n          BannerHWBackColour,\r\n          BannerTxtRightSide,\r\n          BannerTxtLightTheme,\r\n          BannerLogo,\r\n          Bannerfade,\r\n          BannerTitle,\r\n          BannerSubtitle,\r\n          BannerDescription,\r\n          BannerBtnText,\r\n          BannerLink,\r\n          BannerTextBkgrnd,\r\n          BannerTextBkgrndColor,\r\n          BannerTextBkgrndAngled,\r\n          BannerTextBkgrndRounded\r\n\r\n        } = content\r\n\r\n        return (\r\n            <Minimizer>\r\n              <Box>\r\n                <Flex>\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel={`Use the ${pos} banner image inside the banner`}\r\n                    name={pos+\"BannerHalfwidth\"}\r\n                    checked={BannerHalfwidth}\r\n                    handleChange={handleCheckbox}\r\n                  />\r\n                </Flex>\r\n                {BannerHalfwidth && (\r\n                  <>\r\n                    <Input\r\n                      inputtype=\"inputSelector\"\r\n                      label=\"Banner Background Image\"\r\n                      name={pos+\"BannerHWbackImg\"}\r\n                      value={BannerHWbackImg}\r\n                      onChange={handleChange}\r\n                      onClick={handleMediaModal}\r\n                      clearInput={clearInput}\r\n                    />\r\n                    <Flex>\r\n                      <Input\r\n                        inputtype=\"input\"\r\n                        type=\"number\"\r\n                        label=\"Banner Image Size\"\r\n                        name={pos+\"BannerImgSize\"}\r\n                        value={BannerImgSize}\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Input\r\n                        inputtype=\"inputColourPicker\"\r\n                        label=\"Banner Background Colour\"\r\n                        name={pos+\"BannerHWBackColour\"}\r\n                        value={BannerHWBackColour}\r\n                        changeColour={handleColourPicker}\r\n                        \r\n                      />\r\n                    </Flex>\r\n                  </>\r\n                )}\r\n\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Banner Text has a Background\"\r\n                    name={pos+\"BannerTextBkgrnd\"}\r\n                    checked={BannerTextBkgrnd}\r\n                    handleChange={handleCheckbox}\r\n                  />\r\n\r\n                  {BannerTextBkgrnd &&\r\n                    <>\r\n                    <Flex>\r\n                      <Input\r\n                        inputtype=\"input\"\r\n                        type={'number'}\r\n                        label=\"Text Background angled (-50 to 50)\"\r\n                        name={pos+\"BannerTextBkgrndAngled\"}\r\n                        value={BannerTextBkgrndAngled}\r\n                        onChange={handleChange}\r\n                        min={'-50'}\r\n                        max={'50'}\r\n                      />\r\n                      <Input\r\n                        inputtype=\"input\"\r\n                        type={'number'}\r\n                        label=\"Text Background round edges (0-50)\"\r\n                        name={pos+\"BannerTextBkgrndRounded\"}\r\n                        value={BannerTextBkgrndRounded}\r\n                        onChange={handleChange}\r\n                        min={'0'}\r\n                        max={'50'}\r\n                      />\r\n                    </Flex>\r\n                    <Input\r\n                      inputtype=\"inputColourPicker\"\r\n                      label=\"Banner Text Background Colour\"\r\n                      name={pos+\"BannerTextBkgrndColor\"}\r\n                      value={BannerTextBkgrndColor}\r\n                      changeColour={handleColourPicker}\r\n                     \r\n                    />\r\n                    </>\r\n                  }\r\n\r\n                <Flex>\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Banner Text Right Side\"\r\n                    name={pos+\"BannerTxtRightSide\"}\r\n                    checked={BannerTxtRightSide}\r\n                    handleChange={handleCheckbox}\r\n                  />\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Banner Light Text Color\"\r\n                    name={pos+\"BannerTxtLightTheme\"}\r\n                    checked={BannerTxtLightTheme}\r\n                    handleChange={handleCheckbox}\r\n                  />\r\n                </Flex>\r\n                <Flex>\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Use Logo in banner\"\r\n                    name={pos+\"BannerLogo\"}\r\n                    checked={BannerLogo}\r\n                    handleChange={handleCheckbox}\r\n                  />\r\n                  <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Banner content fade in effect\"\r\n                    name={pos+\"Bannerfade\"}\r\n                    checked={Bannerfade}\r\n                    handleChange={handleCheckbox}\r\n                  />\r\n                </Flex>\r\n                <Input\r\n                  inputtype=\"input\"\r\n                  label=\"Banner Title\"\r\n                  name={pos+\"BannerTitle\"}\r\n                  value={BannerTitle}\r\n                  onChange={handleChange}\r\n                />\r\n                <Input\r\n                  inputtype=\"input\"\r\n                  label=\"Banner Subtitle\"\r\n                  name={pos+\"BannerSubtitle\"}\r\n                  value={BannerSubtitle}\r\n                  onChange={handleChange}\r\n                />\r\n                <Input\r\n                  inputtype=\"input\"\r\n                  label=\"Banner Description\"\r\n                  name={pos+\"BannerDescription\"}\r\n                  value={BannerDescription}\r\n                  onChange={handleChange}\r\n                />\r\n                <Flex>\r\n                  <Input\r\n                    inputtype=\"input\"\r\n                    label=\"Banner Button Text\"\r\n                    name={pos+\"BannerBtnText\"}\r\n                    value={BannerBtnText}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Input\r\n                    inputtype=\"select\"\r\n                    label=\"Banner Link\"\r\n                    name={pos+\"BannerLink\"}\r\n                    value={BannerLink}\r\n                    items={this.props.availableRoutes}\r\n                    onSelectChange={handleChange}\r\n                  />\r\n                </Flex>\r\n              </Box>\r\n            </Minimizer>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default BannerControls;","import React from 'react';\r\n\r\nimport Input from \"../UI/Input\";\r\nimport Flex from \"../UI/Wrappers/Flex\";\r\nimport Grid from \"../UI/Wrappers/Grid\";\r\nimport Box from \"../UI/Wrappers/Box\";\r\nimport Minimizer from \"../UI/Wrappers/Minimizer\";\r\n\r\nconst MainTextContols = (props) => {\r\n\r\n    const {data} = props\r\n    let content = {}\r\n\r\n    Object.keys(data)\r\n        .filter(fc => fc.includes('mainText'))\r\n        .map(c => {\r\n            return content = {...content, [c]: data[c] }\r\n        });\r\n    \r\n    console.log('content', content)\r\n    \r\n    const {\r\n      mainTextPosition,\r\n      mainTextCenterTitle,\r\n      mainTextRightSide,\r\n      mainTextBackColour,\r\n      mainTextImg,\r\n      mainTextImgAlign,\r\n      mainTextImgWidth,\r\n      mainTextImgHeight\r\n    } = content;\r\n\r\n    const positionArray = [\r\n        { value: \"Top\" },\r\n        { value: \"Middle\" },\r\n        { value: \"Bottom\" }\r\n      ];\r\n    \r\n    const floatArray = [{ value: \"left\" }, { value: \"right\" }];\r\n\r\n    return (\r\n        <Minimizer>\r\n          <Box>\r\n            <Flex>\r\n                <Input\r\n                inputtype=\"checkbox\"\r\n                sideLabel=\"Center Header text\"\r\n                name=\"mainTextCenterTitle\"\r\n                checked={mainTextCenterTitle}\r\n                handleChange={props.handleCheckbox}\r\n                />\r\n                <Input\r\n                inputtype=\"checkbox\"\r\n                sideLabel=\"Align Text Right Side\"\r\n                name=\"mainTextRightSide\"\r\n                checked={mainTextRightSide}\r\n                handleChange={props.handleCheckbox}\r\n                />\r\n            </Flex>\r\n            <Input\r\n                inputtype=\"select\"\r\n                label=\"Main Text Page Position\"\r\n                name=\"mainTextPosition\"\r\n                value={mainTextPosition}\r\n                items={positionArray}\r\n                onSelectChange={props.handleChange}\r\n            />\r\n            <Input\r\n                inputtype=\"inputSelector\"\r\n                label=\"Add a Small Image\"\r\n                name=\"mainTextImg\"\r\n                value={mainTextImg}\r\n                onChange={props.handleChange}\r\n                onClick={props.handleMediaModal}\r\n                clearInput={props.clearInput}\r\n            />\r\n            <Grid cols={\"33% 33% 33%\"} margin={\"0 15px 0 0\"}>\r\n                <Input\r\n                inputtype=\"select\"\r\n                label=\"Image align position\"\r\n                name=\"mainTextImgAlign\"\r\n                value={mainTextImgAlign}\r\n                items={floatArray}\r\n                onSelectChange={props.handleChange}\r\n                />\r\n                <Input\r\n                inputtype=\"input\"\r\n                type=\"number\"\r\n                label=\"Banner Image Width\"\r\n                name=\"mainTextImgWidth\"\r\n                value={mainTextImgWidth || 200}\r\n                onChange={props.handleChange}\r\n                />\r\n                <Input\r\n                inputtype=\"input\"\r\n                type=\"number\"\r\n                label=\"Banner Image Height\"\r\n                name=\"mainTextImgHeight\"\r\n                value={mainTextImgHeight || 135}\r\n                onChange={props.handleChange}\r\n                />\r\n            </Grid>\r\n            <Input\r\n                inputtype=\"inputColourPicker\"\r\n                label=\"Banner Background Colour\"\r\n                name=\"mainTextBackColour\"\r\n                value={mainTextBackColour}\r\n                changeColour={props.handleColourPicker}\r\n                pageId={\"home\"}\r\n            />\r\n            </Box>\r\n        </Minimizer>\r\n    );\r\n};\r\n\r\nexport default MainTextContols;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Input from \"../../../../components/UI/Input\";\r\nimport TabMenu from \"../TabsMenu\";\r\nimport Button from \"../../../../components/UI/Buttons/Button\";\r\nimport Flex from \"../../../../components/UI/Wrappers/Flex\";\r\nimport Spinner from \"../../../../components/UI/Spinner\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport Dashboard from \"../../../Dashboard/Dashboard\";\r\n\r\nimport BannerControls from '../../../../components/admin-controls/BannerControls'\r\nimport MainTextControls from '../../../../components/admin-controls/MainTextControls'\r\n\r\nconst TabItems = props => {\r\n  console.log(\"tabItems props\", props);\r\n  if (props.itemProps.dropdownPages) {\r\n    return (\r\n      <TabMenu\r\n        navigationItems={props.itemProps.dropdownPages}\r\n        parentId={props.pageId}\r\n        parent={props.children}\r\n        onChange={props.onChange}\r\n        handlePageDelete={props.handlePageDelete}\r\n        openMediaModal={props.openMediaModal}\r\n        updatePageSubmit={props.updatePageSubmit}\r\n        isUpdating={props.isUpdating}\r\n        cancelUpdate={props.cancelUpdate}\r\n        stateBackup={props.stateBackup}\r\n        availableRoutes={props.availableRoutes}\r\n        template={props.template}\r\n        plugins={props.plugins}\r\n      />\r\n    );\r\n  }\r\n\r\n  const handleChange = event => {\r\n    event.preventDefault();\r\n    props.onChange(event.target, props.pageId, props.parentId);\r\n  };\r\n\r\n  const handleCheckbox = check => event => {\r\n    console.log(check, event.target.checked);\r\n    const newevent = {\r\n      name: event.target.name,\r\n      value: event.target.checked\r\n    };\r\n    props.onChange(newevent, props.pageId, props.parentId);\r\n  };\r\n\r\n  const handleMediaModal = event => {\r\n    event.preventDefault();\r\n    props.openMediaModal(event.target, props.pageId, props.parentId);\r\n  };\r\n\r\n  const handleColourPicker = event => {\r\n    props.onChange(event.target, props.pageId, props.parentId);\r\n  };\r\n\r\n  const handlesubmit = event => {\r\n    event.preventDefault();\r\n    props.updatePageSubmit(\r\n      props.itemProps.content,\r\n      props.pageId,\r\n      props.parentId\r\n    );\r\n  };\r\n\r\n  const clearInput = inputName => {\r\n    const event = { name: inputName, value: \"\" };\r\n    props.onChange(event, props.pageId, props.parentId);\r\n  };\r\n\r\n  const deletePage = () => {\r\n    props.handlePageDelete(props.pageId, props.parentId);\r\n  };\r\n\r\n  const {\r\n    topBanner,\r\n    topBannerHalfwidth,\r\n    midBanner,\r\n    midBannerHalfwidth,\r\n    mainText\r\n  } = props.itemProps.content;\r\n\r\n  return (\r\n    <Paper elevation={20}>\r\n      <StyledTabItems>\r\n        <div>\r\n          {props.children}\r\n          <Input\r\n            inputtype=\"inputSelector\"\r\n            label={`${\r\n              topBannerHalfwidth\r\n                ? \"Top Banner Image (Inside Banner)\"\r\n                : \"Top Banner Image\"\r\n            }`}\r\n            name=\"topBanner\"\r\n            value={topBanner}\r\n            onChange={handleChange}\r\n            onClick={handleMediaModal}\r\n            clearInput={clearInput}\r\n          />\r\n\r\n          {topBanner && \r\n            <BannerControls \r\n              pos={'top'} \r\n              data={props.itemProps.content} \r\n              handleCheckbox={handleCheckbox}\r\n              handleChange={handleChange}\r\n              handleMediaModal={handleMediaModal}\r\n              clearInput={clearInput}\r\n              handleColourPicker={handleColourPicker}\r\n              availableRoutes={props.availableRoutes}\r\n              />\r\n          }\r\n\r\n          <Input\r\n            inputtype=\"inputSelector\"\r\n            label={`${\r\n              midBannerHalfwidth\r\n                ? \"Middle Banner Image (Inside Banner)\"\r\n                : \"Middle Banner Image\"\r\n            }`}\r\n            name=\"midBanner\"\r\n            value={midBanner}\r\n            onChange={handleChange}\r\n            onClick={handleMediaModal}\r\n            clearInput={clearInput}\r\n          />\r\n          {midBanner && (\r\n            <BannerControls \r\n              pos={'mid'} \r\n              data={props.itemProps.content} \r\n              handleCheckbox={handleCheckbox}\r\n              handleChange={handleChange}\r\n              handleMediaModal={handleMediaModal}\r\n              clearInput={clearInput}\r\n              handleColourPicker={handleColourPicker}\r\n              availableRoutes={props.availableRoutes}\r\n            />\r\n          )}\r\n          <Input\r\n            inputtype=\"textarea\"\r\n            label=\"Main Body Text\"\r\n            name=\"mainText\"\r\n            value={mainText}\r\n            onChange={handleChange}\r\n          />\r\n          <MainTextControls \r\n            data={props.itemProps.content} \r\n            handleCheckbox={handleCheckbox}\r\n            handleChange={handleChange}\r\n            handleMediaModal={handleMediaModal}\r\n            clearInput={clearInput}\r\n            handleColourPicker={handleColourPicker}\r\n            availableRoutes={props.availableRoutes}\r\n          />\r\n        </div>\r\n        <Preview>\r\n          <Dashboard\r\n            pageInfo={props.itemProps}\r\n            {...props}\r\n            template={props.template}\r\n            plugins={props.plugins}\r\n            overlayBlocker={true}\r\n          />\r\n        </Preview>\r\n      </StyledTabItems>\r\n      <Flex justifyContent={\"space-between\"}>\r\n        <div>\r\n          <Flex justifyContent=\"flex-start\">\r\n            <Button margin=\"2px 5px 15px 20px\" onClick={handlesubmit}>\r\n              Update\r\n            </Button>\r\n            {props.isUpdating && <Spinner />}\r\n            {props.stateBackup && (\r\n              <Button margin=\"2px 20px 15px 20px\" onClick={props.cancelUpdate}>\r\n                Undo Changes\r\n              </Button>\r\n            )}\r\n          </Flex>\r\n        </div>\r\n        <DeletePageIcon>\r\n          <IconButton onClick={deletePage}>\r\n            <DeleteIcon fontSize=\"large\" />\r\n          </IconButton>\r\n        </DeletePageIcon>\r\n      </Flex>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst StyledTabItems = styled.div`\r\n  padding: 3vh;\r\n  display: grid;\r\n  grid-template-columns: 65% 35%;\r\n  grid-gap: 8px;\r\n`;\r\n\r\nconst Preview = styled.div`\r\n  display: block;\r\n  zoom: 30%;\r\n  padding-top: 56px;\r\n  box-shadow: 2px 2px 2px;\r\n\r\n  @media (max-width: 500px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst DeletePageIcon = styled.div`\r\n  padding: 5px;\r\n`;\r\n\r\nexport default TabItems;\r\n","import React, { Component } from \"react\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Toast from \"../../../components/UI/Toast\";\r\n\r\nimport TabItems from \"./TabItems.js/TabItems\";\r\n\r\nexport default class TabMenu extends Component {\r\n  state = {\r\n    value: 0,\r\n    disableTabText: \"\",\r\n    topBannerOptions: true,\r\n    midBannerOptions: true,\r\n    bottomBannerOptions: true\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.stateBackup !== prevProps.stateBackup) {\r\n      if (this.props.stateBackup) {\r\n        this.setState({\r\n          disableTabText:\r\n            \"You have made updates to this page, please save or undo your changes before selecting a new page\"\r\n        });\r\n      } else {\r\n        this.setState({ disableTabText: \"\" });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleChange = (event, value) => {\r\n    if (!this.props.stateBackup) {\r\n      this.setState({ value });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    const { navigationItems, parent, parentId } = this.props;\r\n    console.log(\"tabMenu props\", this.props);\r\n    let tabLabels = null;\r\n    let tabitems = null;\r\n\r\n    if (navigationItems !== null) {\r\n      tabLabels = Object.keys(navigationItems).map((key, index) => {\r\n        const item = navigationItems[key];\r\n        //passes the item title down to tabItems, which then runs tabs again if there is a drop down, and passes a parent value back\r\n        return (\r\n          <Tab\r\n            key={index}\r\n            label={\r\n              parent ? parent.props.children + \" - \" + item.title : item.title\r\n            }\r\n          />\r\n        );\r\n      });\r\n\r\n      tabitems = Object.keys(navigationItems).map((key, index) => {\r\n        return (\r\n          value === index && (\r\n            <TabItems\r\n              key={index}\r\n              pageId={key}\r\n              parentId={parentId || null}\r\n              itemProps={navigationItems[key]}\r\n              onChange={this.props.onChange}\r\n              handlePageDelete={this.props.handlePageDelete}\r\n              openMediaModal={this.props.openMediaModal}\r\n              updatePageSubmit={this.props.updatePageSubmit}\r\n              isUpdating={this.props.isUpdating}\r\n              cancelUpdate={this.props.cancelUpdate}\r\n              stateBackup={this.props.stateBackup}\r\n              availableRoutes={this.props.availableRoutes}\r\n              template={this.props.template}\r\n              plugins={this.props.plugins}\r\n            >\r\n              <h2>{navigationItems[key].title}</h2>\r\n            </TabItems>\r\n          )\r\n        );\r\n      });\r\n\r\n      // tabLabels = navigationItems.map( (item, index) => {\r\n      //     //passes the item title down to tabItems, which then runs tabs again if there is a drop down, and passes a parent value back\r\n      //     return <Tab key={index} label={ parent ? parent+' - '+item.title : item.title} />\r\n      // })\r\n      // tabitems = navigationItems.map( (item, index) => {\r\n      //     return( value === index && <TabItems key={index} itemProps={item}>{item.title }</TabItems> )\r\n      // })\r\n    }\r\n\r\n    if (tabitems === null && tabLabels === null) return <div />;\r\n    return (\r\n      <StyledTabs>\r\n        <Tooltip title={this.state.disableTabText}>\r\n          <AppBar position=\"static\">\r\n            <Tabs\r\n              value={value}\r\n              onChange={this.handleChange}\r\n              variant=\"scrollable\"\r\n              scrollButtons=\"auto\"\r\n            >\r\n              {tabLabels}\r\n            </Tabs>\r\n          </AppBar>\r\n        </Tooltip>\r\n        {tabitems}\r\n        {this.props.isError && (\r\n          <Toast message={this.props.isError} error={true} />\r\n        )}\r\n      </StyledTabs>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledTabs = styled.div`\r\n  > header {\r\n    background-color: ${props => props.theme.primaryBackGroundColour};\r\n    z-index: 20;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\n//import TextField from '@material-ui/core/TextField';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n// import DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nconst Modal = props => {\r\n  // const childrenWithProps = React.Children.map()\r\n  const width = props.fullWidth ? props.fullWidth : true;\r\n  const maxWidth = props.maxWidth ? props.maxWidth : \"lg\";\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={props.handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        fullWidth={width}\r\n        maxWidth={maxWidth}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>{props.description}</DialogContentText>\r\n          <br />\r\n          <br />\r\n          {/* {React.cloneElement(props.children, { handleSubmit: props.handleSubmit })} */}\r\n          {props.children}\r\n        </DialogContent>\r\n        {/* <DialogActions>\r\n            <button onClick={props.handleClose} >\r\n              Cancel\r\n            </button>\r\n            <button onClick={props.handleSubmit} >\r\n              Confirm\r\n            </button>\r\n          </DialogActions> */}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\nimport Input from \"../UI/Input\";\r\nimport Flex from \"../UI/Wrappers/Flex\";\r\nimport Button from \"../UI/Buttons/Button\";\r\nimport Spinner from \"../UI/Spinner\";\r\n\r\nexport class NewPageForm extends Component {\r\n  state = {\r\n    title: \"\",\r\n    checked: false,\r\n    selectVal: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.navigationItems !== null) {\r\n      // this.setState({selectVal: this.props.navigationItems[0].title})\r\n      let title = \"\";\r\n      for (var prop in this.props.navigationItems) {\r\n        title = this.props.navigationItems[prop].title;\r\n        break;\r\n      }\r\n\r\n      this.setState({ selectVal: title });\r\n    }\r\n  }\r\n\r\n  handleCheckbox = name => event => {\r\n    this.setState({ [name]: event.target.checked });\r\n  };\r\n\r\n  onSelectChange = event => {\r\n    this.setState({ selectVal: event.target.value });\r\n  };\r\n\r\n  onInputChange = event => {\r\n    const { value, name } = event.target;\r\n    const scrubbedVal = value.replace(/[^\\w\\s]/gi, \"\");\r\n\r\n    this.setState({ [name]: scrubbedVal });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"newpageForm props\", this.props);\r\n    return (\r\n      <div>\r\n        <form>\r\n          <Input\r\n            inputtype=\"input\"\r\n            label=\"Page Title\"\r\n            name=\"title\"\r\n            value={this.state.title}\r\n            onChange={this.onInputChange}\r\n          />\r\n          {this.props.navigationItems !== null && (\r\n            <div>\r\n              <Input\r\n                inputtype=\"checkbox\"\r\n                sideLabel=\"Is this a dropdown SubPage\"\r\n                checked={this.state.checked}\r\n                handleChange={this.handleCheckbox}\r\n              />\r\n              <br />\r\n              {this.state.checked && (\r\n                <Input\r\n                  inputtype=\"select\"\r\n                  value={this.state.selectVal}\r\n                  label=\"Choose the parent page for this Subpage\"\r\n                  items={this.props.navigationItems}\r\n                  onSelectChange={this.onSelectChange}\r\n                />\r\n              )}\r\n            </div>\r\n          )}\r\n        </form>\r\n        <Flex justifyContent=\"flex-end\" margin=\"5px\">\r\n          <Button onClick={this.props.handleClose}>Cancel</Button>\r\n          <Button\r\n            onClick={() => this.props.handleSubmit(this.state)}\r\n            disabled={this.state.title === \"\" ? true : false}\r\n          >\r\n            Confirm\r\n          </Button>\r\n          {this.props.loading && <Spinner />}\r\n        </Flex>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//       //updateNewPageData: () => dispatch(actions.newPageData()),\r\n//   }\r\n// }\r\n\r\n//export default connect(null, mapDispatchToProps)(NewPageForm)\r\nexport default NewPageForm;\r\n","import React, { Component } from \"react\";\r\n\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nclass TitlebarGridList extends Component {\r\n  state = {\r\n    columns: 5,\r\n    spacing: 20,\r\n    activeIndex: null,\r\n    selectedValue: \"\",\r\n    selectedName: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n    this.handleResize();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.handleResize);\r\n  }\r\n\r\n  handleResize = () => {\r\n    const windowSize = window.innerWidth;\r\n    const columns = (windowSize > 768 && 5) || (windowSize <= 480 && 1) || 3;\r\n    const spacing = (windowSize > 768 && 20) || 8;\r\n\r\n    this.setState({\r\n      columns,\r\n      spacing\r\n    });\r\n  };\r\n\r\n  handleSelect = (event, index, tile) => {\r\n    this.props.selectedImage(index, tile);\r\n  };\r\n\r\n  render() {\r\n    const { tileData } = this.props;\r\n    if (!tileData || !tileData.length) return <div />;\r\n\r\n    return (\r\n      <StyledGrid>\r\n        <GridList\r\n          cellHeight={180}\r\n          className=\"gridList\"\r\n          cols={this.state.columns}\r\n          spacing={this.state.spacing}\r\n        >\r\n          <GridListTile\r\n            key=\"Subheader\"\r\n            cols={this.state.columns}\r\n            style={{ height: \"auto\" }}\r\n          >\r\n            <ListSubheader component=\"div\">\r\n              This is where your current websites images located.\r\n            </ListSubheader>\r\n          </GridListTile>\r\n          {tileData.map((tile, index) => {\r\n            const gridTileClass =\r\n              this.props.selectedIndex === index ? \"media active\" : \"media\";\r\n\r\n            return (\r\n              <GridListTile\r\n                key={tile.title}\r\n                className={gridTileClass}\r\n                onClick={e => this.handleSelect(e, index, tile)}\r\n              >\r\n                <img src={tile.img} alt={tile.title} />\r\n                <GridListTileBar\r\n                  title={tile.title}\r\n                  actionIcon={\r\n                    !this.props.isModal ? (\r\n                      <IconButton\r\n                        className=\"gridIcon\"\r\n                        onClick={() =>\r\n                          this.props.deleteImage(tile.img, tile.title)\r\n                        }\r\n                      >\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    ) : (\r\n                      false\r\n                    )\r\n                  }\r\n                />\r\n              </GridListTile>\r\n            );\r\n          })}\r\n        </GridList>\r\n      </StyledGrid>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledGrid = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  /* justify-content: space-around; */\r\n  overflow: hidden;\r\n  margin: 20px 0;\r\n  padding: 10px;\r\n\r\n  .gridlist {\r\n    width: 100%;\r\n    height: 450px;\r\n  }\r\n\r\n  .media {\r\n    padding: 3px;\r\n    cursor: pointer;\r\n    -webkit-transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\r\n    -moz-transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\r\n    -ms-transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\r\n    -o-transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\r\n    transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\r\n  }\r\n\r\n  .media.active {\r\n    border: 1px solid #09c;\r\n    border-radius: 5px;\r\n    box-shadow: 1px 1px 7px rgba(0, 200, 204, 0.7);\r\n    outline: none;\r\n  }\r\n\r\n  .gridIcon {\r\n    color: rgba(255, 255, 255, 0.54);\r\n  }\r\n`;\r\n\r\nexport default TitlebarGridList;\r\n","import React, { Component } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nimport \"firebase/storage\";\r\n\r\nimport classNames from \"classnames\";\r\n\r\nimport styled from \"styled-components\";\r\nimport Button from \"../../../components/UI/Buttons/Button\";\r\nimport Input from \"../../../components/UI/Input\";\r\nimport Flex from \"../../../components/UI/Wrappers/Flex\";\r\nimport Box from \"../../../components/UI/Wrappers/Box\";\r\nimport Modal from \"../../../components/UI/Modal\";\r\nimport Spinner from \"../../../components/UI/Spinner\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ImgGridList from \"./ImgGridList\";\r\n\r\nclass Media extends Component {\r\n  state = {\r\n    uploadOpen: false,\r\n    error: null,\r\n    customURL: false,\r\n    customURLtext: \"\",\r\n    activeIndex: null,\r\n    selectedValue: \"\",\r\n    selectedName: \"\",\r\n    deleteImgOpen: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"mounted\");\r\n    this.getImageUrls();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.currentImages === null) return;\r\n\r\n    if (\r\n      this.props.currentImages !== prevProps.currentImages ||\r\n      this.props.isAuthenticated !== prevProps.isAuthenticated\r\n    ) {\r\n      this.getImageUrls();\r\n    }\r\n  }\r\n\r\n  getImageUrls = () => {\r\n    const that = this;\r\n    let imageContainer = [];\r\n    let imageCount = Object.keys(this.props.currentImages).length;\r\n    let returnedCount = 0;\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n\r\n    let storageRef = firebase.storage().ref();\r\n\r\n    Object.keys(this.props.currentImages).map((key, i) => {\r\n      const img = this.props.currentImages[key];\r\n      return storageRef\r\n        .child(`${siteName}/${img}`)\r\n        .getDownloadURL()\r\n        .then(url => {\r\n          imageContainer = [...imageContainer, { title: img, img: url, key }];\r\n          returnedCount++;\r\n\r\n          if (imageCount === returnedCount) {\r\n            that.props.setMediaImages(imageContainer);\r\n          }\r\n        })\r\n        .catch(error => {\r\n          // Handle any errors\r\n          console.log(error);\r\n        });\r\n    });\r\n  };\r\n\r\n  onDrop = (acceptedFiles, rejectedFiles) => {\r\n    // Do something with files\r\n    console.log(\"accepted\", acceptedFiles);\r\n    console.log(\"rejected\", rejectedFiles);\r\n    if (rejectedFiles.length !== 0) {\r\n      this.setState({ error: \"Rejected upload, incompatable file detected\" });\r\n      return;\r\n    }\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n    const user = firebase.auth().currentUser;\r\n\r\n    if (user) {\r\n      console.log(\"user is signed in\");\r\n      const file = acceptedFiles[0];\r\n      if (this.checkFileAlreadyExists(file)) {\r\n        this.setState({\r\n          error: `${\r\n            file.name\r\n          } already exists, please remove the old image first`\r\n        });\r\n        return;\r\n      }\r\n      firebase\r\n        .storage()\r\n        .ref()\r\n        .child(`${siteName}/${file.name}`)\r\n        .put(file)\r\n        .then(snapshot => {\r\n          console.log(\"Uploaded a blob or file!\");\r\n          console.log(snapshot);\r\n          this.addImageRefToDb(file);\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      // No user is signed in.\r\n      console.log(\" No user is signed in.\");\r\n      this.props.isTimedOut();\r\n    }\r\n  };\r\n\r\n  checkFileAlreadyExists = file => {\r\n    if (this.props.currentImages === null) return;\r\n\r\n    \r\n\r\n    const findImageRef = Object.keys(this.props.currentImages).filter(\r\n      (key, i) => {\r\n        const img = this.props.currentImages[key];\r\n        return img === file.name;\r\n      }\r\n    );\r\n\r\n    return !findImageRef.length ? false : true;\r\n  };\r\n  \r\n\r\n  addImageRefToDb = file => {\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n\r\n    var newPostKey = firebase\r\n      .database()\r\n      .ref()\r\n      .child(`${siteName}/site/images`)\r\n      .push().key;\r\n    var updates = { [newPostKey]: file.name };\r\n    const that = this;\r\n\r\n    return firebase\r\n      .database()\r\n      .ref()\r\n      .child(`${siteName}/site/images`)\r\n      .update(updates, function(error) {\r\n        if (error) {\r\n          // The write failed...\r\n          console.log(\"image ref in db write failed...\", error);\r\n        } else {\r\n          // Data saved successfully!\r\n          console.log(\"image ref in db saved successfully\");\r\n          that.props.refreshState();\r\n        }\r\n      });\r\n  };\r\n\r\n  selectedImage = (index, tile) => {\r\n    this.setState({\r\n      customURLtext: \"\",\r\n      activeIndex: index,\r\n      selectedValue: tile.img,\r\n      selectedName: tile.title\r\n    });\r\n  };\r\n\r\n  handleCustomURL = event => {\r\n    this.setState({\r\n      customURLtext: event.target.value,\r\n      activeIndex: null,\r\n      selectedValue: \"\",\r\n      selectedName: \"\"\r\n    });\r\n  };\r\n\r\n  confirmImage = () => {\r\n    const { customURLtext, selectedValue } = this.state;\r\n    const { tabItemReference } = this.props;\r\n    let image = customURLtext ? customURLtext : selectedValue;\r\n\r\n    this.props.onChangePageState(\r\n      { name: tabItemReference[0].name, value: image },\r\n      tabItemReference[1],\r\n      tabItemReference[2]\r\n    );\r\n    this.props.handleClose();\r\n  };\r\n\r\n  deleteImage = (imgUrl, name) => {\r\n    console.log(imgUrl, name);\r\n    this.setState({ deleteImgOpen: true });\r\n  };\r\n\r\n  confirmDelete = () => {\r\n    console.log(this.state, this.props);\r\n    const that = this;\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n\r\n    const img = this.props.imageURLs.find(\r\n      img => img.title === this.state.selectedName\r\n    );\r\n    let storageRef = firebase.storage().ref();\r\n\r\n    console.log(\"pre delete\");\r\n    firebase\r\n      .database()\r\n      .ref()\r\n      .child(`${siteName}/site/images/${img.key}`)\r\n      .remove()\r\n      .then(() => {\r\n        console.log(\"db delete succeeded!\");\r\n        storageRef\r\n          .child(`${siteName}/${img.title}`)\r\n          .delete()\r\n          .then(function() {\r\n            // File deleted successfully\r\n            console.log(\"storage img deleted\");\r\n            that.setState({ deleteImgOpen: false });\r\n            that.props.refreshState();\r\n          })\r\n          .catch(function(error) {\r\n            // Uh-oh, an error occurred!\r\n            console.log(\"storage error\", error);\r\n          });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  handleUploadOpen = () => {\r\n    this.setState({ uploadOpen: !this.state.uploadOpen });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"media props\", this.props);\r\n    const {\r\n      error,\r\n      uploadOpen,\r\n      customURL,\r\n      activeIndex,\r\n      customURLtext,\r\n      selectedName,\r\n      selectedValue\r\n    } = this.state;\r\n    const { imageURLs, currentImages } = this.props;\r\n\r\n    let dropZone = null;\r\n    let mediaTemplate = null;\r\n    let noMediaMessage = null;\r\n\r\n    if (imageURLs.length === 0 && currentImages) {\r\n      noMediaMessage = (\r\n        <div>\r\n          <p>\r\n            <i>\r\n              Loading media, if nothing appears after ten seconds. Please\r\n              refresh the page{\" \"}\r\n            </i>\r\n          </p>\r\n          <Spinner />\r\n        </div>\r\n      );\r\n    } else if (currentImages === null) {\r\n      noMediaMessage = (\r\n        <div>\r\n          <p>\r\n            <i>\r\n              Here is where you can add images to your website, Click upload\r\n              media to create your media library\r\n            </i>\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (uploadOpen && !this.props.isModal) {\r\n      dropZone = (\r\n        <Dropzone onDrop={this.onDrop} multiple={false} accept=\"image/*\">\r\n          {({ getRootProps, getInputProps, isDragActive }) => {\r\n            return (\r\n              <StyledDropArea\r\n                {...getRootProps()}\r\n                className={classNames(\"dropzone\", {\r\n                  \"dropzone--isActive\": isDragActive\r\n                })}\r\n              >\r\n                <input {...getInputProps()} />\r\n                {isDragActive ? (\r\n                  <p>Drop files here...</p>\r\n                ) : (\r\n                  <p>\r\n                    Try dropping some files here, or click to select files to\r\n                    upload.\r\n                  </p>\r\n                )}\r\n              </StyledDropArea>\r\n            );\r\n          }}\r\n        </Dropzone>\r\n      );\r\n    }\r\n\r\n    if (!this.props.isModal) {\r\n      mediaTemplate = (\r\n        <div>\r\n          {noMediaMessage}\r\n          <Button onClick={this.handleUploadOpen}>\r\n            {uploadOpen ? \"Close DropZone\" : \"Upload Media\"}\r\n          </Button>\r\n          {dropZone}\r\n          {error && <div>{error}</div>}\r\n          <Paper elevation={7}>\r\n            <ImgGridList\r\n              tileData={this.props.imageURLs}\r\n              isModal={false}\r\n              selectedIndex={activeIndex}\r\n              selectedImage={this.selectedImage}\r\n              deleteImage={this.deleteImage}\r\n            />\r\n          </Paper>\r\n        </div>\r\n      );\r\n    } else {\r\n      const selectedLabel = `Current Selection:  ${selectedName}`;\r\n      mediaTemplate = (\r\n        <IsMediaModal>\r\n          {noMediaMessage}\r\n          <Flex>\r\n            <Box opacity={customURL}>\r\n              <Button\r\n                onClick={() => {\r\n                  this.setState({ customURL: false });\r\n                }}\r\n              >\r\n                Use Media Library\r\n              </Button>\r\n            </Box>\r\n            <h2>OR ..</h2>\r\n            <Box opacity={!customURL}>\r\n              <Button\r\n                onClick={() => {\r\n                  this.setState({ customURL: true });\r\n                }}\r\n              >\r\n                {\" \"}\r\n                {!customURL ? \"Use\" : \"Close\"} custom URL location?\r\n              </Button>\r\n            </Box>\r\n          </Flex>\r\n          {/* <Fade in={customURL}> */}\r\n          {customURL ? (\r\n            <Input\r\n              inputtype=\"input\"\r\n              label=\"If you want to use an image stored elsewhere, enter the Url address below\"\r\n              value={customURLtext}\r\n              onChange={this.handleCustomURL}\r\n            />\r\n          ) : (\r\n            <div>\r\n              <Paper elevation={5}>\r\n                <ImgGridList\r\n                  tileData={this.props.imageURLs}\r\n                  isModal={true}\r\n                  selectedIndex={activeIndex}\r\n                  selectedImage={this.selectedImage}\r\n                />\r\n              </Paper>\r\n              <Input\r\n                inputtype=\"input\"\r\n                label={`${\r\n                  selectedValue ? selectedLabel : \"Select Media Image URL above\"\r\n                }`}\r\n                value={selectedValue}\r\n                disabled={true}\r\n                placeholder=\"No Media image selected\"\r\n              />\r\n            </div>\r\n          )}\r\n          {/* </Fade> */}\r\n          <Divider />\r\n          <br />\r\n          <Flex>\r\n            <Button onClick={this.props.handleClose}>Cancel</Button>\r\n            <Button onClick={this.confirmImage}>Confirm Image</Button>\r\n          </Flex>\r\n          <br />\r\n        </IsMediaModal>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {mediaTemplate}\r\n        <Modal\r\n          open={this.state.deleteImgOpen}\r\n          handleClose={() => this.setState({ deleteImgOpen: false })}\r\n          title=\"Delete image\"\r\n          description={`Are you sure you would like to delete the image ${\r\n            this.state.selectedName\r\n          }. \\n Please note that anywhere this image is used on the website will no longer work once the image is deleted.`}\r\n        >\r\n          <Flex>\r\n            <Button onClick={this.confirmDelete}>Confirm Delete</Button>\r\n            <Button onClick={() => this.setState({ deleteImgOpen: false })}>\r\n              Cancel\r\n            </Button>\r\n          </Flex>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledDropArea = styled.div`\r\n  border-style: dotted;\r\n  padding: 5px 20px;\r\n  margin: 20px 5px;\r\n  cursor: pointer;\r\n\r\n  /* desktop */\r\n  @media (min-width: 500px) {\r\n    min-width: 455px;\r\n  }\r\n`;\r\n\r\nconst IsMediaModal = styled.div`\r\n  margin-top: -40px;\r\n`;\r\n\r\nexport default Media;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Input from \"../../../components/UI/Input\";\r\nimport Button from \"../../../components/UI/Buttons/Button\";\r\nimport Flex from \"../../../components/UI/Wrappers/Flex\";\r\nimport Grid from \"../../../components/UI/Wrappers/Grid\";\r\nimport Spinner from \"../../../components/UI/Spinner\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nclass Template extends Component {\r\n  handleChange = event => {\r\n    event.preventDefault();\r\n    this.props.changeTemplateState(event.target, \"template\", null);\r\n  };\r\n\r\n  handlesubmit = event => {\r\n    event.preventDefault();\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n\r\n    const url = `/${siteName}/site/template`;\r\n    this.props.templateChangeSubmit(url, this.props.template);\r\n  };\r\n\r\n  handleCheckbox = check => event => {\r\n    console.log(check, event.target.checked);\r\n    const newevent = {\r\n      name: event.target.name,\r\n      value: event.target.checked\r\n    };\r\n    this.props.changeTemplateState(newevent, \"template\", null);\r\n  };\r\n\r\n  handleMediaModal = event => {\r\n    event.preventDefault();\r\n    this.props.openMediaModal(event.target, \"template\", null);\r\n  };\r\n\r\n  clearInput = inputName => {\r\n    const event = { name: inputName, value: \"\" };\r\n    this.props.changeTemplateState(event, \"template\", null);\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.template) return <div />;\r\n    //console.log('templateProps', this.props)\r\n    const buttonStyle = [{ value: \"contained\" }, { value: \"outlined\" }];\r\n    const {\r\n      navButtons,\r\n      siteButtons,\r\n      transparentHeader,\r\n      navLightTheme,\r\n      siteLogo,\r\n      version\r\n    } = this.props.template;\r\n\r\n    return (\r\n      <StyledTemplate>\r\n        <Flex>\r\n          <Input\r\n            inputtype=\"checkbox\"\r\n            sideLabel=\"Is the header toolbar transparent\"\r\n            name=\"transparentHeader\"\r\n            checked={transparentHeader}\r\n            handleChange={this.handleCheckbox}\r\n          />\r\n          <Input\r\n            inputtype=\"checkbox\"\r\n            sideLabel=\"Use Light theme for navigation Bar\"\r\n            name=\"navLightTheme\"\r\n            checked={navLightTheme}\r\n            handleChange={this.handleCheckbox}\r\n          />\r\n        </Flex>\r\n        <Input\r\n          inputtype=\"inputSelector\"\r\n          label=\"Website Logo\"\r\n          name=\"siteLogo\"\r\n          value={siteLogo}\r\n          onChange={this.handleChange}\r\n          onClick={this.handleMediaModal}\r\n          clearInput={this.clearInput}\r\n        />\r\n        <br />\r\n        <Grid cols=\"25% 25%\" colsLarge={\"35% 35%\"} colsMed={\"50% 50%\"}>\r\n          <Input\r\n            inputtype=\"select\"\r\n            label=\"Header Navigation button style\"\r\n            name=\"navButtons\"\r\n            value={navButtons}\r\n            items={buttonStyle}\r\n            onSelectChange={this.handleChange}\r\n          />\r\n          <Input\r\n            inputtype=\"select\"\r\n            label=\"Webpage button style\"\r\n            name=\"siteButtons\"\r\n            value={siteButtons}\r\n            items={buttonStyle}\r\n            onSelectChange={this.handleChange}\r\n          />\r\n          <Button variant={navButtons}>\r\n            {navButtons === \"contained\" ? \"Contained Style\" : \"Outlined Style\"}\r\n          </Button>\r\n          <Button variant={siteButtons}>\r\n            {siteButtons === \"contained\" ? \"Contained Style\" : \"Outlined Style\"}\r\n          </Button>\r\n        </Grid>\r\n        <br />\r\n        <hr />\r\n        <br />\r\n        <Flex justifyContent=\"flex-start\">\r\n          <Button margin=\"2px 5px 15px 20px\" onClick={this.handlesubmit}>\r\n            Update\r\n          </Button>\r\n          {this.props.isUpdating && <Spinner />}\r\n          {this.props.stateBackup && (\r\n            <Button\r\n              margin=\"2px 20px 15px 20px\"\r\n              onClick={this.props.cancelUpdate}\r\n            >\r\n              Undo Changes\r\n            </Button>\r\n          )}\r\n        </Flex>\r\n      </StyledTemplate>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledTemplate = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nexport default Template;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Input from \"../../../components/UI/Input\";\r\nimport Button from \"../../../components/UI/Buttons/Button\";\r\nimport Flex from \"../../../components/UI/Wrappers/Flex\";\r\nimport Grid from \"../../../components/UI/Wrappers/Grid\";\r\nimport Box from \"../../../components/UI/Wrappers/Box\";\r\nimport Spinner from \"../../../components/UI/Spinner\";\r\nimport Minimizer from \"../../../components/UI/Wrappers/Minimizer\";\r\n\r\nimport Dashboard from \"../../Dashboard/Dashboard\";\r\n\r\nimport BannerControls from '../../../components/admin-controls/BannerControls';\r\nimport MainTextControls from '../../../components/admin-controls/MainTextControls';\r\n\r\nclass Homepage extends Component {\r\n  state = {\r\n    previewOpen: false\r\n  };\r\n\r\n  handleChange = event => {\r\n    event.preventDefault();\r\n    this.props.changeHomepageState(event.target, \"home\", null);\r\n  };\r\n\r\n  handlesubmit = event => {\r\n    event.preventDefault();\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n\r\n    const url = `/${siteName}/site/home/content`;\r\n    this.props.homepageChangeSubmit(url, this.props.homePage.content);\r\n  };\r\n\r\n  handleCheckbox = check => event => {\r\n    console.log(check, event.target.checked);\r\n    const newevent = {\r\n      name: event.target.name,\r\n      value: event.target.checked\r\n    };\r\n    this.props.changeHomepageState(newevent, \"home\", null);\r\n  };\r\n\r\n  handleMediaModal = event => {\r\n    event.preventDefault();\r\n    this.props.openMediaModal(event.target, \"home\", null);\r\n  };\r\n\r\n  handleColourPicker = event => {\r\n    this.props.changeHomepageState(event.target, \"home\", null);\r\n  };\r\n\r\n  clearInput = inputName => {\r\n    const event = { name: inputName, value: \"\" };\r\n    this.props.changeHomepageState(event, \"home\", null);\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.homePage) return <div />;\r\n\r\n    const {\r\n      topBanner,\r\n      topBannerHalfwidth,\r\n      midBanner,\r\n      midBannerHalfwidth,\r\n      bottomBanner,\r\n      mainText,\r\n    } = this.props.homePage.content;\r\n    console.log(\"Homepage Props\", this.props);\r\n\r\n    return (\r\n      <div className=\"fullwidth\">\r\n        <StyledHomePage>\r\n          <div>\r\n            <Input\r\n              inputtype=\"inputSelector\"\r\n              label={`${\r\n                topBannerHalfwidth\r\n                  ? \"Top Banner Image (Inside Banner)\"\r\n                  : \"Top Banner Image\"\r\n              }`}\r\n              name=\"topBanner\"\r\n              value={topBanner}\r\n              onChange={this.handleChange}\r\n              onClick={this.handleMediaModal}\r\n              clearInput={this.clearInput}\r\n            />\r\n            {topBanner && (\r\n              <BannerControls \r\n                pos={'top'} \r\n                data={this.props.homePage.content} \r\n                handleCheckbox={this.handleCheckbox}\r\n                handleChange={this.handleChange}\r\n                handleMediaModal={this.handleMediaModal}\r\n                clearInput={this.clearInput}\r\n                handleColourPicker={this.handleColourPicker}\r\n                availableRoutes={this.props.availableRoutes}\r\n              />\r\n            )}\r\n            <Input\r\n              inputtype=\"inputSelector\"\r\n              label={`${\r\n                midBannerHalfwidth\r\n                  ? \"Middle Banner Image (Inside Banner)\"\r\n                  : \"Middle Banner Image\"\r\n              }`}\r\n              name=\"midBanner\"\r\n              value={midBanner}\r\n              onChange={this.handleChange}\r\n              onClick={this.handleMediaModal}\r\n              clearInput={this.clearInput}\r\n            />\r\n            {midBanner && (\r\n              <BannerControls \r\n                pos={'mid'} \r\n                data={this.props.homePage.content} \r\n                handleCheckbox={this.handleCheckbox}\r\n                handleChange={this.handleChange}\r\n                handleMediaModal={this.handleMediaModal}\r\n                clearInput={this.clearInput}\r\n                handleColourPicker={this.handleColourPicker}\r\n                availableRoutes={this.props.availableRoutes}\r\n              />\r\n            )}\r\n            <Input\r\n              inputtype=\"textarea\"\r\n              label=\"Main Body Text\"\r\n              name=\"mainText\"\r\n              value={mainText}\r\n              onChange={this.handleChange}\r\n            />\r\n            <MainTextControls \r\n                data={this.props.homePage.content} \r\n                pageID={'home'}\r\n                handleCheckbox={this.handleCheckbox}\r\n                handleChange={this.handleChange}\r\n                handleMediaModal={this.handleMediaModal}\r\n                clearInput={this.clearInput}\r\n                handleColourPicker={this.handleColourPicker}\r\n                availableRoutes={this.props.availableRoutes}\r\n            />\r\n\r\n          </div>\r\n          <Preview>\r\n            <Dashboard\r\n              pageInfo={this.props.homePage}\r\n              {...this.props}\r\n              template={this.props.template}\r\n              overlayBlocker={true}\r\n            />\r\n          </Preview>\r\n        </StyledHomePage>\r\n        <Flex justifyContent=\"flex-start\">\r\n          <Button margin=\"2px 5px 15px 20px\" onClick={this.handlesubmit}>\r\n            Update\r\n          </Button>\r\n          {this.props.isUpdating && <Spinner />}\r\n          {this.props.stateBackup && (\r\n            <Button\r\n              margin=\"2px 20px 15px 20px\"\r\n              onClick={this.props.cancelUpdate}\r\n            >\r\n              Undo Changes\r\n            </Button>\r\n          )}\r\n        </Flex>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Preview = styled.div`\r\n  display: block;\r\n  zoom: 30%;\r\n  padding-top: 56px;\r\n  box-shadow: 2px 2px 2px;\r\n\r\n  @media (max-width: 500px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst StyledHomePage = styled.div`\r\n  padding: 3vh;\r\n  display: grid;\r\n  grid-gap: 8px;\r\n  grid-template-columns: 65% 35%;\r\n`;\r\n\r\nexport default Homepage;\r\n","import React from \"react\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250\r\n    }\r\n  }\r\n};\r\n\r\nclass MultiSelect extends React.Component {\r\n  state = {\r\n    name: []\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ name: event.target.value });\r\n    if (this.props.handleChange) {\r\n      this.props.handleChange(event);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { label, items, name, value, margin, width } = this.props;\r\n\r\n    return (\r\n      <StyledSelect margin={margin} width={width}>\r\n        <FormControl>\r\n          <InputLabel htmlFor=\"select-multiple-chip\">{label}</InputLabel>\r\n          <Select\r\n            multiple\r\n            value={value || this.state.name}\r\n            onChange={this.handleChange}\r\n            input={<Input id=\"select-multiple-chip\" />}\r\n            name={name}\r\n            renderValue={selected => (\r\n              <div className={\"chips\"}>\r\n                {selected.map(value => (\r\n                  <Chip key={value} label={value} className={\"chip\"} />\r\n                ))}\r\n              </div>\r\n            )}\r\n            MenuProps={MenuProps}\r\n          >\r\n            {items.map(name => (\r\n              <MenuItem key={name} value={name}>\r\n                {name}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </StyledSelect>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledSelect = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;    \r\n    margin: ${props => props.margin || \"8px\"};\r\n\r\n    div {\r\n      /* margin: ${props => props.margin || \"8px\"}; */\r\n      width: ${props => props.width || \"400px\"};\r\n      /* min-width: ${props => props.minwidth || \"200px\"}; */\r\n      max-width: ${props => props.minwidth || \"450px\"};\r\n\r\n      .chips {\r\n        min-width:auto;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        \r\n\r\n        .chip{\r\n          margin: 2px;\r\n          flex-wrap: wrap;\r\n          width: auto;\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n`;\r\n\r\nexport default MultiSelect;\r\n","import React from \"react\";\r\nimport Input from \"../../../../components/UI/Input\";\r\nimport Minimizer from \"../../../../components/UI/Wrappers/Minimizer\";\r\nimport Flex from \"../../../../components/UI/Wrappers/Flex\";\r\n\r\nimport MultiSelect from \"../../../../components/UI/MultiSelect\";\r\n\r\nconst ContactUsPlugin = props => {\r\n  if (!props.plugin) return <div />;\r\n\r\n  const { contactUsActive, contactUsPages, contactUsEmail } = props.plugin;\r\n  console.log(\"contact us settings props\", props);\r\n  return (\r\n    <div>\r\n      <Flex>\r\n        <Input\r\n          inputtype=\"checkbox\"\r\n          sideLabel=\"Contact Us Plugin\"\r\n          parentObj={props.parentObj}\r\n          name=\"contactUsActive\"\r\n          checked={contactUsActive}\r\n          handleChange={props.handleCheckbox}\r\n        />\r\n        {contactUsActive && (\r\n          <MultiSelect\r\n            label=\"Select the pages where this plugin is available\"\r\n            items={props.availableRoutes}\r\n            name=\"contactUsPages\"\r\n            value={contactUsPages}\r\n            handleChange={props.handleChange}\r\n            margin={\"0 10px 20px 15px\"}\r\n          />\r\n        )}\r\n      </Flex>\r\n\r\n      {contactUsActive && (\r\n        <Minimizer padding={\"20px\"}>\r\n          <div>\r\n            <Input\r\n              inputtype=\"input\"\r\n              label=\"Enter Business email where contact requests are received\"\r\n              parentObj={props.parentObj}\r\n              name=\"contactUsEmail\"\r\n              value={contactUsEmail}\r\n              onChange={props.handleChange}\r\n            />\r\n          </div>\r\n        </Minimizer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactUsPlugin;\r\n","import React from \"react\";\r\nimport Input from \"../../../../components/UI/Input\";\r\nimport Minimizer from \"../../../../components/UI/Wrappers/Minimizer\";\r\nimport Flex from \"../../../../components/UI/Wrappers/Flex\";\r\n\r\nimport MultiSelect from \"../../../../components/UI/MultiSelect\";\r\n\r\nconst BookingPlugin = props => {\r\n    if (!props.plugin) return <div />;\r\n\r\n    const { bookingActive, bookingPages, bookingEmail, bookingForm, bookingCalendarID, bookingApiKey, bookingTimeSlotsAvailable, bookingTimeSlots, bookingGetCalandarAdvance, bookingSessions } = props.plugin;\r\n    console.log(\"booking settings props\", props);\r\n    return (\r\n        <div>\r\n            <Flex>\r\n                <Input\r\n                    inputtype=\"checkbox\"\r\n                    sideLabel=\"Booking Plugin\"\r\n                    parentObj={props.parentObj}\r\n                    name=\"bookingActive\"\r\n                    checked={bookingActive}\r\n                    handleChange={props.handleCheckbox}\r\n                />\r\n                {bookingActive && (\r\n                    <MultiSelect\r\n                        label=\"Select the pages where this plugin is available\"\r\n                        items={props.availableRoutes}\r\n                        name=\"bookingPages\"\r\n                        value={bookingPages}\r\n                        handleChange={props.handleChange}\r\n                        margin={\"0 10px 20px 15px\"}\r\n                    />\r\n                )}\r\n            </Flex>\r\n\r\n            {bookingActive && (\r\n                <Minimizer emptyHeight={\"200px\"} padding={\"20px\"}>\r\n                    <div>\r\n                        <Input\r\n                            inputtype=\"input\"\r\n                            label=\"Enter Business email where bookings are received\"\r\n                            parentObj={props.parentObj}\r\n                            name=\"bookingEmail\"\r\n                            value={bookingEmail}\r\n                            onChange={props.handleChange}\r\n                        />\r\n                        <Input\r\n                            inputtype=\"input\"\r\n                            label=\"Google Calendar Id\"\r\n                            parentObj={props.parentObj}\r\n                            name=\"bookingCalendarID\"\r\n                            value={bookingCalendarID}\r\n                            onChange={props.handleChange}\r\n                        />\r\n                        <Input\r\n                            inputtype=\"input\"\r\n                            label=\"Google Calendar Api Key\"\r\n                            parentObj={props.parentObj}\r\n                            name=\"bookingApiKey\"\r\n                            value={bookingApiKey}\r\n                            onChange={props.handleChange}\r\n                        />\r\n                        <Input\r\n                            inputtype=\"checkbox\"\r\n                            sideLabel=\"Include Contact form with booking calendar\"\r\n                            parentObj={props.parentObj}\r\n                            name=\"bookingForm\"\r\n                            checked={bookingForm}\r\n                            handleChange={props.handleCheckbox}\r\n                        />\r\n                        <br/>\r\n                        <h2>Booking Calandar options</h2>\r\n                        <Input\r\n                            inputtype=\"checkbox\"\r\n                            sideLabel=\"Timeslots available (leave unticked if booking times do not repeat)\"\r\n                            parentObj={props.parentObj}\r\n                            name=\"bookingTimeSlotsAvailable\"\r\n                            checked={bookingTimeSlotsAvailable}\r\n                            handleChange={props.handleCheckbox}\r\n                        />\r\n                        { bookingTimeSlotsAvailable &&\r\n                        <Input\r\n                            inputtype=\"input\"\r\n                            label=\"Enter the timeslots when events can be booked on a daily bases\"\r\n                            parentObj={props.parentObj}\r\n                            name=\"bookingTimeSlots\"\r\n                            value={bookingTimeSlots}\r\n                            placeholder={'eg 24 hour format..  09:30-10:00, 10:00-10:30, 14:30-15:00'}\r\n                            onChange={props.handleChange}\r\n                        />\r\n                        }\r\n                        <Input\r\n                            inputtype=\"select\"\r\n                            label=\"Select how far in the future customers can book\" \r\n                            value={bookingGetCalandarAdvance}\r\n                            name=\"bookingGetCalandarAdvance\"\r\n                            items={[\r\n                                {value : \"1 month\"},\r\n                                {value : \"2 months\"},\r\n                                {value : \"3 months\"},\r\n                                {value : \"6 months\"},\r\n                                {value : \"9 months\"},\r\n                                {value : \"12 months\"},                           \r\n                            ]}\r\n                            onSelectChange={props.handleChange}\r\n                        />\r\n                        <Input\r\n                            inputtype=\"input\"\r\n                            type=\"number\"\r\n                            label={bookingTimeSlotsAvailable ? 'Booking sessions available per timeslot' : 'Booking sessions available per day'}\r\n                            parentObj={props.parentObj}\r\n                            name=\"bookingSessions\"\r\n                            value={bookingSessions}\r\n                            placeholder={bookingTimeSlotsAvailable ? 'eg. Entering \"6\" will allow 6 bookings per timeslot' : 'eg. Entering \"6\" will allow 6 bookings per day'}\r\n                            onChange={props.handleChange}\r\n                        />\r\n\r\n\r\n                    </div>\r\n                </Minimizer>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookingPlugin;\r\n","import React, { Component } from \"react\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport Spinner from \"../../../components/UI/Spinner\";\r\nimport Flex from \"../../../components/UI/Wrappers/Flex\";\r\nimport Button from \"../../../components/UI/Buttons/Button\";\r\n\r\nimport ContactUsPlugin from \"./contactUsPlugin/ContactUsPlugin\";\r\nimport BookingPlugin from \"./bookingPlugin/BookingPlugin\";\r\n\r\nclass Plugins extends Component {\r\n  state = {\r\n    contactUsPlugin: false\r\n  };\r\n\r\n  accordianClick = name => {\r\n    this.setState({ [name]: !this.state[name] });\r\n  };\r\n\r\n  handleChange = (event, parentObj) => {\r\n    //event.preventDefault();\r\n    this.props.changePluginState(event.target, \"plugins\", parentObj);\r\n  };\r\n\r\n  handleCheckbox = (check, parentObj) => event => {\r\n    console.log(check, parentObj, event.target.checked);\r\n    const newevent = {\r\n      name: event.target.name,\r\n      value: event.target.checked\r\n    };\r\n    this.props.changePluginState(newevent, \"plugins\", parentObj);\r\n  };\r\n\r\n  handlesubmit = event => {\r\n    event.preventDefault();\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n\r\n    const url = `/${siteName}/site/plugins`;\r\n    this.props.pluginsChangeSubmit(url, this.props.plugins);\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.plugins)\r\n      return (\r\n        <div>\r\n          <Spinner />\r\n        </div>\r\n      );\r\n\r\n    console.log(\"plugins props\", this.props);\r\n\r\n    let availableRoutes = this.props.availableRoutes.map(route => {\r\n      const value = route.value === \"/\" ? \"home\" : route.value;\r\n      let str = value.split(\"/\").pop();\r\n      return str;\r\n    });\r\n\r\n    availableRoutes.unshift(\"All Pages\");\r\n\r\n    return (\r\n      <div>\r\n        <StyledPlugins>\r\n          <ContactUsPlugin\r\n            plugin={this.props.plugins.contactUs}\r\n            name={\"contactUsPlugin\"}\r\n            parentObj=\"contactUs\"\r\n            availableRoutes={availableRoutes}\r\n            accordianClick={this.accordianClick}\r\n            handleCheckbox={this.handleCheckbox}\r\n            handleChange={e => this.handleChange(e, \"contactUs\")}\r\n          />\r\n          <br/><br/>\r\n          <BookingPlugin\r\n            plugin={this.props.plugins.booking}\r\n            name={\"bookingPlugin\"}\r\n            parentObj=\"booking\"\r\n            availableRoutes={availableRoutes}\r\n            accordianClick={this.accordianClick}\r\n            handleCheckbox={this.handleCheckbox}\r\n            onSelectChange={this.onSelectChange}\r\n            handleChange={e => this.handleChange(e, \"booking\")}\r\n          />\r\n        </StyledPlugins>\r\n        <Flex justifyContent=\"flex-start\">\r\n          <Button margin=\"2px 5px 15px 20px\" onClick={this.handlesubmit}>\r\n            Update\r\n          </Button>\r\n          {this.props.isUpdating && <Spinner />}\r\n          {this.props.stateBackup && (\r\n            <Button\r\n              margin=\"2px 20px 15px 20px\"\r\n              onClick={this.props.cancelUpdate}\r\n            >\r\n              Undo Changes\r\n            </Button>\r\n          )}\r\n        </Flex>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledPlugins = styled.div`\r\n  width: 100%;\r\n`;\r\nexport default Plugins;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../store/actions/index\";\r\n\r\nimport Spinner from \"../../components/UI/Spinner\";\r\nimport Button from \"../../components/UI/Buttons/Button\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport Flex from \"../../components/UI/Wrappers/Flex\";\r\n\r\nclass AuthModal extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.isAuthenticated !== prevProps.isAuthenticated) {\r\n      this.props.isTimedOut();\r\n    }\r\n  }\r\n\r\n  onFormChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    this.props.onAuth(this.state.email, this.state.password, this.props.admin);\r\n  };\r\n\r\n  backToHome = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    console.log(\"AuthModal page props\", this.props);\r\n\r\n    let errorMessage = null;\r\n\r\n    if (this.props.error) {\r\n      // const errorCode={\r\n      //   EMAIL_NOT_FOUND: 'There is no user record corresponding to this email address',\r\n      //   INVALID_PASSWORD: 'The password entered was invalid - please try again',\r\n      //   USER_DISABLED: 'The user account has been disabled by an administrator.',\r\n      //   INVALID_EMAIL: 'The email address entered is invalid'\r\n      // }\r\n      errorMessage = (\r\n        // <p>{ errorCode[this.props.error.message] }</p>\r\n        <p>{this.props.error}</p>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>Administrator Login</div>\r\n        <br />\r\n        <Input\r\n          inputtype=\"input\"\r\n          placeholder=\"email\"\r\n          name=\"email\"\r\n          value={this.state.email}\r\n          onChange={this.onFormChange}\r\n        />\r\n        <Input\r\n          inputtype=\"input\"\r\n          placeholder=\"password\"\r\n          name=\"password\"\r\n          value={this.state.password}\r\n          onChange={this.onFormChange}\r\n        />\r\n        {errorMessage}\r\n        <br />\r\n        <Flex>\r\n          <Button onClick={this.backToHome}>Cancel</Button>\r\n          <Button onClick={this.submitHandler}>Submit</Button>\r\n        </Flex>\r\n\r\n        {this.props.loading && <Spinner />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.auth.loading,\r\n    error: state.auth.error,\r\n    admin: state.mainState.admin,\r\n    isAuthenticated: state.auth.userId !== null\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuth: (email, password, admin) =>\r\n      dispatch(actions.auth(email, password, admin))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AuthModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../store/actions/index\";\r\n\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport Accordian from \"../../components/UI/Accordian\";\r\nimport TabsMenu from \"./Navigation/TabsMenu\";\r\nimport Modal from \"../../components/UI/Modal\";\r\nimport Button from \"../../components/UI/Buttons/Button\";\r\nimport Toast from \"../../components/UI/Toast\";\r\nimport Flex from \"../../components/UI/Wrappers/Flex\";\r\n\r\nimport NewPageForm from \"../../components/Forms/NewPageForm\";\r\nimport Media from \"./media/Media\";\r\nimport Template from \"./template/Template\";\r\nimport Homepage from \"./homepage/Homepage\";\r\nimport Plugins from \"./plugins/Plugins\";\r\nimport AuthModal from \"../Auth/AuthModal\";\r\n\r\nclass Admin extends Component {\r\n  state = {\r\n    homepage_accordian: false,\r\n    navigation_accordian: false,\r\n    template_accordian: false,\r\n    media_accordian: false,\r\n\r\n    showSignIn: false,\r\n    newPageOpen: false,\r\n    deletePageModal: false,\r\n    pageToDelete: null,\r\n    openMediaModal: false,\r\n    mediaModalTabItemRef: [],\r\n    mediaImages: [],\r\n    newPageToast: null,\r\n    loading: false,\r\n    error: null\r\n  };\r\n\r\n  componentWillMount() {\r\n    console.log('adminPage - sitename', process.env.REACT_APP_SITENAME)\r\n\r\n    if (!this.props.isAuthenticated && process.env.NODE_ENV === \"production\"){\r\n      this.props.history.push('/authenticate-admin')\r\n    }\r\n\r\n    const user = firebase.auth().currentUser;\r\n\r\n    if (user) {\r\n      // User is signed in.\r\n      console.log(\"user is signed in\");\r\n    } else {\r\n      // No user is signed in.\r\n      console.log(\" No user is signed in.\");\r\n      // firebase.auth().signInWithCustomToken(token).catch(function(error) {\r\n      //     // Handle Errors here.\r\n      //     var errorCode = error.code;\r\n      //     var errorMessage = error.message;\r\n      //     // ...\r\n      // });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    if (prevProps.isAuthenticated && !this.props.isAuthenticated && process.env.NODE_ENV === \"production\"){\r\n      this.props.history.push('/authenticate-admin')\r\n    }\r\n  }\r\n\r\n  logoutHandler = () => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(\r\n        function() {\r\n          console.log(\"Signed Out\");\r\n        },\r\n        function(error) {\r\n          console.error(\"Sign Out Error\", error);\r\n        }\r\n      );\r\n    this.props.onLogoutClick();\r\n  };\r\n\r\n  openMediaModal = (pageInfo, key, parentKey) => {\r\n    console.log(\"opneMedia Modal\", pageInfo, key, parentKey);\r\n    this.setState({\r\n      openMediaModal: true,\r\n      mediaModalTabItemRef: [pageInfo, key, parentKey]\r\n    });\r\n  };\r\n\r\n  closeMediaModal = () => {\r\n    this.setState({ openMediaModal: false });\r\n  };\r\n\r\n  setMediaImages = mediaImages => {\r\n    this.setState({ mediaImages });\r\n  };\r\n\r\n  handleNewPageButton = event => {\r\n    event.preventDefault();\r\n    this.setState({ newPageOpen: !this.state.newPageOpen });\r\n  };\r\n\r\n  submitNewPage = newPage_State => {\r\n    console.log(\"newPage_State\", newPage_State);\r\n    const { title, checked, selectVal } = newPage_State;\r\n    const { navigationItems } = this.props;\r\n    const siteName = process.env.REACT_APP_SITENAME\r\n\r\n    const route = title.replace(/ /g, \"-\").toLowerCase();\r\n\r\n    const defaultContent = {\r\n      id: Date.now(),\r\n      mainText: `This is your newly added ${title} page`\r\n    };\r\n    let url = `/${siteName}/site/navigationItems`;\r\n\r\n    let newPageObj = {\r\n      title,\r\n      route,\r\n      selected: false,\r\n      content: defaultContent\r\n    };\r\n\r\n    if (checked) {\r\n      // const subpageIndex = this.props.navigationItems.findIndex(page => page.title === selectVal);\r\n\r\n      let subpageIndex = null;\r\n      for (let key in navigationItems) {\r\n        if (navigationItems[key].title === selectVal) {\r\n          subpageIndex = key;\r\n        }\r\n      }\r\n\r\n      url = `/${siteName}/site/navigationItems/${subpageIndex}/dropdownPages`;\r\n\r\n      newPageObj = {\r\n        title,\r\n        route,\r\n        content: defaultContent\r\n      };\r\n    }\r\n\r\n    this.setState({ loading: true, error: null }, () => {\r\n      const that = this;\r\n      const newPostKey = firebase\r\n        .database()\r\n        .ref()\r\n        .child(url)\r\n        .push().key;\r\n      const newPage = { [newPostKey]: newPageObj };\r\n\r\n      firebase\r\n        .database()\r\n        .ref()\r\n        .child(url)\r\n        .update(newPage, function(err) {\r\n          if (err) {\r\n            // The write failed...\r\n            that.setState({\r\n              loading: false,\r\n              error: err.code,\r\n              newPageOpen: false,\r\n              showSignIn: true\r\n            });\r\n          } else {\r\n            // Data saved successfully!\r\n            console.log(\"new page added successfully!\");\r\n            that.setState({\r\n              loading: false,\r\n              error: null,\r\n              newPageOpen: false,\r\n              newPageToast: \"New Page added successfully\"\r\n            });\r\n            that.props.onInitWebsiteState();\r\n          }\r\n\r\n          // axios.post(url, newPageObj)\r\n          //   .then(response => {\r\n          //     console.log(response)\r\n          //     this.props.onInitWebsiteState()\r\n          //   })\r\n          //   .then(() =>{\r\n          //     this.setState({loading: false, error: null, newPageOpen: false, newPageToast: 'New Page added successfully' })\r\n          //   })\r\n          //   .then(() => {\r\n          //     setTimeout(() => {\r\n          //         this.setState({newPageToast: null});\r\n          //     }, 7000 );\r\n          //   })\r\n          //   .catch(err => {\r\n          //     console.log(err);\r\n          //     this.setState({loading: false, error: err.response.data.error, newPageOpen: false, showSignIn: true})\r\n        });\r\n    });\r\n  };\r\n\r\n  handleDeletePageModal = (pageId, parentId) => {\r\n    if (this.state.deletePageModal) {\r\n      this.setState({ deletePageModal: false, pageToDelete: null });\r\n    } else {\r\n      this.setState({\r\n        deletePageModal: true,\r\n        pageToDelete: { id: pageId, parentId: parentId }\r\n      });\r\n    }\r\n  };\r\n\r\n  submitDeletePage = () => {\r\n    console.log(this.state.pageToDelete);\r\n    const that = this;\r\n    const { id, parentId } = this.state.pageToDelete;\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n\r\n    let url = `/${siteName}/site/navigationItems/${id}`;\r\n\r\n    if (parentId) {\r\n      url = `/${siteName}/site/navigationItems/${parentId}/dropdownPages/${id}`;\r\n    }\r\n\r\n    firebase\r\n      .database()\r\n      .ref(url)\r\n      .remove()\r\n      .then(function() {\r\n        console.log(\"Remove succeeded.\");\r\n        that.props.onInitWebsiteState();\r\n        that.setState({ deletePageModal: false, pageToDelete: null });\r\n      })\r\n      .catch(function(error) {\r\n        console.log(\"Remove failed: \" + error.message);\r\n      });\r\n  };\r\n\r\n  updatePage = (eventTarget, key, parent) => {\r\n    console.log(eventTarget.value, key, parent);\r\n    this.props.onChangePageState(eventTarget, key, parent);\r\n  };\r\n\r\n  updatePageSubmit = (pageInfo, key, parentKey) => {\r\n    console.log(pageInfo, key, parentKey);\r\n    const siteName = process.env.REACT_APP_SITENAME;\r\n\r\n    const URL = !parentKey\r\n      ? `/${siteName}/site/navigationItems/${key}/content`\r\n      : `/${siteName}/site/navigationItems/${parentKey}/dropdownPages/${key}/content`;\r\n\r\n    const user = firebase.auth().currentUser;\r\n\r\n    if (user) {\r\n      // User is signed in.\r\n      console.log(\"user is signed in\");\r\n      this.props.onUpdatePageSubmit(URL, pageInfo);\r\n    } else {\r\n      // No user is signed in.\r\n      console.log(\" No user is signed in.\");\r\n      this.setState({\r\n        showSignIn: true,\r\n        error: \"Permission denied. Please sign in again to Re-authenticate\"\r\n      });\r\n    }\r\n  };\r\n\r\n  timedOutUser = () => {\r\n    const user = firebase.auth().currentUser;\r\n    if (user) {\r\n      // User is signed in\r\n      this.setState({ showSignIn: false });\r\n    } else {\r\n      // No user is signed in.\r\n      console.log(\" No user is signed in.\");\r\n      this.setState({ showSignIn: true });\r\n    }\r\n  };\r\n\r\n  accordianClick = name => {\r\n    this.setState({ [name]: !this.state[name] });\r\n  };\r\n\r\n  // this.props.addPage(url, newPageObj)\r\n\r\n  render() {\r\n    console.log(\"Admin Page props\", this.props);\r\n    const {\r\n      media_accordian,\r\n      template_accordian,\r\n      homepage_accordian,\r\n      navigation_accordian,\r\n      plugins_accordian\r\n    } = this.state;\r\n\r\n    return (\r\n      <StyledAdminPage>\r\n        <Flex justifyContent=\"space-between\">\r\n          <h1 className=\"admin-title\">Admin Page</h1>\r\n          <Button onClick={this.logoutHandler}>logout</Button>\r\n        </Flex>\r\n        <Modal\r\n          open={this.state.showSignIn}\r\n          title=\"You have been logged out\"\r\n          description=\"Your administrator session has expired you will need to log back in to continue\"\r\n        >\r\n          <AuthModal\r\n            history={this.props.history}\r\n            isTimedOut={this.timedOutUser}\r\n          />\r\n        </Modal>\r\n        <div>\r\n          <Accordian\r\n            title={\"Media\"}\r\n            name={\"media_accordian\"}\r\n            onClick={e => this.accordianClick(e)}\r\n          >\r\n            {media_accordian && (\r\n              <Media\r\n                isAuthenticated={this.props.isAuthenticated}\r\n                isTimedOut={this.timedOutUser}\r\n                currentImages={this.props.images}\r\n                refreshState={this.props.onInitWebsiteState}\r\n                isModal={false}\r\n                imageURLs={this.state.mediaImages}\r\n                setMediaImages={this.setMediaImages}\r\n              />\r\n            )}\r\n          </Accordian>\r\n          <br />\r\n\r\n          <Accordian\r\n            title={\"Template\"}\r\n            name={\"template_accordian\"}\r\n            onClick={e => this.accordianClick(e)}\r\n          >\r\n            {template_accordian && (\r\n              <Template\r\n                template={this.props.template}\r\n                changeTemplateState={this.props.onChangePageState}\r\n                templateChangeSubmit={this.props.onUpdatePageSubmit}\r\n                isUpdating={this.props.isUpdating}\r\n                isError={this.props.isError}\r\n                stateBackup={this.props.stateBackup}\r\n                cancelUpdate={this.props.onRevertChanges}\r\n                openMediaModal={this.openMediaModal}\r\n              />\r\n            )}\r\n          </Accordian>\r\n          <br />\r\n\r\n          <Accordian\r\n            title={\"Homepage\"}\r\n            name={\"homepage_accordian\"}\r\n            onClick={e => this.accordianClick(e)}\r\n          >\r\n            {homepage_accordian && (\r\n              <Homepage\r\n                homePage={this.props.home}\r\n                changeHomepageState={this.props.onChangePageState}\r\n                homepageChangeSubmit={this.props.onUpdatePageSubmit}\r\n                isUpdating={this.props.isUpdating}\r\n                isError={this.props.isError}\r\n                stateBackup={this.props.stateBackup}\r\n                cancelUpdate={this.props.onRevertChanges}\r\n                openMediaModal={this.openMediaModal}\r\n                availableRoutes={this.props.availableRoutes}\r\n                template={this.props.template}\r\n                plugins={this.props.plugins}\r\n              />\r\n            )}\r\n          </Accordian>\r\n          <br />\r\n\r\n          <Accordian\r\n            title=\"Navigation and Pages\"\r\n            name={\"navigation_accordian\"}\r\n            onClick={e => this.accordianClick(e)}\r\n          >\r\n            {navigation_accordian && (\r\n              <div className=\"fullwidth\">\r\n                <Button onClick={this.handleNewPageButton}>\r\n                  Add a new page\r\n                </Button>\r\n\r\n                <Modal\r\n                  open={this.state.newPageOpen}\r\n                  navigationItems={this.props.navigationItems}\r\n                  handleClose={this.handleNewPageButton}\r\n                  title=\"Add a new Webpage\"\r\n                  description=\"Here you can add a new page to your website which will show in the header navigation. You can also make the new page a subpage of another navigation link\"\r\n                >\r\n                  <NewPageForm\r\n                    loading={this.state.loading}\r\n                    navigationItems={this.props.navigationItems}\r\n                    handleClose={this.handleNewPageButton}\r\n                    handleSubmit={this.submitNewPage}\r\n                  />\r\n                </Modal>\r\n\r\n                <Modal\r\n                  open={this.state.deletePageModal}\r\n                  navigationItems={this.props.navigationItems}\r\n                  handleClose={this.handleDeletePageModal}\r\n                  title=\"Delete Webpage\"\r\n                  description=\"You are about to delete selected page this is a permanent action, would you like to continue with deleting this page\"\r\n                >\r\n                  <Flex>\r\n                    <Button onClick={this.submitDeletePage}>Delete</Button>\r\n                    <Button onClick={this.handleDeletePageModal}>Cancel</Button>\r\n                  </Flex>\r\n                </Modal>\r\n\r\n                <br />\r\n                <br />\r\n                <TabsMenu\r\n                  navigationItems={this.props.navigationItems}\r\n                  updatePageSubmit={this.updatePageSubmit}\r\n                  onChange={this.updatePage}\r\n                  openMediaModal={this.openMediaModal}\r\n                  handlePageDelete={this.handleDeletePageModal}\r\n                  isUpdating={this.props.isUpdating}\r\n                  cancelUpdate={this.props.onRevertChanges}\r\n                  isError={this.props.isError}\r\n                  stateBackup={this.props.stateBackup}\r\n                  availableRoutes={this.props.availableRoutes}\r\n                  template={this.props.template}\r\n                  plugins={this.props.plugins}\r\n                />\r\n                <br />\r\n              </div>\r\n            )}\r\n          </Accordian>\r\n          <br />\r\n\r\n          <Accordian\r\n            title={\"Plugins\"}\r\n            name={\"plugins_accordian\"}\r\n            onClick={e => this.accordianClick(e)}\r\n          >\r\n            {plugins_accordian && (\r\n              <Plugins\r\n                plugins={this.props.plugins}\r\n                changePluginState={this.props.onChangePageState}\r\n                pluginsChangeSubmit={this.props.onUpdatePageSubmit}\r\n                availableRoutes={this.props.availableRoutes}\r\n                isUpdating={this.props.isUpdating}\r\n                isError={this.props.isError}\r\n                stateBackup={this.props.stateBackup}\r\n                cancelUpdate={this.props.onRevertChanges}\r\n              />\r\n            )}\r\n          </Accordian>\r\n\r\n          <Modal\r\n            open={this.state.openMediaModal}\r\n            title=\"Choose an image\"\r\n            description=\"Select the media location you would like to use\"\r\n            handleClose={this.closeMediaModal}\r\n          >\r\n            <Media\r\n              isModal={true}\r\n              isAuthenticated={this.props.isAuthenticated}\r\n              handleClose={this.closeMediaModal}\r\n              currentImages={this.props.images}\r\n              imageURLs={this.state.mediaImages}\r\n              setMediaImages={this.setMediaImages}\r\n              tabItemReference={this.state.mediaModalTabItemRef}\r\n              onChangePageState={this.props.onChangePageState}\r\n            />\r\n          </Modal>\r\n        </div>\r\n        {this.state.newPageToast !== null && (\r\n          <Toast message={this.state.newPageToast} />\r\n        )}\r\n        {this.props.updatePageToast !== null && (\r\n          <Toast message={this.props.updatePageToast} />\r\n        )}\r\n        {this.state.error && <Toast message={this.state.error} error={true} />}\r\n      </StyledAdminPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledAdminPage = styled.div`\r\n  background-color: #424242;\r\n  min-height: 100vh;\r\n  padding: 100px 50px;\r\n  margin-top: -75px;\r\n\r\n  .admin-title {\r\n    color: #f5f5f5;\r\n  }\r\n`;\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.userId !== null,\r\n    userId: state.auth.userId,\r\n    home: state.mainState.home,\r\n    navigationItems: state.mainState.navigationItems,\r\n    images: state.mainState.images,\r\n    stateBackup: state.mainState.state_copy,\r\n    updatePageToast: state.admin.pageUpdateToast,\r\n    isUpdating: state.admin.loading,\r\n    isError: state.admin.error,\r\n    availableRoutes: state.admin.routes,\r\n    template: state.mainState.template,\r\n    plugins: state.mainState.plugins\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onInitWebsiteState: () => dispatch(actions.initWebsiteState()),\r\n    onLogoutClick: () => dispatch(actions.logout()),\r\n    onChangePageState: (eventTarget, key, parent) =>\r\n      dispatch(actions.changePageState(eventTarget, key, parent)),\r\n    onUpdatePageSubmit: (pageInfo, url) =>\r\n      dispatch(actions.updatePageSubmit(pageInfo, url)),\r\n    onRevertChanges: () => dispatch(actions.revertStateChange())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Admin);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Page from \"../../components/page\";\r\n\r\nimport Admin from \"../../containers/Admin/Admin\";\r\n\r\nconst AdminRoute = ({ currentUser }) => (\r\n  <Page id=\"admin\" title=\"Admin\" noCrawl>\r\n    <Admin />\r\n  </Page>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  currentUser: state.auth.currentUser\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(AdminRoute);\r\n","import React from \"react\";\r\nimport Page from \"../../components/page\";\r\n\r\nimport Admin from \"../../containers/Admin/Admin\";\r\n\r\nconst Admin_TEST = props => {\r\n  console.log(\"admin_TEST.props\", props);\r\n  return (\r\n    <Page id=\"admin\" title=\"Admin\" noCrawl>\r\n      <Admin {...props}/>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Admin_TEST;\r\n"],"sourceRoot":""}