{"version":3,"sources":["app/routes/admin/index.js","app/routes/adminTest/index.js","app/components/UI/Accordian.js","app/components/UI/Toast.js","app/components/UI/Wrappers/Minimizer.js","app/components/admin-controls/BannerControls.js","app/components/admin-controls/MainTextControls.js","app/components/admin-controls/TestimonialsControls.js","app/containers/Admin/Navigation/TabItems.js/TabItems.js","app/containers/Admin/Navigation/TabsMenu.js","app/components/Forms/NewPageForm.js","app/containers/Admin/media/ImgGridList.js","app/containers/Admin/media/Media.js","app/containers/Admin/template/Template.js","app/containers/Admin/homepage/Homepage.js","app/components/UI/MultiSelect.js","app/containers/Admin/plugins/contactUsPlugin/ContactUsPlugin.js","app/containers/Admin/plugins/bookingPlugin/BookingPlugin.js","app/containers/Admin/plugins/testimonialPlugin/TestimonialPlugin.js","app/containers/Admin/plugins/Plugins.js","app/containers/Auth/AuthModal.js","app/containers/Admin/Admin.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","_components_page__WEBPACK_IMPORTED_MODULE_2__","_containers_Admin_Admin__WEBPACK_IMPORTED_MODULE_3__","connect","state","currentUser","auth","_ref","a","createElement","id","title","noCrawl","_components_page__WEBPACK_IMPORTED_MODULE_1__","_containers_Admin_Admin__WEBPACK_IMPORTED_MODULE_2__","Admin_TEST","props","console","log","StyledAccordian","styled","div","_templateObject","theme","primaryBackGroundColour","accordian","react_default","ExpansionPanel_default","onChange","onClick","name","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","children","Toast","open","handleClick","_this","setState","handleClose","event","reason","this","toastColour","error","success","StyledSnackBar","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","aria-describedby","message","action","IconButton_default","key","aria-label","color","Close_default","Component","Toast_templateObject","Minimizer","isOpen","handleMinimizer","StyledMinimizer","padding","Flex","margin","RemoveCircle_default","AddCircle_default","Collapse_default","in","className","Emtpy","emptyHeight","Minimizer_templateObject","_templateObject2","BannerControls","_this$props","pos","data","handleCheckbox","handleChange","handleMediaModal","clearInput","handleColourPicker","content","Object","keys","filter","fc","includes","map","c","replace","objectSpread","defineProperty","_content","Banner3D","BannerHalfwidth","BannerImgSize","BannerHWbackImg","BannerHWBackColour","BannerImgRoundHW","BannerImg3dHW","BannerTxtRightSide","BannerTxtLightTheme","BannerLogo","Bannerfade","BannerTitle","BannerSubtitle","BannerDescription","BannerBtnText","BannerLink","BannerTextBkgrnd","BannerTextBkgrndColor","BannerTextBkgrndAngled","BannerTextBkgrndRounded","Wrappers_Minimizer","Box","Input","inputtype","sideLabel","concat","checked","Fragment","label","value","mobile","type","min","max","changeColour","items","availableRoutes","MainTextContols","mainTextPosition","mainTextCenterTitle","mainTextRightSide","mainTextBackColour","mainTextImg","mainTextImgAlign","mainTextImgWidth","mainTextImgHeight","positionArray","Grid","cols","colsSmall","pageId","TestimonialsContols","testimonials_A","testimonials_B","testimonials_C","testimonials_D","testimonials_E","StyledTabItems","TabItems_templateObject","Preview","TabItems_templateObject2","DeletePageIcon","_templateObject3","TabItems","itemProps","dropdownPages","TabsMenu_TabMenu","navigationItems","parentId","parent","handlePageDelete","openMediaModal","updatePageSubmit","isUpdating","cancelUpdate","stateBackup","template","plugins","preventDefault","target","check","newevent","inputName","_props$itemProps$cont","topBanner","topBannerHalfwidth","midBanner","midBannerHalfwidth","bottomBanner","bottomBannerHalfwidth","mainText","testimonialsPosition","Paper_default","elevation","admin_controls_BannerControls","helpKey","MainTextControls","TestimonialsControls","pageID","Dashboard","assign","pageInfo","overlayBlocker","justifyContent","Button","Spinner","Delete_default","fontSize","TabMenu","disableTabText","topBannerOptions","midBannerOptions","bottomBannerOptions","prevProps","_this2","tabLabels","tabitems","index","item","Tab_default","TabItems_js_TabItems","StyledTabs","Tooltip_default","AppBar_default","position","Tabs_default","variant","scrollButtons","isError","UI_Toast","TabsMenu_templateObject","NewPageForm","_Component","_getPrototypeOf2","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","selectVal","onInputChange","_event$target","scrubbedVal","inherits","createClass","prop","handleSubmit","disabled","loading","TitlebarGridList","columns","spacing","activeIndex","selectedValue","selectedName","handleResize","windowSize","window","innerWidth","handleSelect","tile","selectedImage","addEventListener","removeEventListener","tileData","StyledGrid","GridList_default","cellHeight","GridListTile_default","style","height","ListSubheader_default","component","gridTileClass","selectedIndex","e","src","img","alt","GridListTileBar_default","actionIcon","isModal","deleteImage","ImgGridList_templateObject","Media","uploadOpen","customURL","customURLtext","deleteImgOpen","getImageUrls","that","assertThisInitialized","imageContainer","imageCount","currentImages","returnedCount","storageRef","firebase","storage","ref","i","child","process","getDownloadURL","then","url","toConsumableArray","setMediaImages","catch","onDrop","acceptedFiles","rejectedFiles","file","checkFileAlreadyExists","put","snapshot","addImageRefToDb","err","isTimedOut","newPostKey","database","push","updates","update","refreshState","handleCustomURL","confirmImage","_this$state","tabItemReference","image","onChangePageState","imgUrl","confirmDelete","imageURLs","find","remove","delete","handleUploadOpen","isAuthenticated","_this$state2","dropZone","mediaTemplate","noMediaMessage","dist_es","multiple","accept","getRootProps","getInputProps","isDragActive","StyledDropArea","classNames","dropzone--isActive","selectedLabel","IsMediaModal","opacity","ImgGridList","placeholder","Divider_default","Modal","description","Media_templateObject","Media_templateObject2","Template","changeTemplateState","handlesubmit","templateChangeSubmit","buttonStyle","_this$props$template","navButtons","siteButtons","transparentHeader","navLightTheme","siteLogo","version","StyledTemplate","colsLarge","colsMed","Template_templateObject","Homepage","previewOpen","changeHomepageState","homepageChangeSubmit","homePage","_this$props$homePage$","StyledHomePage","Homepage_Preview","mobileMargin","Homepage_templateObject","Homepage_templateObject2","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","width","MultiSelect","StyledSelect","FormControl_default","InputLabel_default","htmlFor","Select_default","input","Input_default","renderValue","selected","Chip_default","MenuItem_default","React","MultiSelect_templateObject","minwidth","ContactUsPlugin","plugin","_props$plugin","contactUsActive","contactUsPages","contactUsEmail","contactUsSubjectStrict","contactUsSubjectSelections","parentObj","UI_MultiSelect","BookingPlugin","bookingActive","bookingPages","bookingEmail","bookingCalendarID","bookingForm","bookingApiKey","bookingTimeSlotsAvailable","bookingTimeSlots","bookingGetCalandarAdvance","bookingSessions","bookingSubjectStrict","bookingSubjectSelections","TestimonialsPlugin","testimonialsActive","testimonialsPages","testimonialsEmail","Plugins","contactUsPlugin","accordianClick","changePluginState","pluginsChangeSubmit","route","split","pop","unshift","StyledPlugins","contactUsPlugin_ContactUsPlugin","contactUs","bookingPlugin_BookingPlugin","booking","TestimonialPlugin","testimonials","Plugins_templateObject","AuthModal","email","password","onFormChange","submitHandler","onAuth","admin","backToHome","history","errorMessage","mainState","userId","dispatch","actions","Admin","homepage_accordian","navigation_accordian","template_accordian","media_accordian","showSignIn","newPageOpen","deletePageModal","pageToDelete","mediaModalTabItemRef","mediaImages","newPageToast","logoutHandler","signOut","onLogoutClick","parentKey","closeMediaModal","handleNewPageButton","submitNewPage","newPage_State","toLowerCase","defaultContent","Date","now","newPageObj","subpageIndex","newPage","code","onInitWebsiteState","handleDeletePageModal","submitDeletePage","_this$state$pageToDel","updatePage","eventTarget","URL","onUpdatePageSubmit","timedOutUser","plugins_accordian","StyledAdminPage","Auth_AuthModal","Accordian","media_Media","images","template_Template","onRevertChanges","homepage_Homepage","home","Forms_NewPageForm","plugins_Plugins","updatePageToast","Admin_templateObject","state_copy","pageUpdateToast","routes"],"mappings":"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","file":"static/js/admin.676677b8.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Page from \"../../components/page\";\n\nimport Admin from \"../../containers/Admin/Admin\";\n\nconst AdminRoute = ({ currentUser }) => (\n  <Page id=\"admin\" title=\"Admin\" noCrawl>\n    <Admin />\n  </Page>\n);\n\nconst mapStateToProps = state => ({\n  currentUser: state.auth.currentUser\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(AdminRoute);\n","import React from \"react\";\nimport Page from \"../../components/page\";\n\nimport Admin from \"../../containers/Admin/Admin\";\n\nconst Admin_TEST = props => {\n  console.log(\"admin_TEST.props\", props);\n  return (\n    <Page id=\"admin\" title=\"Admin\" noCrawl>\n      <Admin {...props}/>\n    </Page>\n  );\n};\n\nexport default Admin_TEST;\n","import React from \"react\";\n\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nimport styled from \"styled-components\";\n\nconst accordian = props => (\n  <StyledAccordian>\n    <ExpansionPanel onChange={() => props.onClick(props.name)}>\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n        <div>{props.title}</div>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        {props.children ? props.children : <div />}\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  </StyledAccordian>\n);\n\nconst StyledAccordian = styled.div`\n    margin: 15px 5px;\n  \n    /* > div {\n        height: 20px !important;\n        width: 20px !important;\n        margin: \"theme.spacing.unit * 2\";\n        color: ${props => props.theme.primaryBackGroundColour};\n\n    } */\n`;\n\nexport default accordian;\n","import React, { Component } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport styled from \"styled-components\";\n\nclass Toast extends Component {\n  state = {\n    open: false\n  };\n\n  componentDidMount() {\n    this.setState({ open: true });\n  }\n\n  handleClick = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    this.setState({ open: false });\n  };\n\n  render() {\n    let toastColour = \"rgb(49, 49, 49)\";\n    if (this.props.error) toastColour = \"rgb(220, 52, 54)\";\n    if (this.props.success) toastColour = \"rgb(70,154,16)\";\n\n    return (\n      <StyledSnackBar toastColour={toastColour}>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\"\n          }}\n          open={this.state.open}\n          autoHideDuration={6000}\n          onClose={this.handleClose}\n          ContentProps={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          message={<span id=\"message-id\">{this.props.message}</span>}\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              onClick={this.handleClose}\n            >\n              <CloseIcon />\n            </IconButton>\n          ]}\n        />\n      </StyledSnackBar>\n    );\n  }\n}\n\nconst StyledSnackBar = styled.div`\n  > div div {\n    background-color: ${props => props.toastColour};\n    font-weight: ${props => (props.error ? \"bold\" : \"initial\")};\n  }\n`;\n\nexport default Toast;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport AddIcon from \"@material-ui/icons/AddCircle\";\nimport MinusIcon from \"@material-ui/icons/RemoveCircle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Flex from \"./Flex\";\nimport Collapse from \"@material-ui/core/Collapse\";\n\nclass Minimizer extends Component {\n  state = {\n    isOpen: false\n  };\n\n  handleMinimizer = () => {\n    this.setState({ isOpen: !this.state.isOpen });\n  };\n\n  render() {\n    const { isOpen } = this.state;\n\n    return (\n      <StyledMinimizer padding={this.props.padding}>\n        <Flex margin=\"0\">\n          <IconButton\n            aria-label=\"Add\"\n            color=\"primary\"\n            onClick={this.handleMinimizer}\n          >\n            {isOpen ? <MinusIcon /> : <AddIcon />}\n          </IconButton>\n          {isOpen ? (\n            <small onClick={this.handleMinimizer}>\n              Click to minimise options\n            </small>\n          ) : (\n            <small onClick={this.handleMinimizer}>\n              Click to expand further options\n            </small>\n          )}\n        </Flex>\n        <Collapse in={isOpen}>\n          {isOpen ? (\n            <div className=\"minimized_children\">{this.props.children}</div>\n          ) : (\n            <Emtpy emptyHeight={this.props.emptyHeight} />\n          )}\n        </Collapse>\n      </StyledMinimizer>\n    );\n  }\n}\n\nconst Emtpy = styled.div`\n  height: ${props => props.emptyHeight || \"500px\"};\n`;\n\nconst StyledMinimizer = styled.div`\n  border: 2px solid rgba(0, 0, 0, 0.2);\n  border-top: 0;\n  border-bottom-left-radius: 8px;\n  border-bottom-right-radius: 8px;\n  margin-bottom: 35px;\n\n  > div small {\n    cursor: pointer;\n  }\n\n  .minimized_children {\n    padding: ${props => props.padding || \"auto\"};\n  }\n`;\n\nexport default Minimizer;\n","import React, { Component } from 'react';\n\nimport Input from \"../UI/Input\";\nimport Flex from \"../UI/Wrappers/Flex\";\nimport Box from \"../UI/Wrappers/Box\";\nimport Minimizer from \"../UI/Wrappers/Minimizer\";\n\n\nclass BannerControls extends Component {\n\n    render() {\n        const { pos, data, handleCheckbox, handleChange, handleMediaModal, clearInput, handleColourPicker } = this.props\n        let content = {}\n\n        Object.keys(data)\n        .filter(fc => fc.includes(pos+'Banner'))\n        .map(c => {\n            const key = c.replace(pos, '')\n            return content = {...content, [key]: data[c] }\n        });\n\n        const {\n          Banner3D,\n          BannerHalfwidth,\n          BannerImgSize,\n          BannerHWbackImg,\n          BannerHWBackColour,\n          BannerImgRoundHW,\n          BannerImg3dHW,\n          BannerTxtRightSide,\n          BannerTxtLightTheme,\n          BannerLogo,\n          Bannerfade,\n          BannerTitle,\n          BannerSubtitle,\n          BannerDescription,\n          BannerBtnText,\n          BannerLink,\n          BannerTextBkgrnd,\n          BannerTextBkgrndColor,\n          BannerTextBkgrndAngled,\n          BannerTextBkgrndRounded\n\n        } = content\n\n        return (\n            <Minimizer>\n              <Box>\n                <Input\n                  inputtype=\"checkbox\"\n                  sideLabel={`Use the ${pos} banner image inside the banner`}\n                  name={pos+\"BannerHalfwidth\"}\n                  checked={BannerHalfwidth}\n                  handleChange={handleCheckbox}\n                />\n\n                <Input\n                  inputtype=\"checkbox\"\n                  sideLabel={`3d Shadow around the banner`}\n                  name={pos+\"Banner3D\"}\n                  checked={Banner3D}\n                  handleChange={handleCheckbox}\n                />\n                \n                {BannerHalfwidth && (\n                  <>\n                    <Input\n                      inputtype=\"checkbox\"\n                      sideLabel={`Inner Banner image 3d shadow`}\n                      name={pos+\"BannerImg3dHW\"}\n                      checked={BannerImg3dHW}\n                      handleChange={handleCheckbox}\n                    />\n                    <Input\n                      inputtype=\"inputSelector\"\n                      label=\"Banner Background Image\"\n                      name={pos+\"BannerHWbackImg\"}\n                      value={BannerHWbackImg}\n                      onChange={handleChange}\n                      onClick={handleMediaModal}\n                      clearInput={clearInput}\n                    />\n                    <Flex mobile>\n                      <Input\n                        inputtype=\"input\"\n                        type=\"number\"\n                        label=\"Inner Image Size (-100 to 100)\"\n                        name={pos+\"BannerImgSize\"}\n                        value={BannerImgSize}\n                        onChange={handleChange}\n                        min={'-100'}\n                        max={'100'}\n                        \n                      />\n                      <Input\n                        inputtype=\"input\"\n                        type=\"number\"\n                        label=\"Inner Image rounded (0 to 50)\"\n                        name={pos+\"BannerImgRoundHW\"}\n                        value={BannerImgRoundHW}\n                        onChange={handleChange}\n                        min={'0'}\n                        max={'50'}\n                        margin={'0 0 0 15px'}\n                      />\n                      \n                    </Flex>\n                    <Input\n                        inputtype=\"inputColourPicker\"\n                        label=\"Banner Background Colour\"\n                        name={pos+\"BannerHWBackColour\"}\n                        value={BannerHWBackColour}\n                        changeColour={handleColourPicker}\n                    />\n                  </>\n                )}\n\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Banner Text has a Background\"\n                    name={pos+\"BannerTextBkgrnd\"}\n                    checked={BannerTextBkgrnd}\n                    handleChange={handleCheckbox}\n                  />\n\n                  {BannerTextBkgrnd &&\n                    <>\n                    <Flex mobile>\n                      <Input\n                        inputtype=\"input\"\n                        type={'number'}\n                        label=\"Text Background angled (-50 to 50)\"\n                        name={pos+\"BannerTextBkgrndAngled\"}\n                        value={BannerTextBkgrndAngled}\n                        onChange={handleChange}\n                        min={'-50'}\n                        max={'50'}\n                      />\n                      <Input\n                        inputtype=\"input\"\n                        type={'number'}\n                        label=\"Text Background round edges (0-50)\"\n                        name={pos+\"BannerTextBkgrndRounded\"}\n                        value={BannerTextBkgrndRounded}\n                        onChange={handleChange}\n                        min={'0'}\n                        max={'50'}\n                      />\n                    </Flex>\n                    <Input\n                      inputtype=\"inputColourPicker\"\n                      label=\"Banner Text Background Colour\"\n                      name={pos+\"BannerTextBkgrndColor\"}\n                      value={BannerTextBkgrndColor}\n                      changeColour={handleColourPicker}\n                     \n                    />\n                    </>\n                  }\n\n                <Flex mobile>\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Banner Text Right Side\"\n                    name={pos+\"BannerTxtRightSide\"}\n                    checked={BannerTxtRightSide}\n                    handleChange={handleCheckbox}\n                  />\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Banner Light Text Color\"\n                    name={pos+\"BannerTxtLightTheme\"}\n                    checked={BannerTxtLightTheme}\n                    handleChange={handleCheckbox}\n                  />\n                </Flex>\n\n                <Flex mobile>\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Use Logo in banner\"\n                    name={pos+\"BannerLogo\"}\n                    checked={BannerLogo}\n                    handleChange={handleCheckbox}\n                  />\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Banner content fade in effect\"\n                    name={pos+\"Bannerfade\"}\n                    checked={Bannerfade}\n                    handleChange={handleCheckbox}\n                  />\n                </Flex>\n                <Input\n                  inputtype=\"input\"\n                  label=\"Banner Title\"\n                  name={pos+\"BannerTitle\"}\n                  value={BannerTitle}\n                  onChange={handleChange}\n                />\n                <Input\n                  inputtype=\"input\"\n                  label=\"Banner Subtitle\"\n                  name={pos+\"BannerSubtitle\"}\n                  value={BannerSubtitle}\n                  onChange={handleChange}\n                />\n                <Input\n                  inputtype=\"input\"\n                  label=\"Banner Description\"\n                  name={pos+\"BannerDescription\"}\n                  value={BannerDescription}\n                  onChange={handleChange}\n                />\n                <Flex mobile>\n                  <Input\n                    inputtype=\"input\"\n                    label=\"Banner Button Text\"\n                    name={pos+\"BannerBtnText\"}\n                    value={BannerBtnText}\n                    onChange={handleChange}\n                  />\n                  <Input\n                    inputtype=\"select\"\n                    label=\"Banner Link\"\n                    name={pos+\"BannerLink\"}\n                    value={BannerLink}\n                    items={this.props.availableRoutes}\n                    onChange={handleChange}\n                  />\n                </Flex>\n              </Box>\n            </Minimizer>\n\n        );\n    }\n}\n\nexport default BannerControls;","import React from 'react';\n\nimport Input from \"../UI/Input\";\nimport Flex from \"../UI/Wrappers/Flex\";\nimport Grid from \"../UI/Wrappers/Grid\";\nimport Box from \"../UI/Wrappers/Box\";\nimport Minimizer from \"../UI/Wrappers/Minimizer\";\n\nconst MainTextContols = (props) => {\n\n    const {data} = props\n    let content = {}\n\n    Object.keys(data)\n        .filter(fc => fc.includes('mainText'))\n        .map(c => {\n            return content = {...content, [c]: data[c] }\n        });\n    \n    console.log('content', content)\n    \n    const {\n      mainTextPosition,\n      mainTextCenterTitle,\n      mainTextRightSide,\n      mainTextBackColour,\n      mainTextImg,\n      mainTextImgAlign,\n      mainTextImgWidth,\n      mainTextImgHeight\n    } = content;\n    \n    const floatArray = [{ value: \"left\" }, { value: \"right\" }];\n\n    return (\n        <Minimizer>\n          <Box>\n            <Flex mobile>\n                <Input\n                inputtype=\"checkbox\"\n                sideLabel=\"Center Header text\"\n                name=\"mainTextCenterTitle\"\n                checked={mainTextCenterTitle}\n                handleChange={props.handleCheckbox}\n                />\n                <Input\n                inputtype=\"checkbox\"\n                sideLabel=\"Align Text Right Side\"\n                name=\"mainTextRightSide\"\n                checked={mainTextRightSide}\n                handleChange={props.handleCheckbox}\n                />\n            </Flex>\n            <Input\n                inputtype=\"select\"\n                label=\"Main Text Page Position\"\n                name=\"mainTextPosition\"\n                value={mainTextPosition}\n                items={props.positionArray}\n                onChange={props.handleChange}\n            />\n            <Input\n                inputtype=\"inputSelector\"\n                label=\"Add a Small Image\"\n                name=\"mainTextImg\"\n                value={mainTextImg}\n                onChange={props.handleChange}\n                onClick={props.handleMediaModal}\n                clearInput={props.clearInput}\n            />\n            <Grid cols={\"33% 33% 33%\"} margin={\"0 15px 0 0\"} colsSmall={'100%'}>\n                <Input\n                inputtype=\"select\"\n                label=\"Image align position\"\n                name=\"mainTextImgAlign\"\n                value={mainTextImgAlign}\n                items={floatArray}\n                onChange={props.handleChange}\n                />\n                <Input\n                inputtype=\"input\"\n                type=\"number\"\n                label=\"Banner Image Width\"\n                name=\"mainTextImgWidth\"\n                value={mainTextImgWidth || 200}\n                onChange={props.handleChange}\n                />\n                <Input\n                inputtype=\"input\"\n                type=\"number\"\n                label=\"Banner Image Height\"\n                name=\"mainTextImgHeight\"\n                value={mainTextImgHeight || 135}\n                onChange={props.handleChange}\n                />\n            </Grid>\n            <Input\n                inputtype=\"inputColourPicker\"\n                label=\"Banner Background Colour\"\n                name=\"mainTextBackColour\"\n                value={mainTextBackColour}\n                changeColour={props.handleColourPicker}\n                pageId={\"home\"}\n            />\n            </Box>\n        </Minimizer>\n    );\n};\n\nexport default MainTextContols;","import React from 'react';\n\nimport Input from \"../UI/Input\";\nimport Flex from \"../UI/Wrappers/Flex\";\nimport Grid from \"../UI/Wrappers/Grid\";\nimport Box from \"../UI/Wrappers/Box\";\nimport Minimizer from \"../UI/Wrappers/Minimizer\";\n\nconst TestimonialsContols = (props) => {\n\n    const {data} = props\n    let content = {}\n\n    Object.keys(data)\n        .filter(fc => fc.includes('testimonials'))\n        .map(c => {\n            return content = {...content, [c]: data[c] }\n        });\n    \n    console.log('content', content)\n    \n    const {\n        testimonials_A,\n        testimonials_B,\n        testimonials_C,\n        testimonials_D,\n        testimonials_E\n    } = content;\n\n    return (\n        <Minimizer>\n          <Box>\n            <Input\n                inputtype=\"input\"\n                label=\"Testimonial One\"\n                name=\"testimonials_A\"\n                value={testimonials_A}\n                onChange={props.handleChange}\n            />\n            <Input\n                inputtype=\"input\"\n                label=\"Testimonial Two\"\n                name=\"testimonials_B\"\n                value={testimonials_B}\n                onChange={props.handleChange}\n            />\n            <Input\n                inputtype=\"input\"\n                label=\"Testimonial Three\"\n                name=\"testimonials_C\"\n                value={testimonials_C}\n                onChange={props.handleChange}\n            />\n            <Input\n                inputtype=\"input\"\n                label=\"Testimonial Four\"\n                name=\"testimonials_D\"\n                value={testimonials_D}\n                onChange={props.handleChange}\n            />\n            <Input\n                inputtype=\"input\"\n                label=\"Testimonial Five\"\n                name=\"testimonials_E\"\n                value={testimonials_E}\n                onChange={props.handleChange}\n            />\n            {/* <Input\n                inputtype=\"select\"\n                label=\"Main Text Page Position\"\n                name=\"testimonialsPosition\"\n                value={testimonialsPosition}\n                items={props.positionArray}\n                onChange={props.handleChange}\n            />\n            <Input\n                inputtype=\"inputSelector\"\n                label=\"Add a Small Image\"\n                name=\"testimonialsImg\"\n                value={testimonialsImg}\n                onChange={props.handleChange}\n                onClick={props.handleMediaModal}\n                clearInput={props.clearInput}\n            />\n            <Grid cols={\"33% 33% 33%\"} margin={\"0 15px 0 0\"} colsSmall={'100%'}>\n                <Input\n                inputtype=\"select\"\n                label=\"Image align position\"\n                name=\"testimonialsImgAlign\"\n                value={testimonialsImgAlign}\n                items={floatArray}\n                onChange={props.handleChange}\n                />\n                <Input\n                inputtype=\"input\"\n                type=\"number\"\n                label=\"Banner Image Width\"\n                name=\"testimonialsImgWidth\"\n                value={testimonialsImgWidth || 200}\n                onChange={props.handleChange}\n                />\n                <Input\n                inputtype=\"input\"\n                type=\"number\"\n                label=\"Banner Image Height\"\n                name=\"testimonialsImgHeight\"\n                value={testimonialsImgHeight || 135}\n                onChange={props.handleChange}\n                />\n            </Grid>\n            <Input\n                inputtype=\"inputColourPicker\"\n                label=\"Banner Background Colour\"\n                name=\"testimonialsBackColour\"\n                value={testimonialsBackColour}\n                changeColour={props.handleColourPicker}\n                pageId={\"home\"}\n            /> */}\n            </Box>\n        </Minimizer>\n    );\n};\n\nexport default TestimonialsContols;","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Input from \"../../../../components/UI/Input\";\nimport TabMenu from \"../TabsMenu\";\nimport Button from \"../../../../components/UI/Buttons/Button\";\nimport Flex from \"../../../../components/UI/Wrappers/Flex\";\nimport Spinner from \"../../../../components/UI/Spinner\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport Dashboard from \"../../../Dashboard/Dashboard\";\n\nimport BannerControls from '../../../../components/admin-controls/BannerControls'\nimport MainTextControls from '../../../../components/admin-controls/MainTextControls'\nimport TestimonialsControls from '../../../../components/admin-controls/TestimonialsControls';\n\nconst TabItems = props => {\n  console.log(\"tabItems props\", props);\n  if (props.itemProps.dropdownPages) {\n    return (\n      <TabMenu\n        navigationItems={props.itemProps.dropdownPages}\n        parentId={props.pageId}\n        parent={props.children}\n        onChange={props.onChange}\n        handlePageDelete={props.handlePageDelete}\n        openMediaModal={props.openMediaModal}\n        updatePageSubmit={props.updatePageSubmit}\n        isUpdating={props.isUpdating}\n        cancelUpdate={props.cancelUpdate}\n        stateBackup={props.stateBackup}\n        availableRoutes={props.availableRoutes}\n        template={props.template}\n        plugins={props.plugins}\n      />\n    );\n  }\n\n  const handleChange = event => {\n    event.preventDefault();\n    props.onChange(event.target, props.pageId, props.parentId);\n  };\n\n  const handleCheckbox = check => event => {\n    console.log(check, event.target.checked);\n    const newevent = {\n      name: event.target.name,\n      value: event.target.checked\n    };\n    props.onChange(newevent, props.pageId, props.parentId);\n  };\n\n  const handleMediaModal = event => {\n    event.preventDefault();\n    props.openMediaModal(event.target, props.pageId, props.parentId);\n  };\n\n  const handleColourPicker = event => {\n    props.onChange(event.target, props.pageId, props.parentId);\n  };\n\n  const handlesubmit = event => {\n    event.preventDefault();\n    props.updatePageSubmit(\n      props.itemProps.content,\n      props.pageId,\n      props.parentId\n    );\n  };\n\n  const clearInput = inputName => {\n    const event = { name: inputName, value: \"\" };\n    props.onChange(event, props.pageId, props.parentId);\n  };\n\n  const deletePage = () => {\n    props.handlePageDelete(props.pageId, props.parentId);\n  };\n\n  const {\n    topBanner,\n    topBannerHalfwidth,\n    midBanner,\n    midBannerHalfwidth,\n    bottomBanner,\n    bottomBannerHalfwidth,\n    mainText,\n    testimonialsPosition,\n  } = props.itemProps.content;\n\n  const positionArray = [\n    { value: \"Top\" },\n    { value: \"Middle\" },\n    { value: \"Bottom\" }\n  ];\n\n  return (\n    <Paper elevation={20}>\n      <StyledTabItems>\n        <div>\n          {props.children}\n          <Input\n            inputtype=\"inputSelector\"\n            label={`${\n              topBannerHalfwidth\n                ? \"Top Banner Image (Inside Banner)\"\n                : \"Top Banner Image\"\n            }`}\n            name=\"topBanner\"\n            value={topBanner}\n            onChange={handleChange}\n            onClick={handleMediaModal}\n            clearInput={clearInput}\n          />\n          {topBanner && \n            <BannerControls \n              pos={'top'} \n              data={props.itemProps.content} \n              handleCheckbox={handleCheckbox}\n              handleChange={handleChange}\n              handleMediaModal={handleMediaModal}\n              clearInput={clearInput}\n              handleColourPicker={handleColourPicker}\n              availableRoutes={props.availableRoutes}\n              />\n          }\n\n          <Input\n            inputtype=\"inputSelector\"\n            label={`${\n              midBannerHalfwidth\n                ? \"Middle Banner Image (Inside Banner)\"\n                : \"Middle Banner Image\"\n            }`}\n            name=\"midBanner\"\n            value={midBanner}\n            onChange={handleChange}\n            onClick={handleMediaModal}\n            clearInput={clearInput}\n          />\n          {midBanner && (\n            <BannerControls \n              pos={'mid'} \n              data={props.itemProps.content} \n              handleCheckbox={handleCheckbox}\n              handleChange={handleChange}\n              handleMediaModal={handleMediaModal}\n              clearInput={clearInput}\n              handleColourPicker={handleColourPicker}\n              availableRoutes={props.availableRoutes}\n            />\n          )}\n\n          <Input\n            inputtype=\"inputSelector\"\n            label={`${\n              bottomBannerHalfwidth\n                ? \"Bottom Banner Image (Inside Banner)\"\n                : \"Bottom Banner Image\"\n            }`}\n            name=\"bottomBanner\"\n            value={bottomBanner}\n            onChange={handleChange}\n            onClick={handleMediaModal}\n            clearInput={clearInput}\n          />\n          {bottomBanner && (\n            <BannerControls \n              pos={'bottom'} \n              data={props.itemProps.content} \n              handleCheckbox={handleCheckbox}\n              handleChange={handleChange}\n              handleMediaModal={handleMediaModal}\n              clearInput={clearInput}\n              handleColourPicker={handleColourPicker}\n              availableRoutes={props.availableRoutes}\n            />\n          )}\n\n          <Input\n            inputtype=\"textarea\"\n            label=\"Main Body Text\"\n            name=\"mainText\"\n            value={mainText}\n            onChange={handleChange}\n            helpKey={'mainText_help'}\n          />\n          <MainTextControls \n            data={props.itemProps.content} \n            handleCheckbox={handleCheckbox}\n            handleChange={handleChange}\n            handleMediaModal={handleMediaModal}\n            clearInput={clearInput}\n            handleColourPicker={handleColourPicker}\n            availableRoutes={props.availableRoutes}\n            positionArray={positionArray}\n          />\n\n          <Input\n            inputtype=\"select\"\n            label=\"Testimonials Plugin Position\"\n            name=\"testimonialsPosition\"\n            value={testimonialsPosition}\n            onChange={handleChange}\n            items={positionArray}\n          />\n          <TestimonialsControls \n            data={props.itemProps.content} \n            pageID={props.pageId}\n            handleCheckbox={handleCheckbox}\n            handleChange={handleChange}\n            handleMediaModal={handleMediaModal}\n            clearInput={clearInput}\n            handleColourPicker={handleColourPicker}\n            availableRoutes={props.availableRoutes}\n          />\n        </div>\n        <Preview>\n          <Dashboard\n            pageInfo={props.itemProps}\n            {...props}\n            template={props.template}\n            plugins={props.plugins}\n            overlayBlocker={true}\n            name={props.pageId}\n          />\n        </Preview>\n      </StyledTabItems>\n      <Flex justifyContent={\"space-between\"}>\n        <div>\n          <Flex justifyContent=\"flex-start\">\n            <Button margin=\"2px 5px 15px 20px\" onClick={handlesubmit}>\n              Update\n            </Button>\n            {props.isUpdating && <Spinner />}\n            {props.stateBackup && (\n              <Button margin=\"2px 20px 15px 20px\" onClick={props.cancelUpdate}>\n                Undo Changes\n              </Button>\n            )}\n          </Flex>\n        </div>\n        <DeletePageIcon>\n          <IconButton onClick={deletePage}>\n            <DeleteIcon fontSize=\"large\" />\n          </IconButton>\n        </DeletePageIcon>\n      </Flex>\n    </Paper>\n  );\n};\n\nconst StyledTabItems = styled.div`\n  padding: 3vh;\n  display: grid;\n  grid-template-columns: 65% 35%;\n  grid-gap: 8px;\n\n  @media (max-width: 500px) {\n    grid-template-columns: 100%;\n  }\n\n`;\n\nconst Preview = styled.div`\n  display: block;\n  zoom: 30%;\n  padding-top: 56px;\n  box-shadow: 2px 2px 2px;\n\n`;\n\nconst DeletePageIcon = styled.div`\n  padding: 5px;\n`;\n\nexport default TabItems;\n","import React, { Component } from \"react\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport styled from \"styled-components\";\n\nimport Toast from \"../../../components/UI/Toast\";\n\nimport TabItems from \"./TabItems.js/TabItems\";\n\nexport default class TabMenu extends Component {\n  state = {\n    value: 0,\n    disableTabText: \"\",\n    topBannerOptions: true,\n    midBannerOptions: true,\n    bottomBannerOptions: true\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.stateBackup !== prevProps.stateBackup) {\n      if (this.props.stateBackup) {\n        this.setState({\n          disableTabText:\n            \"You have made updates to this page, please save or undo your changes before selecting a new page\"\n        });\n      } else {\n        this.setState({ disableTabText: \"\" });\n      }\n    }\n  }\n\n  handleChange = (event, value) => {\n    if (!this.props.stateBackup) {\n      this.setState({ value });\n    }\n  };\n\n  render() {\n    const { value } = this.state;\n    const { navigationItems, parent, parentId } = this.props;\n    console.log(\"tabMenu props\", this.props);\n    let tabLabels = null;\n    let tabitems = null;\n\n    if (navigationItems !== null) {\n      tabLabels = Object.keys(navigationItems).map((key, index) => {\n        const item = navigationItems[key];\n        //passes the item title down to tabItems, which then runs tabs again if there is a drop down, and passes a parent value back\n        return (\n          <Tab\n            key={index}\n            label={\n              parent ? parent.props.children + \" - \" + item.title : item.title\n            }\n          />\n        );\n      });\n\n      tabitems = Object.keys(navigationItems).map((key, index) => {\n        return (\n          value === index && (\n            <TabItems\n              key={index}\n              pageId={key}\n              parentId={parentId || null}\n              itemProps={navigationItems[key]}\n              onChange={this.props.onChange}\n              handlePageDelete={this.props.handlePageDelete}\n              openMediaModal={this.props.openMediaModal}\n              updatePageSubmit={this.props.updatePageSubmit}\n              isUpdating={this.props.isUpdating}\n              cancelUpdate={this.props.cancelUpdate}\n              stateBackup={this.props.stateBackup}\n              availableRoutes={this.props.availableRoutes}\n              template={this.props.template}\n              plugins={this.props.plugins}\n            >\n              <h2>{navigationItems[key].title}</h2>\n            </TabItems>\n          )\n        );\n      });\n\n      // tabLabels = navigationItems.map( (item, index) => {\n      //     //passes the item title down to tabItems, which then runs tabs again if there is a drop down, and passes a parent value back\n      //     return <Tab key={index} label={ parent ? parent+' - '+item.title : item.title} />\n      // })\n      // tabitems = navigationItems.map( (item, index) => {\n      //     return( value === index && <TabItems key={index} itemProps={item}>{item.title }</TabItems> )\n      // })\n    }\n\n    if (tabitems === null && tabLabels === null) return <div />;\n    return (\n      <StyledTabs>\n        <Tooltip title={this.state.disableTabText}>\n          <AppBar position=\"static\">\n            <Tabs\n              value={value}\n              onChange={this.handleChange}\n              variant=\"scrollable\"\n              scrollButtons=\"auto\"\n            >\n              {tabLabels}\n            </Tabs>\n          </AppBar>\n        </Tooltip>\n        {tabitems}\n        {this.props.isError && (\n          <Toast message={this.props.isError} error={true} />\n        )}\n      </StyledTabs>\n    );\n  }\n}\n\nconst StyledTabs = styled.div`\n  > header {\n    background-color: ${props => props.theme.primaryBackGroundColour};\n    z-index: 20;\n  }\n`;\n","import React, { Component } from \"react\";\nimport Input from \"../UI/Input\";\nimport Flex from \"../UI/Wrappers/Flex\";\nimport Button from \"../UI/Buttons/Button\";\nimport Spinner from \"../UI/Spinner\";\n\nexport class NewPageForm extends Component {\n  state = {\n    title: \"\",\n    checked: false,\n    selectVal: null\n  };\n\n  componentDidMount() {\n    if (this.props.navigationItems !== null) {\n      // this.setState({selectVal: this.props.navigationItems[0].title})\n      let title = \"\";\n      for (var prop in this.props.navigationItems) {\n        title = this.props.navigationItems[prop].title;\n        break;\n      }\n\n      this.setState({ selectVal: title });\n    }\n  }\n\n  handleCheckbox = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  onChange = event => {\n    this.setState({ selectVal: event.target.value });\n  };\n\n  onInputChange = event => {\n    const { value, name } = event.target;\n    const scrubbedVal = value.replace(/[^\\w\\s]/gi, \"\");\n\n    this.setState({ [name]: scrubbedVal });\n  };\n\n  render() {\n    console.log(\"newpageForm props\", this.props);\n    return (\n      <div>\n        <form>\n          <Input\n            inputtype=\"input\"\n            label=\"Page Title\"\n            name=\"title\"\n            value={this.state.title}\n            onChange={this.onInputChange}\n          />\n          {this.props.navigationItems !== null && (\n            <div>\n              <Input\n                inputtype=\"checkbox\"\n                sideLabel=\"Is this a dropdown SubPage\"\n                checked={this.state.checked}\n                handleChange={this.handleCheckbox}\n              />\n              <br />\n              {this.state.checked && (\n                <Input\n                  inputtype=\"select\"\n                  value={this.state.selectVal}\n                  label=\"Choose the parent page for this Subpage\"\n                  items={this.props.navigationItems}\n                  onChange={this.onChange}\n                />\n              )}\n            </div>\n          )}\n        </form>\n        <Flex justifyContent=\"flex-end\" margin=\"5px\">\n          <Button onClick={this.props.handleClose}>Cancel</Button>\n          <Button\n            onClick={() => this.props.handleSubmit(this.state)}\n            disabled={this.state.title === \"\" ? true : false}\n          >\n            Confirm\n          </Button>\n          {this.props.loading && <Spinner />}\n        </Flex>\n      </div>\n    );\n  }\n}\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//       //updateNewPageData: () => dispatch(actions.newPageData()),\n//   }\n// }\n\n//export default connect(null, mapDispatchToProps)(NewPageForm)\nexport default NewPageForm;\n","import React, { Component } from \"react\";\n\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport styled from \"styled-components\";\n\nclass TitlebarGridList extends Component {\n  state = {\n    columns: 5,\n    spacing: 20,\n    activeIndex: null,\n    selectedValue: \"\",\n    selectedName: \"\"\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.handleResize);\n    this.handleResize();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n\n  handleResize = () => {\n    const windowSize = window.innerWidth;\n    const columns = (windowSize > 768 && 5) || (windowSize <= 480 && 1) || 3;\n    const spacing = (windowSize > 768 && 20) || 8;\n\n    this.setState({\n      columns,\n      spacing\n    });\n  };\n\n  handleSelect = (event, index, tile) => {\n    this.props.selectedImage(index, tile);\n  };\n\n  render() {\n    const { tileData } = this.props;\n    if (!tileData || !tileData.length) return <div />;\n\n    return (\n      <StyledGrid>\n        <GridList\n          cellHeight={180}\n          className=\"gridList\"\n          cols={this.state.columns}\n          spacing={this.state.spacing}\n        >\n          <GridListTile\n            key=\"Subheader\"\n            cols={this.state.columns}\n            style={{ height: \"auto\" }}\n          >\n            <ListSubheader component=\"div\">\n              This is where your current websites images located.\n            </ListSubheader>\n          </GridListTile>\n          {tileData.map((tile, index) => {\n            const gridTileClass =\n              this.props.selectedIndex === index ? \"media active\" : \"media\";\n\n            return (\n              <GridListTile\n                key={tile.title}\n                className={gridTileClass}\n                onClick={e => this.handleSelect(e, index, tile)}\n              >\n                <img src={tile.img} alt={tile.title} />\n                <GridListTileBar\n                  title={tile.title}\n                  actionIcon={\n                    !this.props.isModal ? (\n                      <IconButton\n                        className=\"gridIcon\"\n                        onClick={() =>\n                          this.props.deleteImage(tile.img, tile.title)\n                        }\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    ) : (\n                      false\n                    )\n                  }\n                />\n              </GridListTile>\n            );\n          })}\n        </GridList>\n      </StyledGrid>\n    );\n  }\n}\n\nconst StyledGrid = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  /* justify-content: space-around; */\n  overflow: hidden;\n  margin: 20px 0;\n  padding: 10px;\n\n  .gridlist {\n    width: 100%;\n    height: 450px;\n  }\n\n  .media {\n    padding: 3px;\n    cursor: pointer;\n    -webkit-transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n    -moz-transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n    -ms-transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n    -o-transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n    transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n  }\n\n  .media.active {\n    border: 1px solid #09c;\n    border-radius: 5px;\n    box-shadow: 1px 1px 7px rgba(0, 200, 204, 0.7);\n    outline: none;\n  }\n\n  .gridIcon {\n    color: rgba(255, 255, 255, 0.54);\n  }\n`;\n\nexport default TitlebarGridList;\n","import React, { Component } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/storage\";\n\nimport classNames from \"classnames\";\n\nimport styled from \"styled-components\";\nimport Button from \"../../../components/UI/Buttons/Button\";\nimport Input from \"../../../components/UI/Input\";\nimport Flex from \"../../../components/UI/Wrappers/Flex\";\nimport Box from \"../../../components/UI/Wrappers/Box\";\nimport Modal from \"../../../components/UI/Modal\";\nimport Spinner from \"../../../components/UI/Spinner\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ImgGridList from \"./ImgGridList\";\n\nclass Media extends Component {\n  state = {\n    uploadOpen: false,\n    error: null,\n    customURL: false,\n    customURLtext: \"\",\n    activeIndex: null,\n    selectedValue: \"\",\n    selectedName: \"\",\n    deleteImgOpen: false\n  };\n\n  componentDidMount() {\n    console.log(\"mounted\");\n    this.getImageUrls();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.currentImages === null) return;\n\n    if (\n      this.props.currentImages !== prevProps.currentImages ||\n      this.props.isAuthenticated !== prevProps.isAuthenticated\n    ) {\n      this.getImageUrls();\n    }\n  }\n\n  getImageUrls = () => {\n    const that = this;\n    let imageContainer = [];\n    let imageCount = Object.keys(this.props.currentImages).length;\n    let returnedCount = 0;\n    const siteName = process.env.REACT_APP_SITENAME;\n\n    let storageRef = firebase.storage().ref();\n\n    Object.keys(this.props.currentImages).map((key, i) => {\n      const img = this.props.currentImages[key];\n      return storageRef\n        .child(`${siteName}/${img}`)\n        .getDownloadURL()\n        .then(url => {\n          imageContainer = [...imageContainer, { title: img, img: url, key }];\n          returnedCount++;\n\n          if (imageCount === returnedCount) {\n            that.props.setMediaImages(imageContainer);\n          }\n        })\n        .catch(error => {\n          // Handle any errors\n          console.log(error);\n        });\n    });\n  };\n\n  onDrop = (acceptedFiles, rejectedFiles) => {\n    // Do something with files\n    console.log(\"accepted\", acceptedFiles);\n    console.log(\"rejected\", rejectedFiles);\n    if (rejectedFiles.length !== 0) {\n      this.setState({ error: \"Rejected upload, incompatable file detected\" });\n      return;\n    }\n    const siteName = process.env.REACT_APP_SITENAME;\n    const user = firebase.auth().currentUser;\n\n    if (user) {\n      console.log(\"user is signed in\");\n      const file = acceptedFiles[0];\n      if (this.checkFileAlreadyExists(file)) {\n        this.setState({\n          error: `${\n            file.name\n          } already exists, please remove the old image first`\n        });\n        return;\n      }\n      firebase\n        .storage()\n        .ref()\n        .child(`${siteName}/${file.name}`)\n        .put(file)\n        .then(snapshot => {\n          console.log(\"Uploaded a blob or file!\");\n          console.log(snapshot);\n          this.addImageRefToDb(file);\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    } else {\n      // No user is signed in.\n      console.log(\" No user is signed in.\");\n      this.props.isTimedOut();\n    }\n  };\n\n  checkFileAlreadyExists = file => {\n    if (this.props.currentImages === null) return;\n\n    \n\n    const findImageRef = Object.keys(this.props.currentImages).filter(\n      (key, i) => {\n        const img = this.props.currentImages[key];\n        return img === file.name;\n      }\n    );\n\n    return !findImageRef.length ? false : true;\n  };\n  \n\n  addImageRefToDb = file => {\n    const siteName = process.env.REACT_APP_SITENAME;\n\n    var newPostKey = firebase\n      .database()\n      .ref()\n      .child(`${siteName}/site/images`)\n      .push().key;\n    var updates = { [newPostKey]: file.name };\n    const that = this;\n\n    return firebase\n      .database()\n      .ref()\n      .child(`${siteName}/site/images`)\n      .update(updates, function(error) {\n        if (error) {\n          // The write failed...\n          console.log(\"image ref in db write failed...\", error);\n        } else {\n          // Data saved successfully!\n          console.log(\"image ref in db saved successfully\");\n          that.props.refreshState();\n        }\n      });\n  };\n\n  selectedImage = (index, tile) => {\n    this.setState({\n      customURLtext: \"\",\n      activeIndex: index,\n      selectedValue: tile.img,\n      selectedName: tile.title\n    });\n  };\n\n  handleCustomURL = event => {\n    this.setState({\n      customURLtext: event.target.value,\n      activeIndex: null,\n      selectedValue: \"\",\n      selectedName: \"\"\n    });\n  };\n\n  confirmImage = () => {\n    const { customURLtext, selectedValue } = this.state;\n    const { tabItemReference } = this.props;\n    let image = customURLtext ? customURLtext : selectedValue;\n\n    this.props.onChangePageState(\n      { name: tabItemReference[0].name, value: image },\n      tabItemReference[1],\n      tabItemReference[2]\n    );\n    this.props.handleClose();\n  };\n\n  deleteImage = (imgUrl, name) => {\n    console.log(imgUrl, name);\n    this.setState({ deleteImgOpen: true });\n  };\n\n  confirmDelete = () => {\n    console.log(this.state, this.props);\n    const that = this;\n    const siteName = process.env.REACT_APP_SITENAME;\n\n    const img = this.props.imageURLs.find(\n      img => img.title === this.state.selectedName\n    );\n    let storageRef = firebase.storage().ref();\n\n    console.log(\"pre delete\");\n    firebase\n      .database()\n      .ref()\n      .child(`${siteName}/site/images/${img.key}`)\n      .remove()\n      .then(() => {\n        console.log(\"db delete succeeded!\");\n        storageRef\n          .child(`${siteName}/${img.title}`)\n          .delete()\n          .then(function() {\n            // File deleted successfully\n            console.log(\"storage img deleted\");\n            that.setState({ deleteImgOpen: false });\n            that.props.refreshState();\n          })\n          .catch(function(error) {\n            // Uh-oh, an error occurred!\n            console.log(\"storage error\", error);\n          });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  handleUploadOpen = () => {\n    this.setState({ uploadOpen: !this.state.uploadOpen });\n  };\n\n  render() {\n    console.log(\"media props\", this.props);\n    const {\n      error,\n      uploadOpen,\n      customURL,\n      activeIndex,\n      customURLtext,\n      selectedName,\n      selectedValue\n    } = this.state;\n    const { imageURLs, currentImages } = this.props;\n\n    let dropZone = null;\n    let mediaTemplate = null;\n    let noMediaMessage = null;\n\n    if (imageURLs.length === 0 && currentImages) {\n      noMediaMessage = (\n        <div>\n          <p>\n            <i>\n              Loading media, if nothing appears after ten seconds. Please\n              refresh the page{\" \"}\n            </i>\n          </p>\n          <Spinner />\n        </div>\n      );\n    } else if (currentImages === null) {\n      noMediaMessage = (\n        <div>\n          <p>\n            <i>\n              Here is where you can add images to your website, Click upload\n              media to create your media library\n            </i>\n          </p>\n        </div>\n      );\n    }\n\n    if (uploadOpen && !this.props.isModal) {\n      dropZone = (\n        <Dropzone onDrop={this.onDrop} multiple={false} accept=\"image/*\">\n          {({ getRootProps, getInputProps, isDragActive }) => {\n            return (\n              <StyledDropArea\n                {...getRootProps()}\n                className={classNames(\"dropzone\", {\n                  \"dropzone--isActive\": isDragActive\n                })}\n              >\n                <input {...getInputProps()} />\n                {isDragActive ? (\n                  <p>Drop files here...</p>\n                ) : (\n                  <p>\n                    Try dropping some files here, or click to select files to\n                    upload.\n                  </p>\n                )}\n              </StyledDropArea>\n            );\n          }}\n        </Dropzone>\n      );\n    }\n\n    if (!this.props.isModal) {\n      mediaTemplate = (\n        <div>\n          {noMediaMessage}\n          <Button onClick={this.handleUploadOpen}>\n            {uploadOpen ? \"Close DropZone\" : \"Upload Media\"}\n          </Button>\n          {dropZone}\n          {error && <div>{error}</div>}\n          <Paper elevation={7}>\n            <ImgGridList\n              tileData={this.props.imageURLs}\n              isModal={false}\n              selectedIndex={activeIndex}\n              selectedImage={this.selectedImage}\n              deleteImage={this.deleteImage}\n            />\n          </Paper>\n        </div>\n      );\n    } else {\n      const selectedLabel = `Current Selection:  ${selectedName}`;\n      mediaTemplate = (\n        <IsMediaModal>\n          {noMediaMessage}\n          <Flex mobile>\n            <Box opacity={customURL}>\n              <Button\n                onClick={() => {\n                  this.setState({ customURL: false });\n                }}\n              >\n                Use Media Library\n              </Button>\n            </Box>\n            <h2>OR ..</h2>\n            <Box opacity={!customURL}>\n              <Button\n                onClick={() => {\n                  this.setState({ customURL: true });\n                }}\n              >\n                {\" \"}\n                {!customURL ? \"Use\" : \"Close\"} custom URL location?\n              </Button>\n            </Box>\n          </Flex>\n          {/* <Fade in={customURL}> */}\n          {customURL ? (\n            <Input\n              inputtype=\"input\"\n              label=\"If you want to use an image stored elsewhere, enter the Url address below\"\n              value={customURLtext}\n              onChange={this.handleCustomURL}\n            />\n          ) : (\n            <div>\n              <Paper elevation={5}>\n                <ImgGridList\n                  tileData={this.props.imageURLs}\n                  isModal={true}\n                  selectedIndex={activeIndex}\n                  selectedImage={this.selectedImage}\n                />\n              </Paper>\n              <Input\n                inputtype=\"input\"\n                label={`${\n                  selectedValue ? selectedLabel : \"Select Media Image URL above\"\n                }`}\n                value={selectedValue}\n                disabled={true}\n                placeholder=\"No Media image selected\"\n              />\n            </div>\n          )}\n          {/* </Fade> */}\n          <Divider />\n          <br />\n          <Flex mobile>\n            <Button onClick={this.props.handleClose}>Cancel</Button>\n            <Button onClick={this.confirmImage}>Confirm Image</Button>\n          </Flex>\n          <br />\n        </IsMediaModal>\n      );\n    }\n\n    return (\n      <>\n        {mediaTemplate}\n        <Modal\n          open={this.state.deleteImgOpen}\n          handleClose={() => this.setState({ deleteImgOpen: false })}\n          title=\"Delete image\"\n          description={`Are you sure you would like to delete the image ${\n            this.state.selectedName\n          }. \\n Please note that anywhere this image is used on the website will no longer work once the image is deleted.`}\n        >\n          <Flex>\n            <Button onClick={this.confirmDelete}>Confirm Delete</Button>\n            <Button onClick={() => this.setState({ deleteImgOpen: false })}>\n              Cancel\n            </Button>\n          </Flex>\n        </Modal>\n      </>\n    );\n  }\n}\n\nconst StyledDropArea = styled.div`\n  border-style: dotted;\n  padding: 5px 20px;\n  margin: 20px 5px;\n  cursor: pointer;\n\n  /* desktop */\n  @media (min-width: 500px) {\n    min-width: 455px;\n  }\n`;\n\nconst IsMediaModal = styled.div`\n  margin-top: -40px;\n`;\n\nexport default Media;\n","import React, { Component } from \"react\";\n\nimport Input from \"../../../components/UI/Input\";\nimport Button from \"../../../components/UI/Buttons/Button\";\nimport Flex from \"../../../components/UI/Wrappers/Flex\";\nimport Grid from \"../../../components/UI/Wrappers/Grid\";\nimport Spinner from \"../../../components/UI/Spinner\";\n\nimport styled from \"styled-components\";\n\nclass Template extends Component {\n  handleChange = event => {\n    event.preventDefault();\n    this.props.changeTemplateState(event.target, \"template\", null);\n  };\n\n  handlesubmit = event => {\n    event.preventDefault();\n    const siteName = process.env.REACT_APP_SITENAME;\n\n    const url = `/${siteName}/site/template`;\n    this.props.templateChangeSubmit(url, this.props.template);\n  };\n\n  handleCheckbox = check => event => {\n    console.log(check, event.target.checked);\n    const newevent = {\n      name: event.target.name,\n      value: event.target.checked\n    };\n    this.props.changeTemplateState(newevent, \"template\", null);\n  };\n\n  handleMediaModal = event => {\n    event.preventDefault();\n    this.props.openMediaModal(event.target, \"template\", null);\n  };\n\n  clearInput = inputName => {\n    const event = { name: inputName, value: \"\" };\n    this.props.changeTemplateState(event, \"template\", null);\n  };\n\n  render() {\n    if (!this.props.template) return <div />;\n    //console.log('templateProps', this.props)\n    const buttonStyle = [{ value: \"contained\" }, { value: \"outlined\" }];\n    const {\n      navButtons,\n      siteButtons,\n      transparentHeader,\n      navLightTheme,\n      siteLogo,\n      version\n    } = this.props.template;\n\n    return (\n      <StyledTemplate>\n        <Flex mobile>\n          <Input\n            inputtype=\"checkbox\"\n            sideLabel=\"Is the header toolbar transparent\"\n            name=\"transparentHeader\"\n            checked={transparentHeader}\n            handleChange={this.handleCheckbox}\n          />\n          <Input\n            inputtype=\"checkbox\"\n            sideLabel=\"Use Light theme for navigation Bar\"\n            name=\"navLightTheme\"\n            checked={navLightTheme}\n            handleChange={this.handleCheckbox}\n          />\n        </Flex>\n        <Input\n          inputtype=\"inputSelector\"\n          label=\"Website Logo\"\n          name=\"siteLogo\"\n          value={siteLogo}\n          onChange={this.handleChange}\n          onClick={this.handleMediaModal}\n          clearInput={this.clearInput}\n        />\n        <br />\n        <Grid cols=\"25% 25%\" colsLarge={\"35% 35%\"} colsMed={\"50% 50%\"} colsSmall={'100%'}>\n          <Input\n            inputtype=\"select\"\n            label=\"Header Navigation button style\"\n            name=\"navButtons\"\n            value={navButtons}\n            items={buttonStyle}\n            onChange={this.handleChange}\n          />\n          <Input\n            inputtype=\"select\"\n            label=\"Webpage button style\"\n            name=\"siteButtons\"\n            value={siteButtons}\n            items={buttonStyle}\n            onChange={this.handleChange}\n          />\n          <Button variant={navButtons}>\n            {navButtons === \"contained\" ? \"Contained Style\" : \"Outlined Style\"}\n          </Button>\n          <Button variant={siteButtons}>\n            {siteButtons === \"contained\" ? \"Contained Style\" : \"Outlined Style\"}\n          </Button>\n        </Grid>\n        <br />\n        <hr />\n        <br />\n        <Flex justifyContent=\"flex-start\">\n          <Button margin=\"2px 5px 15px 20px\" onClick={this.handlesubmit}>\n            Update\n          </Button>\n          {this.props.isUpdating && <Spinner />}\n          {this.props.stateBackup && (\n            <Button\n              margin=\"2px 20px 15px 20px\"\n              onClick={this.props.cancelUpdate}\n            >\n              Undo Changes\n            </Button>\n          )}\n        </Flex>\n      </StyledTemplate>\n    );\n  }\n}\n\nconst StyledTemplate = styled.div`\n  width: 100%;\n`;\n\nexport default Template;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport Input from \"../../../components/UI/Input\";\nimport Button from \"../../../components/UI/Buttons/Button\";\nimport Flex from \"../../../components/UI/Wrappers/Flex\";\nimport Grid from \"../../../components/UI/Wrappers/Grid\";\nimport Box from \"../../../components/UI/Wrappers/Box\";\nimport Spinner from \"../../../components/UI/Spinner\";\nimport Minimizer from \"../../../components/UI/Wrappers/Minimizer\";\n\nimport Dashboard from \"../../Dashboard/Dashboard\";\n\nimport BannerControls from '../../../components/admin-controls/BannerControls';\nimport MainTextControls from '../../../components/admin-controls/MainTextControls';\nimport TestimonialsControls from '../../../components/admin-controls/TestimonialsControls';\nclass Homepage extends Component {\n  state = {\n    previewOpen: false\n  };\n\n  handleChange = event => {\n    event.preventDefault();\n    this.props.changeHomepageState(event.target, \"home\", null);\n  };\n\n  handlesubmit = event => {\n    event.preventDefault();\n    const siteName = process.env.REACT_APP_SITENAME;\n\n    const url = `/${siteName}/site/home/content`;\n    this.props.homepageChangeSubmit(url, this.props.homePage.content);\n  };\n\n  handleCheckbox = check => event => {\n    console.log(check, event.target.checked);\n    const newevent = {\n      name: event.target.name,\n      value: event.target.checked\n    };\n    this.props.changeHomepageState(newevent, \"home\", null);\n  };\n\n  handleMediaModal = event => {\n    event.preventDefault();\n    this.props.openMediaModal(event.target, \"home\", null);\n  };\n\n  handleColourPicker = event => {\n    this.props.changeHomepageState(event.target, \"home\", null);\n  };\n\n  clearInput = inputName => {\n    const event = { name: inputName, value: \"\" };\n    this.props.changeHomepageState(event, \"home\", null);\n  };\n\n  render() {\n    if (!this.props.homePage) return <div />;\n\n    const {\n      topBanner,\n      topBannerHalfwidth,\n      midBanner,\n      midBannerHalfwidth,\n      bottomBanner,\n      bottomBannerHalfwidth,\n      mainText,\n      testimonialsPosition\n    } = this.props.homePage.content;\n    console.log(\"Homepage Props\", this.props);\n\n    const positionArray = [\n      { value: \"Top\" },\n      { value: \"Middle\" },\n      { value: \"Bottom\" }\n    ];\n\n    return (\n      <div className=\"fullwidth\">\n        <StyledHomePage>\n          <div>\n            <Input\n              inputtype=\"inputSelector\"\n              label={`${\n                topBannerHalfwidth\n                  ? \"Top Banner Image (Inside Banner)\"\n                  : \"Top Banner Image\"\n              }`}\n              name=\"topBanner\"\n              value={topBanner}\n              onChange={this.handleChange}\n              onClick={this.handleMediaModal}\n              clearInput={this.clearInput}\n            />\n            {topBanner && (\n              <BannerControls \n                pos={'top'} \n                data={this.props.homePage.content} \n                handleCheckbox={this.handleCheckbox}\n                handleChange={this.handleChange}\n                handleMediaModal={this.handleMediaModal}\n                clearInput={this.clearInput}\n                handleColourPicker={this.handleColourPicker}\n                availableRoutes={this.props.availableRoutes}\n              />\n            )}\n\n            <Input\n              inputtype=\"inputSelector\"\n              label={`${\n                midBannerHalfwidth\n                  ? \"Middle Banner Image (Inside Banner)\"\n                  : \"Middle Banner Image\"\n              }`}\n              name=\"midBanner\"\n              value={midBanner}\n              onChange={this.handleChange}\n              onClick={this.handleMediaModal}\n              clearInput={this.clearInput}\n            />\n            {midBanner && (\n              <BannerControls \n                pos={'mid'} \n                data={this.props.homePage.content} \n                handleCheckbox={this.handleCheckbox}\n                handleChange={this.handleChange}\n                handleMediaModal={this.handleMediaModal}\n                clearInput={this.clearInput}\n                handleColourPicker={this.handleColourPicker}\n                availableRoutes={this.props.availableRoutes}\n              />\n            )}\n\n            <Input\n              inputtype=\"inputSelector\"\n              label={`${\n                bottomBannerHalfwidth\n                  ? \"Bottom Banner Image (Inside Banner)\"\n                  : \"Bottom Banner Image\"\n              }`}\n              name=\"bottomBanner\"\n              value={bottomBanner}\n              onChange={this.handleChange}\n              onClick={this.handleMediaModal}\n              clearInput={this.clearInput}\n            />\n            {bottomBanner && (\n              <BannerControls \n                pos={'bottom'} \n                data={this.props.homePage.content} \n                handleCheckbox={this.handleCheckbox}\n                handleChange={this.handleChange}\n                handleMediaModal={this.handleMediaModal}\n                clearInput={this.clearInput}\n                handleColourPicker={this.handleColourPicker}\n                availableRoutes={this.props.availableRoutes}\n              />\n            )}\n\n            <Input\n              inputtype=\"textarea\"\n              label=\"Main Body Text\"\n              name=\"mainText\"\n              value={mainText}\n              onChange={this.handleChange}\n              helpKey={'mainText_help'}\n            />\n            <MainTextControls \n                data={this.props.homePage.content} \n                pageID={'home'}\n                handleCheckbox={this.handleCheckbox}\n                handleChange={this.handleChange}\n                handleMediaModal={this.handleMediaModal}\n                clearInput={this.clearInput}\n                handleColourPicker={this.handleColourPicker}\n                availableRoutes={this.props.availableRoutes}\n                positionArray={positionArray}\n            />\n\n            <Input\n              inputtype=\"select\"\n              label=\"Testimonials Plugin Position\"\n              name=\"testimonialsPosition\"\n              value={testimonialsPosition}\n              onChange={this.handleChange}\n              items={positionArray}\n            />\n            <TestimonialsControls \n                data={this.props.homePage.content} \n                pageID={'home'}\n                handleCheckbox={this.handleCheckbox}\n                handleChange={this.handleChange}\n                handleMediaModal={this.handleMediaModal}\n                clearInput={this.clearInput}\n                handleColourPicker={this.handleColourPicker}\n                availableRoutes={this.props.availableRoutes}\n            />\n\n          </div>\n          <Preview>\n            <Dashboard\n              pageInfo={this.props.homePage}\n              {...this.props}\n              template={this.props.template}\n              overlayBlocker={true}\n              name={'Home'}\n            />\n          </Preview>\n        </StyledHomePage>\n        <Flex justifyContent=\"flex-start\" mobile>\n          <Button \n            margin=\"2px 5px 15px 20px\" \n            onClick={this.handlesubmit} \n            mobileMargin={'15px'}\n          >\n            Update\n          </Button>\n          {this.props.isUpdating && <Spinner />}\n          {this.props.stateBackup && (\n            <Button\n              margin=\"2px 20px 15px 20px\"\n              onClick={this.props.cancelUpdate}\n              mobileMargin={'0'}\n            >\n              Undo Changes\n            </Button>\n          )}\n        </Flex>\n      </div>\n    );\n  }\n}\n\nconst Preview = styled.div`\n  display: block;\n  zoom: 30%;\n  padding-top: 56px;\n  box-shadow: 2px 2px 2px;\n`;\n\nconst StyledHomePage = styled.div`\n  padding: 3vh;\n  display: grid;\n  grid-gap: 8px;\n  grid-template-columns: 65% 35%;\n\n  @media (max-width: 500px) {\n    grid-template-columns: 100%;\n    padding: 0;\n  }\n\n`;\n\nexport default Homepage;\n","import React from \"react\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Chip from \"@material-ui/core/Chip\";\n\nimport styled from \"styled-components\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nclass MultiSelect extends React.Component {\n  state = {\n    name: []\n  };\n\n  handleChange = event => {\n    this.setState({ name: event.target.value });\n    if (this.props.handleChange) {\n      this.props.handleChange(event);\n    }\n  };\n\n  render() {\n    const { label, items, name, value, margin, width } = this.props;\n\n    return (\n      <StyledSelect margin={margin} width={width}>\n        <FormControl>\n          <InputLabel htmlFor=\"select-multiple-chip\">{label}</InputLabel>\n          <Select\n            multiple\n            value={value || this.state.name}\n            onChange={this.handleChange}\n            input={<Input id=\"select-multiple-chip\" />}\n            name={name}\n            renderValue={selected => (\n              <div className={\"chips\"}>\n                {selected.map(value => (\n                  <Chip key={value} label={value} className={\"chip\"} />\n                ))}\n              </div>\n            )}\n            MenuProps={MenuProps}\n          >\n            {items.map(name => (\n              <MenuItem key={name} value={name}>\n                {name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </StyledSelect>\n    );\n  }\n}\n\nconst StyledSelect = styled.div`\n    display: flex;\n    flex-wrap: wrap;    \n    margin: ${props => props.margin || \"8px\"};\n\n    div {\n      /* margin: ${props => props.margin || \"8px\"}; */\n      width: ${props => props.width || \"400px\"};\n      /* min-width: ${props => props.minwidth || \"200px\"}; */\n      max-width: ${props => props.minwidth || \"450px\"};\n\n      .chips {\n        min-width:auto;\n        display: flex;\n        flex-wrap: wrap;\n        \n\n        .chip{\n          margin: 2px;\n          flex-wrap: wrap;\n          width: auto;\n        }\n\n      }\n      \n      @media(max-width: 500px){\n        width: ${props => props.mobile || '175px'};\n      }\n    }\n\n   \n\n`;\n\nexport default MultiSelect;\n","import React from \"react\";\nimport Input from \"../../../../components/UI/Input\";\nimport Minimizer from \"../../../../components/UI/Wrappers/Minimizer\";\nimport Flex from \"../../../../components/UI/Wrappers/Flex\";\n\nimport MultiSelect from \"../../../../components/UI/MultiSelect\";\n\nconst ContactUsPlugin = props => {\n  if (!props.plugin) return <div />;\n\n  const { contactUsActive, contactUsPages, contactUsEmail, contactUsSubjectStrict, contactUsSubjectSelections } = props.plugin;\n  console.log(\"contact us settings props\", props);\n  return (\n    <div>\n      <Flex>\n        <Input\n          inputtype=\"checkbox\"\n          sideLabel=\"Contact Us Plugin\"\n          parentObj={props.parentObj}\n          name=\"contactUsActive\"\n          checked={contactUsActive}\n          handleChange={props.handleCheckbox}\n        />\n        {contactUsActive && (\n          <MultiSelect\n            label=\"Select the pages where this plugin is available\"\n            items={props.availableRoutes}\n            name=\"contactUsPages\"\n            value={contactUsPages}\n            handleChange={props.handleChange}\n            margin={\"0 10px 20px 15px\"}\n          />\n        )}\n      </Flex>\n\n      {contactUsActive && (\n        <Minimizer padding={\"20px\"}>\n          <div>\n            <Input\n              inputtype=\"input\"\n              label=\"Enter Business email where contact requests are received\"\n              parentObj={props.parentObj}\n              name=\"contactUsEmail\"\n              value={contactUsEmail}\n              onChange={props.handleChange}\n            />\n            \n            <Input\n              inputtype=\"checkbox\"\n              sideLabel=\"Give email subject options\"\n              parentObj={props.parentObj}\n              name=\"contactUsSubjectStrict\"\n              checked={contactUsSubjectStrict}\n              handleChange={props.handleCheckbox}\n            />\n            {contactUsSubjectStrict &&\n              <Input\n                inputtype=\"input\"\n                label=\"Enter subject selections seperated by a comma\"\n                parentObj={props.parentObj}\n                name=\"contactUsSubjectSelections\"\n                value={contactUsSubjectSelections}\n                onChange={props.handleChange}\n              />\n            }\n\n          </div>\n        </Minimizer>\n      )}\n    </div>\n  );\n};\n\nexport default ContactUsPlugin;\n","import React from \"react\";\nimport Input from \"../../../../components/UI/Input\";\nimport Minimizer from \"../../../../components/UI/Wrappers/Minimizer\";\nimport Flex from \"../../../../components/UI/Wrappers/Flex\";\n\nimport MultiSelect from \"../../../../components/UI/MultiSelect\";\n\nconst BookingPlugin = props => {\n    if (!props.plugin) return <div />;\n\n    const { \n        bookingActive,\n        bookingPages, \n        bookingEmail, \n        bookingForm, \n        bookingCalendarID, \n        bookingApiKey, \n        bookingTimeSlotsAvailable, \n        bookingTimeSlots, \n        bookingGetCalandarAdvance, \n        bookingSessions, \n        bookingSubjectStrict,\n        bookingSubjectSelections\n      } = props.plugin;\n\n    console.log(\"booking settings props\", props);\n\n    return (\n        <div>\n            <Flex>\n                <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Booking Plugin\"\n                    parentObj={props.parentObj}\n                    name=\"bookingActive\"\n                    checked={bookingActive}\n                    handleChange={props.handleCheckbox}\n                />\n                {bookingActive && (\n                    <MultiSelect\n                        label=\"Select the pages where this plugin is available\"\n                        items={props.availableRoutes}\n                        name=\"bookingPages\"\n                        value={bookingPages}\n                        handleChange={props.handleChange}\n                        margin={\"0 10px 20px 15px\"}\n                    />\n                )}\n            </Flex>\n\n            {bookingActive && (\n                <Minimizer emptyHeight={\"200px\"} padding={\"20px\"}>\n                    <div>\n                        <Input\n                            inputtype=\"input\"\n                            label=\"Enter Business email where bookings are received\"\n                            parentObj={props.parentObj}\n                            name=\"bookingEmail\"\n                            value={bookingEmail}\n                            onChange={props.handleChange}\n                        />\n                        <Input\n                            inputtype=\"input\"\n                            label=\"Google Calendar Id\"\n                            parentObj={props.parentObj}\n                            name=\"bookingCalendarID\"\n                            value={bookingCalendarID}\n                            onChange={props.handleChange}\n                            helpKey={'bookingCalendarID_Help'}\n                        />\n                        <Input\n                            inputtype=\"input\"\n                            label=\"Google Calendar Api Key\"\n                            parentObj={props.parentObj}\n                            name=\"bookingApiKey\"\n                            value={bookingApiKey}\n                            onChange={props.handleChange}\n                            helpKey={'bookingCalendarAPI_Help'}\n                        />\n                        <br/>\n                        <h2>Booking Calandar options</h2>\n                        <Input\n                            inputtype=\"checkbox\"\n                            sideLabel=\"Timeslots available (leave unticked if booking times do not repeat)\"\n                            parentObj={props.parentObj}\n                            name=\"bookingTimeSlotsAvailable\"\n                            checked={bookingTimeSlotsAvailable}\n                            handleChange={props.handleCheckbox}\n                        />\n                        { bookingTimeSlotsAvailable &&\n                        <Input\n                            inputtype=\"input\"\n                            label=\"Enter the timeslots when events can be booked on a daily bases\"\n                            parentObj={props.parentObj}\n                            name=\"bookingTimeSlots\"\n                            value={bookingTimeSlots}\n                            placeholder={'eg 24 hour format..  09:30-10:00, 10:00-10:30, 14:30-15:00'}\n                            onChange={props.handleChange}\n                        />\n                        }\n                        <Input\n                            inputtype=\"select\"\n                            label=\"Select how far in the future customers can book\" \n                            value={bookingGetCalandarAdvance}\n                            name=\"bookingGetCalandarAdvance\"\n                            items={[\n                                {value : \"1 month\"},\n                                {value : \"2 months\"},\n                                {value : \"3 months\"},\n                                {value : \"6 months\"},\n                                {value : \"9 months\"},\n                                {value : \"12 months\"},                           \n                            ]}\n                            onChange={props.handleChange}\n                        />\n                        <Input\n                            inputtype=\"input\"\n                            type=\"number\"\n                            label={bookingTimeSlotsAvailable ? 'Booking sessions available per timeslot' : 'Booking sessions available per day'}\n                            parentObj={props.parentObj}\n                            name=\"bookingSessions\"\n                            value={bookingSessions}\n                            placeholder={bookingTimeSlotsAvailable ? 'eg. Entering \"6\" will allow 6 bookings per timeslot' : 'eg. Entering \"6\" will allow 6 bookings per day'}\n                            onChange={props.handleChange}\n                        />\n                        <h2>Booking Email Options</h2>\n                        <Input\n                            inputtype=\"checkbox\"\n                            sideLabel=\"Give email subject options\"\n                            parentObj={props.parentObj}\n                            name=\"bookingSubjectStrict\"\n                            checked={bookingSubjectStrict}\n                            handleChange={props.handleCheckbox}\n                        />\n                        {bookingSubjectStrict &&\n                            <Input\n                                inputtype=\"input\"\n                                label=\"Enter subject selections seperated by a comma\"\n                                parentObj={props.parentObj}\n                                name=\"bookingSubjectSelections\"\n                                value={bookingSubjectSelections}\n                                onChange={props.handleChange}\n                            />\n                        }\n                    </div>\n                </Minimizer>\n            )}\n        </div>\n    );\n};\n\nexport default BookingPlugin;\n","import React from \"react\";\nimport Input from \"../../../../components/UI/Input\";\nimport Minimizer from \"../../../../components/UI/Wrappers/Minimizer\";\nimport Flex from \"../../../../components/UI/Wrappers/Flex\";\n\nimport MultiSelect from \"../../../../components/UI/MultiSelect\";\n\nconst TestimonialsPlugin = props => {\n  if (!props.plugin) return <div />;\n\n  const { testimonialsActive, testimonialsPages, testimonialsEmail } = props.plugin;\n  console.log(\"Testimonals settings props\", props);\n\n  return (\n    <div>\n      <Flex>\n        <Input\n          inputtype=\"checkbox\"\n          sideLabel=\"Testimonals Plugin\"\n          parentObj={props.parentObj}\n          name=\"testimonialsActive\"\n          checked={testimonialsActive}\n          handleChange={props.handleCheckbox}\n        />\n        {testimonialsActive && (\n          <MultiSelect\n            label=\"Select the pages where this plugin is available\"\n            items={props.availableRoutes}\n            name=\"testimonialsPages\"\n            value={testimonialsPages}\n            handleChange={props.handleChange}\n            margin={\"0 10px 20px 15px\"}\n          />\n        )}\n      </Flex>\n\n      {/* {testimonialsActive && (\n        <Minimizer padding={\"20px\"}>\n          <div>\n            <Input\n              inputtype=\"input\"\n              label=\"Enter Business email where contact requests are received\"\n              parentObj={props.parentObj}\n              name=\"testimonialsEmail\"\n              value={testimonialsEmail}\n              onChange={props.handleChange}\n            />\n          </div>\n        </Minimizer>\n      )} */}\n    </div>\n  );\n};\n\nexport default TestimonialsPlugin;\n","import React, { Component } from \"react\";\n\nimport styled from \"styled-components\";\n\nimport Spinner from \"../../../components/UI/Spinner\";\nimport Flex from \"../../../components/UI/Wrappers/Flex\";\nimport Button from \"../../../components/UI/Buttons/Button\";\n\nimport ContactUsPlugin from \"./contactUsPlugin/ContactUsPlugin\";\nimport BookingPlugin from \"./bookingPlugin/BookingPlugin\";\nimport TesimonialsPlugin from './testimonialPlugin/TestimonialPlugin';\nclass Plugins extends Component {\n  state = {\n    contactUsPlugin: false\n  };\n\n  accordianClick = name => {\n    this.setState({ [name]: !this.state[name] });\n  };\n\n  handleChange = (event, parentObj) => {\n    //event.preventDefault();\n    this.props.changePluginState(event.target, \"plugins\", parentObj);\n  };\n\n  handleCheckbox = (check, parentObj) => event => {\n    console.log(check, parentObj, event.target.checked);\n    const newevent = {\n      name: event.target.name,\n      value: event.target.checked\n    };\n    this.props.changePluginState(newevent, \"plugins\", parentObj);\n  };\n\n  handlesubmit = event => {\n    event.preventDefault();\n    const siteName = process.env.REACT_APP_SITENAME;\n\n    const url = `/${siteName}/site/plugins`;\n    this.props.pluginsChangeSubmit(url, this.props.plugins);\n  };\n\n  render() {\n    if (!this.props.plugins)\n      return (\n        <div>\n          <Spinner />\n        </div>\n      );\n\n    console.log(\"plugins props\", this.props);\n\n    let availableRoutes = this.props.availableRoutes.map(route => {\n      const value = route.value === \"/\" ? \"home\" : route.value;\n      let str = value.split(\"/\").pop();\n      return str;\n    });\n\n    availableRoutes.unshift(\"All Pages\");\n\n    return (\n      <div>\n        <StyledPlugins>\n          <ContactUsPlugin\n            plugin={this.props.plugins.contactUs}\n            name={\"contactUsPlugin\"}\n            parentObj=\"contactUs\"\n            availableRoutes={availableRoutes}\n            accordianClick={this.accordianClick}\n            handleCheckbox={this.handleCheckbox}\n            handleChange={e => this.handleChange(e, \"contactUs\")}\n          />\n          <br/><br/>\n          <BookingPlugin\n            plugin={this.props.plugins.booking}\n            name={\"bookingPlugin\"}\n            parentObj=\"booking\"\n            availableRoutes={availableRoutes}\n            accordianClick={this.accordianClick}\n            handleCheckbox={this.handleCheckbox}\n            onChange={this.onChange}\n            handleChange={e => this.handleChange(e, \"booking\")}\n          />\n          <TesimonialsPlugin\n            plugin={this.props.plugins.testimonials}\n            name={\"testimonialsPlugin\"}\n            parentObj=\"testimonials\"\n            availableRoutes={availableRoutes}\n            accordianClick={this.accordianClick}\n            handleCheckbox={this.handleCheckbox}\n            onChange={this.onChange}\n            handleChange={e => this.handleChange(e, \"testimonials\")}\n          />\n        </StyledPlugins>\n        <Flex justifyContent=\"flex-start\">\n          <Button margin=\"2px 5px 15px 20px\" onClick={this.handlesubmit}>\n            Update\n          </Button>\n          {this.props.isUpdating && <Spinner />}\n          {this.props.stateBackup && (\n            <Button\n              margin=\"2px 20px 15px 20px\"\n              onClick={this.props.cancelUpdate}\n            >\n              Undo Changes\n            </Button>\n          )}\n        </Flex>\n      </div>\n    );\n  }\n}\n\nconst StyledPlugins = styled.div`\n  width: 100%;\n`;\nexport default Plugins;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../store/actions/index\";\n\nimport Spinner from \"../../components/UI/Spinner\";\nimport Button from \"../../components/UI/Buttons/Button\";\nimport Input from \"../../components/UI/Input\";\nimport Flex from \"../../components/UI/Wrappers/Flex\";\n\nclass AuthModal extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.isAuthenticated !== prevProps.isAuthenticated) {\n      this.props.isTimedOut();\n    }\n  }\n\n  onFormChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  submitHandler = event => {\n    event.preventDefault();\n    this.props.onAuth(this.state.email, this.state.password, this.props.admin);\n  };\n\n  backToHome = () => {\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    console.log(\"AuthModal page props\", this.props);\n\n    let errorMessage = null;\n\n    if (this.props.error) {\n      // const errorCode={\n      //   EMAIL_NOT_FOUND: 'There is no user record corresponding to this email address',\n      //   INVALID_PASSWORD: 'The password entered was invalid - please try again',\n      //   USER_DISABLED: 'The user account has been disabled by an administrator.',\n      //   INVALID_EMAIL: 'The email address entered is invalid'\n      // }\n      errorMessage = (\n        // <p>{ errorCode[this.props.error.message] }</p>\n        <p>{this.props.error}</p>\n      );\n    }\n\n    return (\n      <div>\n        <div>Administrator Login</div>\n        <br />\n        <Input\n          inputtype=\"input\"\n          placeholder=\"email\"\n          name=\"email\"\n          value={this.state.email}\n          onChange={this.onFormChange}\n        />\n        <Input\n          inputtype=\"input\"\n          placeholder=\"password\"\n          name=\"password\"\n          value={this.state.password}\n          onChange={this.onFormChange}\n        />\n        {errorMessage}\n        <br />\n        <Flex>\n          <Button onClick={this.backToHome}>Cancel</Button>\n          <Button onClick={this.submitHandler}>Submit</Button>\n        </Flex>\n\n        {this.props.loading && <Spinner />}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    admin: state.mainState.admin,\n    isAuthenticated: state.auth.userId !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (email, password, admin) =>\n      dispatch(actions.auth(email, password, admin))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AuthModal);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../store/actions/index\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nimport styled from \"styled-components\";\n\nimport Accordian from \"../../components/UI/Accordian\";\nimport TabsMenu from \"./Navigation/TabsMenu\";\nimport Modal from \"../../components/UI/Modal\";\nimport Button from \"../../components/UI/Buttons/Button\";\nimport Toast from \"../../components/UI/Toast\";\nimport Flex from \"../../components/UI/Wrappers/Flex\";\n\nimport NewPageForm from \"../../components/Forms/NewPageForm\";\nimport Media from \"./media/Media\";\nimport Template from \"./template/Template\";\nimport Homepage from \"./homepage/Homepage\";\nimport Plugins from \"./plugins/Plugins\";\nimport AuthModal from \"../Auth/AuthModal\";\n\nclass Admin extends Component {\n  state = {\n    homepage_accordian: false,\n    navigation_accordian: false,\n    template_accordian: false,\n    media_accordian: false,\n\n    showSignIn: false,\n    newPageOpen: false,\n    deletePageModal: false,\n    pageToDelete: null,\n    openMediaModal: false,\n    mediaModalTabItemRef: [],\n    mediaImages: [],\n    newPageToast: null,\n    loading: false,\n    error: null\n  };\n\n  componentWillMount() {\n    console.log('adminPage - sitename', process.env.REACT_APP_SITENAME)\n\n    if (!this.props.isAuthenticated && process.env.NODE_ENV === \"production\"){\n      this.props.history.push('/authenticate-admin')\n    }\n\n    const user = firebase.auth().currentUser;\n\n    if (user) {\n      // User is signed in.\n      console.log(\"user is signed in\");\n    } else {\n      // No user is signed in.\n      console.log(\" No user is signed in.\");\n      // firebase.auth().signInWithCustomToken(token).catch(function(error) {\n      //     // Handle Errors here.\n      //     var errorCode = error.code;\n      //     var errorMessage = error.message;\n      //     // ...\n      // });\n    }\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isAuthenticated && !this.props.isAuthenticated && process.env.NODE_ENV === \"production\"){\n      this.props.history.push('/authenticate-admin')\n    }\n  }\n\n  logoutHandler = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(\n        function() {\n          console.log(\"Signed Out\");\n        },\n        function(error) {\n          console.error(\"Sign Out Error\", error);\n        }\n      );\n    this.props.onLogoutClick();\n  };\n\n  openMediaModal = (pageInfo, key, parentKey) => {\n    console.log(\"opneMedia Modal\", pageInfo, key, parentKey);\n    this.setState({\n      openMediaModal: true,\n      mediaModalTabItemRef: [pageInfo, key, parentKey]\n    });\n  };\n\n  closeMediaModal = () => {\n    this.setState({ openMediaModal: false });\n  };\n\n  setMediaImages = mediaImages => {\n    this.setState({ mediaImages });\n  };\n\n  handleNewPageButton = event => {\n    event.preventDefault();\n    this.setState({ newPageOpen: !this.state.newPageOpen });\n  };\n\n  submitNewPage = newPage_State => {\n    console.log(\"newPage_State\", newPage_State);\n    const { title, checked, selectVal } = newPage_State;\n    const { navigationItems } = this.props;\n    const siteName = process.env.REACT_APP_SITENAME\n\n    const route = title.replace(/ /g, \"-\").toLowerCase();\n\n    const defaultContent = {\n      id: Date.now(),\n      mainText: `This is your newly added ${title} page`\n    };\n    let url = `/${siteName}/site/navigationItems`;\n\n    let newPageObj = {\n      title,\n      route,\n      selected: false,\n      content: defaultContent\n    };\n\n    if (checked) {\n      // const subpageIndex = this.props.navigationItems.findIndex(page => page.title === selectVal);\n\n      let subpageIndex = null;\n      for (let key in navigationItems) {\n        if (navigationItems[key].title === selectVal) {\n          subpageIndex = key;\n        }\n      }\n\n      url = `/${siteName}/site/navigationItems/${subpageIndex}/dropdownPages`;\n\n      newPageObj = {\n        title,\n        route,\n        content: defaultContent\n      };\n    }\n\n    this.setState({ loading: true, error: null }, () => {\n      const that = this;\n      const newPostKey = firebase\n        .database()\n        .ref()\n        .child(url)\n        .push().key;\n      const newPage = { [newPostKey]: newPageObj };\n\n      firebase\n        .database()\n        .ref()\n        .child(url)\n        .update(newPage, function(err) {\n          if (err) {\n            // The write failed...\n            that.setState({\n              loading: false,\n              error: err.code,\n              newPageOpen: false,\n              showSignIn: true\n            });\n          } else {\n            // Data saved successfully!\n            console.log(\"new page added successfully!\");\n            that.setState({\n              loading: false,\n              error: null,\n              newPageOpen: false,\n              newPageToast: \"New Page added successfully\"\n            });\n            that.props.onInitWebsiteState();\n          }\n\n          // axios.post(url, newPageObj)\n          //   .then(response => {\n          //     console.log(response)\n          //     this.props.onInitWebsiteState()\n          //   })\n          //   .then(() =>{\n          //     this.setState({loading: false, error: null, newPageOpen: false, newPageToast: 'New Page added successfully' })\n          //   })\n          //   .then(() => {\n          //     setTimeout(() => {\n          //         this.setState({newPageToast: null});\n          //     }, 7000 );\n          //   })\n          //   .catch(err => {\n          //     console.log(err);\n          //     this.setState({loading: false, error: err.response.data.error, newPageOpen: false, showSignIn: true})\n        });\n    });\n  };\n\n  handleDeletePageModal = (pageId, parentId) => {\n    if (this.state.deletePageModal) {\n      this.setState({ deletePageModal: false, pageToDelete: null });\n    } else {\n      this.setState({\n        deletePageModal: true,\n        pageToDelete: { id: pageId, parentId: parentId }\n      });\n    }\n  };\n\n  submitDeletePage = () => {\n    console.log(this.state.pageToDelete);\n    const that = this;\n    const { id, parentId } = this.state.pageToDelete;\n    const siteName = process.env.REACT_APP_SITENAME;\n\n    let url = `/${siteName}/site/navigationItems/${id}`;\n\n    if (parentId) {\n      url = `/${siteName}/site/navigationItems/${parentId}/dropdownPages/${id}`;\n    }\n\n    firebase\n      .database()\n      .ref(url)\n      .remove()\n      .then(function() {\n        console.log(\"Remove succeeded.\");\n        that.props.onInitWebsiteState();\n        that.setState({ deletePageModal: false, pageToDelete: null });\n      })\n      .catch(function(error) {\n        console.log(\"Remove failed: \" + error.message);\n      });\n  };\n\n  updatePage = (eventTarget, key, parent) => {\n    console.log(eventTarget.value, key, parent);\n    this.props.onChangePageState(eventTarget, key, parent);\n  };\n\n  updatePageSubmit = (pageInfo, key, parentKey) => {\n    console.log(pageInfo, key, parentKey);\n    const siteName = process.env.REACT_APP_SITENAME;\n\n    const URL = !parentKey\n      ? `/${siteName}/site/navigationItems/${key}/content`\n      : `/${siteName}/site/navigationItems/${parentKey}/dropdownPages/${key}/content`;\n\n    const user = firebase.auth().currentUser;\n\n    if (user) {\n      // User is signed in.\n      console.log(\"user is signed in\");\n      this.props.onUpdatePageSubmit(URL, pageInfo);\n    } else {\n      // No user is signed in.\n      console.log(\" No user is signed in.\");\n      this.setState({\n        showSignIn: true,\n        error: \"Permission denied. Please sign in again to Re-authenticate\"\n      });\n    }\n  };\n\n  timedOutUser = () => {\n    const user = firebase.auth().currentUser;\n    if (user) {\n      // User is signed in\n      this.setState({ showSignIn: false });\n    } else {\n      // No user is signed in.\n      console.log(\" No user is signed in.\");\n      this.setState({ showSignIn: true });\n    }\n  };\n\n  accordianClick = name => {\n    this.setState({ [name]: !this.state[name] });\n  };\n\n  // this.props.addPage(url, newPageObj)\n\n  render() {\n    console.log(\"Admin Page props\", this.props);\n    const {\n      media_accordian,\n      template_accordian,\n      homepage_accordian,\n      navigation_accordian,\n      plugins_accordian\n    } = this.state;\n\n    return (\n      <StyledAdminPage>\n        <Flex justifyContent=\"space-between\">\n          <h1 className=\"admin-title\">Admin Page</h1>\n          <Button onClick={this.logoutHandler}>logout</Button>\n        </Flex>\n        <Modal\n          open={this.state.showSignIn}\n          title=\"You have been logged out\"\n          description=\"Your administrator session has expired you will need to log back in to continue\"\n        >\n          <AuthModal\n            history={this.props.history}\n            isTimedOut={this.timedOutUser}\n          />\n        </Modal>\n        <div>\n          <Accordian\n            title={\"Media\"}\n            name={\"media_accordian\"}\n            onClick={e => this.accordianClick(e)}\n          >\n            {media_accordian && (\n              <Media\n                isAuthenticated={this.props.isAuthenticated}\n                isTimedOut={this.timedOutUser}\n                currentImages={this.props.images}\n                refreshState={this.props.onInitWebsiteState}\n                isModal={false}\n                imageURLs={this.state.mediaImages}\n                setMediaImages={this.setMediaImages}\n              />\n            )}\n          </Accordian>\n          <br />\n\n          <Accordian\n            title={\"Template\"}\n            name={\"template_accordian\"}\n            onClick={e => this.accordianClick(e)}\n          >\n            {template_accordian && (\n              <Template\n                template={this.props.template}\n                changeTemplateState={this.props.onChangePageState}\n                templateChangeSubmit={this.props.onUpdatePageSubmit}\n                isUpdating={this.props.isUpdating}\n                isError={this.props.isError}\n                stateBackup={this.props.stateBackup}\n                cancelUpdate={this.props.onRevertChanges}\n                openMediaModal={this.openMediaModal}\n              />\n            )}\n          </Accordian>\n          <br />\n\n          <Accordian\n            title={\"Homepage\"}\n            name={\"homepage_accordian\"}\n            onClick={e => this.accordianClick(e)}\n          >\n            {homepage_accordian && (\n              <Homepage\n                homePage={this.props.home}\n                changeHomepageState={this.props.onChangePageState}\n                homepageChangeSubmit={this.props.onUpdatePageSubmit}\n                isUpdating={this.props.isUpdating}\n                isError={this.props.isError}\n                stateBackup={this.props.stateBackup}\n                cancelUpdate={this.props.onRevertChanges}\n                openMediaModal={this.openMediaModal}\n                availableRoutes={this.props.availableRoutes}\n                template={this.props.template}\n                plugins={this.props.plugins}\n              />\n            )}\n          </Accordian>\n          <br />\n\n          <Accordian\n            title=\"Navigation and Pages\"\n            name={\"navigation_accordian\"}\n            onClick={e => this.accordianClick(e)}\n          >\n            {navigation_accordian && (\n              <div className=\"fullwidth\">\n                <Button onClick={this.handleNewPageButton}>\n                  Add a new page\n                </Button>\n\n                <Modal\n                  open={this.state.newPageOpen}\n                  navigationItems={this.props.navigationItems}\n                  handleClose={this.handleNewPageButton}\n                  title=\"Add a new Webpage\"\n                  description=\"Here you can add a new page to your website which will show in the header navigation. You can also make the new page a subpage of another navigation link\"\n                >\n                  <NewPageForm\n                    loading={this.state.loading}\n                    navigationItems={this.props.navigationItems}\n                    handleClose={this.handleNewPageButton}\n                    handleSubmit={this.submitNewPage}\n                  />\n                </Modal>\n\n                <Modal\n                  open={this.state.deletePageModal}\n                  navigationItems={this.props.navigationItems}\n                  handleClose={this.handleDeletePageModal}\n                  title=\"Delete Webpage\"\n                  description=\"You are about to delete selected page this is a permanent action, would you like to continue with deleting this page\"\n                >\n                  <Flex>\n                    <Button onClick={this.submitDeletePage}>Delete</Button>\n                    <Button onClick={this.handleDeletePageModal}>Cancel</Button>\n                  </Flex>\n                </Modal>\n\n                <br />\n                <br />\n                <TabsMenu\n                  navigationItems={this.props.navigationItems}\n                  updatePageSubmit={this.updatePageSubmit}\n                  onChange={this.updatePage}\n                  openMediaModal={this.openMediaModal}\n                  handlePageDelete={this.handleDeletePageModal}\n                  isUpdating={this.props.isUpdating}\n                  cancelUpdate={this.props.onRevertChanges}\n                  isError={this.props.isError}\n                  stateBackup={this.props.stateBackup}\n                  availableRoutes={this.props.availableRoutes}\n                  template={this.props.template}\n                  plugins={this.props.plugins}\n                />\n                <br />\n              </div>\n            )}\n          </Accordian>\n          <br />\n\n          <Accordian\n            title={\"Plugins\"}\n            name={\"plugins_accordian\"}\n            onClick={e => this.accordianClick(e)}\n          >\n            {plugins_accordian && (\n              <Plugins\n                plugins={this.props.plugins}\n                changePluginState={this.props.onChangePageState}\n                pluginsChangeSubmit={this.props.onUpdatePageSubmit}\n                availableRoutes={this.props.availableRoutes}\n                isUpdating={this.props.isUpdating}\n                isError={this.props.isError}\n                stateBackup={this.props.stateBackup}\n                cancelUpdate={this.props.onRevertChanges}\n              />\n            )}\n          </Accordian>\n\n          <Modal\n            open={this.state.openMediaModal}\n            title=\"Choose an image\"\n            description=\"Select the media location you would like to use\"\n            handleClose={this.closeMediaModal}\n          >\n            <Media\n              isModal={true}\n              isAuthenticated={this.props.isAuthenticated}\n              handleClose={this.closeMediaModal}\n              currentImages={this.props.images}\n              imageURLs={this.state.mediaImages}\n              setMediaImages={this.setMediaImages}\n              tabItemReference={this.state.mediaModalTabItemRef}\n              onChangePageState={this.props.onChangePageState}\n            />\n          </Modal>\n        </div>\n        {this.state.newPageToast !== null && (\n          <Toast message={this.state.newPageToast} />\n        )}\n        {this.props.updatePageToast !== null && (\n          <Toast message={this.props.updatePageToast} />\n        )}\n        {this.state.error && <Toast message={this.state.error} error={true} />}\n      </StyledAdminPage>\n    );\n  }\n}\n\nconst StyledAdminPage = styled.div`\n  background-color: #424242;\n  /* min-height: 100vh; */\n  padding: 100px 50px;\n  margin-top: -75px;\n\n  .admin-title {\n    color: #f5f5f5;\n  }\n\n  @media(max-width: 500px){\n    padding: 100px 10px;\n  }\n`;\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.userId !== null,\n    userId: state.auth.userId,\n    home: state.mainState.home,\n    navigationItems: state.mainState.navigationItems,\n    images: state.mainState.images,\n    stateBackup: state.mainState.state_copy,\n    updatePageToast: state.admin.pageUpdateToast,\n    isUpdating: state.admin.loading,\n    isError: state.admin.error,\n    availableRoutes: state.admin.routes,\n    template: state.mainState.template,\n    plugins: state.mainState.plugins\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onInitWebsiteState: () => dispatch(actions.initWebsiteState()),\n    onLogoutClick: () => dispatch(actions.logout()),\n    onChangePageState: (eventTarget, key, parent) =>\n      dispatch(actions.changePageState(eventTarget, key, parent)),\n    onUpdatePageSubmit: (pageInfo, url) =>\n      dispatch(actions.updatePageSubmit(pageInfo, url)),\n    onRevertChanges: () => dispatch(actions.revertStateChange())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Admin);\n"],"sourceRoot":""}