{"version":3,"sources":["app/components/UI/ColourPicker.js","app/components/UI/Input.js","app/components/UI/Spinner.js","app/containers/Auth/Auth.js","app/routes/authAdmin/index.js"],"names":["ColourPicker","state","displayColorPicker","hex","color","r","g","b","a","handleClick","_this","setState","handleClose","handleChange","rgb","props","changeColour","id","pageId","parent","parentId","newevent","target","name","value","this","replace","parseInt","substring","console","log","styles","reactCSS","default","width","height","borderRadius","background","concat","swatch","padding","marginTop","boxShadow","display","cursor","popover","position","zIndex","cover","top","right","bottom","left","react_default","createElement","style","onClick","react_color_lib","onChange","disableAlpha","React","Component","StyledElement","styled","div","_templateObject","Input","inputElement","selectItems","inputtype","disabled","placeholder","type","Fragment","readOnly","IconButton_default","aria-label","clearInput","Cancel_default","fontSize","UI_ColourPicker","items","Object","keys","map","key","i","item","title","onSelectChange","Flex","margin","Checkbox_default","checked","parentObj","sideLabel","label","StyledSpinner","theme","primaryBackGroundColour","spinner","react__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_3___default","Auth","email","password","onFormChange","event","_event$target","defineProperty","submitHandler","preventDefault","onAuth","admin","isAuthenticated","history","push","prevProps","errorMessage","error","StyledAuthPage","onSubmit","Button","loading","Spinner","withRouter","connect","auth","mainState","userId","dispatch","actions","AdminAuth","page","description","containers_Auth_Auth"],"mappings":"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","file":"static/js/authAdmin.fa4f884e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport reactCSS from \"reactcss\";\r\nimport { SketchPicker } from \"react-color\";\r\n\r\nclass ColourPicker extends React.Component {\r\n  state = {\r\n    displayColorPicker: false,\r\n    hex: \"#FFFFFF\",\r\n    color: {\r\n      r: \"255\",\r\n      g: \"255\",\r\n      b: \"255\",\r\n      a: \"1\"\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.value) {\r\n      const hex = this.props.value.replace(\"#\", \"\");\r\n      const r = parseInt(hex.substring(0, 2), 16);\r\n      const g = parseInt(hex.substring(2, 4), 16);\r\n      const b = parseInt(hex.substring(4, 6), 16);\r\n\r\n      const rgb = {\r\n        r,\r\n        g,\r\n        b,\r\n        a: 1\r\n      };\r\n      this.setState({ color: rgb });\r\n    }\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState({ displayColorPicker: !this.state.displayColorPicker });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ displayColorPicker: false });\r\n  };\r\n\r\n  handleChange = color => {\r\n    this.setState({ color: color.rgb, hex: color.hex });\r\n    if (this.props.changeColour) {\r\n      const id = this.props.pageId;\r\n      const parent = this.props.parentId || null;\r\n      const newevent = {\r\n        target: {\r\n          name: this.props.name,\r\n          value: color.hex\r\n        }\r\n      };\r\n      this.props.changeColour(newevent, id, parent);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    console.log(\"hex\", this.state.hex);\r\n\r\n    const styles = reactCSS({\r\n      default: {\r\n        color: {\r\n          width: \"12vw\",\r\n          height: \"17px\",\r\n          borderRadius: \"2px\",\r\n          background: `rgba(${this.state.color.r}, ${this.state.color.g}, ${\r\n            this.state.color.b\r\n          }, ${this.state.color.a})`\r\n        },\r\n        swatch: {\r\n          padding: \"5px\",\r\n          marginTop: \"6px\",\r\n          background: \"#fff\",\r\n          borderRadius: \"1px\",\r\n          boxShadow: \"0 0 0 1px rgba(0,0,0,.1)\",\r\n          display: \"inline-block\",\r\n          cursor: \"pointer\"\r\n        },\r\n        popover: {\r\n          position: \"absolute\",\r\n          zIndex: \"2\"\r\n        },\r\n        cover: {\r\n          position: \"fixed\",\r\n          top: \"0px\",\r\n          right: \"0px\",\r\n          bottom: \"0px\",\r\n          left: \"0px\"\r\n        }\r\n      }\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <div style={styles.swatch} onClick={this.handleClick}>\r\n          <div style={styles.color} />\r\n        </div>\r\n\r\n        {this.state.displayColorPicker ? (\r\n          <div style={styles.popover}>\r\n            <div style={styles.cover} onClick={this.handleClose} />\r\n            <SketchPicker\r\n              color={this.state.color}\r\n              onChange={this.handleChange}\r\n              disableAlpha={true}\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColourPicker;\r\n","import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Flex from \"../UI/Wrappers/Flex\";\r\nimport styled from \"styled-components\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport ColourPicker from \"./ColourPicker\";\r\n\r\nconst Input = props => {\r\n  let inputElement = null;\r\n  let selectItems = null;\r\n  //console.log('inputProps', props)\r\n\r\n  switch (props.inputtype) {\r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          name={props.name}\r\n          value={props.value}\r\n          onChange={props.onChange}\r\n          disabled={props.disabled || false}\r\n          placeholder={props.placeholder}\r\n          type={props.type || \"text\"}\r\n        />\r\n      );\r\n      break;\r\n    case \"inputSelector\":\r\n      inputElement = (\r\n        <>\r\n          <input\r\n            name={props.name}\r\n            value={props.value}\r\n            onClick={props.onClick}\r\n            onChange={props.onChange}\r\n            readOnly\r\n          />\r\n          {props.value && (\r\n            <IconButton\r\n              aria-label=\"Add\"\r\n              onClick={() => props.clearInput(props.name)}\r\n            >\r\n              <CancelIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          )}\r\n        </>\r\n      );\r\n      break;\r\n    case \"inputColourPicker\":\r\n      inputElement = (\r\n        <ColourPicker\r\n          name={props.name}\r\n          value={props.value}\r\n          changeColour={props.changeColour}\r\n          pageId={props.pageId}\r\n          parentId={props.parentId}\r\n        />\r\n      );\r\n      break;\r\n    case \"textarea\":\r\n      inputElement = (\r\n        <textarea\r\n          name={props.name}\r\n          value={props.value}\r\n          onChange={props.onChange}\r\n        />\r\n      );\r\n      break;\r\n    case \"select\":\r\n      if (typeof props.items === \"object\") {\r\n        selectItems = Object.keys(props.items).map((key, i) => {\r\n          const item = props.items[key];\r\n          return (\r\n            <option key={i} value={item.title || item.value}>\r\n              {item.title || item.value}\r\n            </option>\r\n          );\r\n        });\r\n      } else {\r\n        selectItems = props.items.map((item, i) => {\r\n          return (\r\n            <option key={i} value={item.title || item.value}>\r\n              {item.title || item.value}\r\n            </option>\r\n          );\r\n        });\r\n      }\r\n\r\n      inputElement = (\r\n        <select\r\n          value={props.value || props.items[0]}\r\n          onChange={props.onSelectChange}\r\n          name={props.name}\r\n        >\r\n          {selectItems}\r\n        </select>\r\n      );\r\n      break;\r\n    case \"checkbox\":\r\n      inputElement = (\r\n        <Flex margin={'initial'}>\r\n          <Checkbox\r\n            name={props.name}\r\n            checked={props.checked}\r\n            onChange={props.handleChange(\"checked\", props.parentObj)}\r\n            color=\"primary\"\r\n            value=\"checked\"\r\n            parent={props.parent}\r\n          />\r\n          <label>{props.sideLabel}</label>\r\n        </Flex>\r\n      );\r\n      break;\r\n    default:\r\n      inputElement = <input />;\r\n  }\r\n\r\n  return (\r\n    <StyledElement>\r\n      <label>{props.label}</label>\r\n      <Flex>{inputElement}</Flex>\r\n    </StyledElement>\r\n  );\r\n};\r\n\r\nconst StyledElement = styled.div`\r\n  margin: 0 10px 15px 0;\r\n\r\n  > label {\r\n    font-weight: bold;\r\n    display: block;\r\n    margin-bottom: 8px;\r\n  }\r\n\r\n  > div textarea {\r\n    height: 230px;\r\n  }\r\n\r\n  > div input,\r\n  div textarea,\r\n  div select {\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n    border: 1px solid #ccc;\r\n    background-color: white;\r\n    font: inherit;\r\n    padding: 6px 10px;\r\n    display: block;\r\n    box-sizing: border-box;\r\n    border-radius: 5px;\r\n\r\n    :focus {\r\n      outline: none;\r\n      border-color: #9ecaed;\r\n      box-shadow: 0 0 10px #9ecaed;\r\n    }\r\n  }\r\n\r\n  > div button {\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst spinner = props => (\r\n  <StyledSpinner>\r\n    <CircularProgress />\r\n  </StyledSpinner>\r\n);\r\n\r\nconst StyledSpinner = styled.div`\r\n  > div {\r\n    height: 20px !important;\r\n    width: 20px !important;\r\n    margin: \"theme.spacing.unit * 2\";\r\n    color: ${props => props.theme.primaryBackGroundColour};\r\n  }\r\n`;\r\n\r\nexport default spinner;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport * as actions from \"../../../store/actions/index\";\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport Spinner from \"../../components/UI/Spinner\";\r\nimport Button from '../../components/UI/Buttons/Button';\r\nimport Input from '../../components/UI/Input';\r\n\r\nclass Auth extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.isAuthenticated) {\r\n      this.props.history.push(\"/admin\");\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (!prevProps.isAuthenticated && this.props.isAuthenticated) {\r\n      this.props.history.push(\"/admin\");\r\n    }\r\n  }\r\n\r\n  onFormChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    this.props.onAuth(this.state.email, this.state.password, this.props.admin);\r\n  };\r\n\r\n  render() {\r\n    console.log(\"auth page props\", this.props);\r\n\r\n    let errorMessage = null;\r\n\r\n    if (this.props.error) {\r\n      // const errorCode={\r\n      //   EMAIL_NOT_FOUND: 'There is no user record corresponding to this email address',\r\n      //   INVALID_PASSWORD: 'The password entered was invalid - please try again',\r\n      //   USER_DISABLED: 'The user account has been disabled by an administrator.',\r\n      //   INVALID_EMAIL: 'The email address entered is invalid'\r\n      // }\r\n      errorMessage = (\r\n        // <p>{ errorCode[this.props.error.message] }</p>\r\n        <p>{this.props.error}</p>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <StyledAuthPage>\r\n        <div>Administrator Login</div>\r\n        <form onSubmit={this.submitHandler}>\r\n          <Input\r\n            inputtype={'input'}\r\n            placeholder=\"email\"\r\n            name=\"email\"\r\n            value={this.state.email}\r\n            onChange={this.onFormChange}\r\n          />\r\n          <Input\r\n            inputtype={'input'}\r\n            placeholder=\"password\"\r\n            name=\"password\"\r\n            value={this.state.password}\r\n            onChange={this.onFormChange}\r\n          />\r\n          <Button type={'submit'}>Submit</Button>\r\n          {errorMessage}\r\n        </form>\r\n        {this.props.loading && <Spinner />}\r\n      </StyledAuthPage>\r\n    );\r\n  }\r\n}\r\n\r\nconst StyledAuthPage = styled.div`\r\n  padding: 10%;\r\n`;\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.auth.loading,\r\n    error: state.auth.error,\r\n    admin: state.mainState.admin,\r\n    isAuthenticated: state.auth.userId !== null\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuth: (email, password, admin) =>\r\n      dispatch(actions.auth(email, password, admin))\r\n  };\r\n};\r\n\r\nexport default withRouter(\r\nconnect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Auth)\r\n);\r\n","import React from \"react\";\r\nimport Page from \"../../components/page\";\r\n\r\nimport Auth from '../../containers/Auth/Auth'\r\n\r\nconst AdminAuth = props => (\r\n  <Page id=\"adminlogin\" title=\"adminLogin\" description=\"We need to log in to stuff.\">\r\n      <Auth/>\r\n  </Page>\r\n);\r\n\r\nexport default AdminAuth;\r\n"],"sourceRoot":""}