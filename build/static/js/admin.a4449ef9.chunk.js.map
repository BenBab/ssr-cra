{"version":3,"sources":["app/components/UI/Accordian.js","app/components/UI/Toast.js","app/components/UI/Wrappers/Box.js","app/components/UI/Wrappers/Minimizer.js","app/containers/Admin/Navigation/TabItems.js/TabItems.js","app/containers/Admin/Navigation/TabsMenu.js","app/components/UI/Modal.js","app/components/Forms/NewPageForm.js","app/containers/Admin/media/ImgGridList.js","app/containers/Admin/media/Media.js","app/containers/Admin/template/Template.js","app/containers/Admin/homepage/Homepage.js","app/components/UI/MultiSelect.js","app/containers/Admin/plugins/contactUsPlugin/ContactUsPlugin.js","app/containers/Admin/plugins/bookingPlugin/BookingPlugin.js","app/containers/Admin/plugins/Plugins.js","app/containers/Auth/AuthModal.js","app/containers/Admin/Admin.js","app/routes/admin/index.js","app/routes/adminTest/index.js"],"names":["StyledAccordian","styled","div","_templateObject","props","theme","primaryBackGroundColour","accordian","react_default","a","createElement","ExpansionPanel_default","onChange","onClick","name","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","title","ExpansionPanelDetails_default","children","Toast","state","open","handleClick","_this","setState","handleClose","event","reason","this","toastColour","error","success","StyledSnackBar","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","aria-describedby","message","id","action","IconButton_default","key","aria-label","color","Close_default","Component","Toast_templateObject","StyledBox","Box_templateObject","margin","opacity","Box","boxOpacity","Minimizer","isOpen","handleMinimizer","StyledMinimizer","padding","Flex","RemoveCircle_default","AddCircle_default","Collapse_default","in","className","Emtpy","emptyHeight","Minimizer_templateObject","_templateObject2","StyledTabItems","TabItems_templateObject","Preview","TabItems_templateObject2","DeletePageIcon","_templateObject3","TabItems","console","log","itemProps","dropdownPages","TabsMenu_TabMenu","navigationItems","parentId","pageId","parent","handlePageDelete","openMediaModal","updatePageSubmit","isUpdating","cancelUpdate","stateBackup","availableRoutes","template","plugins","handleChange","preventDefault","target","handleCheckbox","check","checked","newevent","value","handleMediaModal","handleColourPicker","clearInput","inputName","_props$itemProps$cont","content","topBanner","topBannerHalfwidth","topBannerImgSize","topBannerHWbackImg","topBannerHWBackColour","topBannerTxtRightSide","topBannerTxtLightTheme","topBannerLogo","topBannerfade","topBannerTitle","topBannerSubtitle","topBannerDescription","topBannerBtnText","topBannerLink","midBanner","midBannerHalfwidth","midBannerImgSize","midBannerHWbackImg","midBannerHWBackColour","midBannerTxtRightSide","midBannerTxtLightTheme","midBannerLogo","midBannerfade","midBannerTitle","midBannerSubtitle","midBannerDescription","midBannerBtnText","midBannerLink","mainText","bottomBanner","Paper_default","elevation","Input","inputtype","label","concat","Wrappers_Minimizer","Wrappers_Box","sideLabel","Fragment","type","changeColour","items","onSelectChange","Dashboard","Object","assign","pageInfo","overlayBlocker","justifyContent","Button","Spinner","Delete_default","fontSize","TabMenu","disableTabText","topBannerOptions","midBannerOptions","bottomBannerOptions","prevProps","_this2","_this$props","tabLabels","tabitems","keys","map","index","item","Tab_default","TabItems_js_TabItems","StyledTabs","Tooltip_default","AppBar_default","position","Tabs_default","variant","scrollButtons","isError","UI_Toast","TabsMenu_templateObject","Modal","width","fullWidth","maxWidth","Dialog_default","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","description","NewPageForm","_Component","_getPrototypeOf2","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","selectVal","defineProperty","onInputChange","_event$target","scrubbedVal","replace","inherits","createClass","prop","handleSubmit","disabled","loading","TitlebarGridList","columns","spacing","activeIndex","selectedValue","selectedName","handleResize","windowSize","window","innerWidth","handleSelect","tile","selectedImage","addEventListener","removeEventListener","tileData","StyledGrid","GridList_default","cellHeight","cols","GridListTile_default","style","height","ListSubheader_default","component","gridTileClass","selectedIndex","e","src","img","alt","GridListTileBar_default","actionIcon","isModal","deleteImage","ImgGridList_templateObject","Media","uploadOpen","customURL","customURLtext","deleteImgOpen","getImageUrls","that","assertThisInitialized","imageContainer","imageCount","currentImages","returnedCount","storageRef","firebase","storage","ref","i","child","process","getDownloadURL","then","url","toConsumableArray","setMediaImages","catch","onDrop","acceptedFiles","rejectedFiles","auth","currentUser","file","checkFileAlreadyExists","put","snapshot","addImageRefToDb","err","isTimedOut","filter","newPostKey","database","push","updates","update","refreshState","handleCustomURL","confirmImage","_this$state","tabItemReference","image","onChangePageState","imgUrl","confirmDelete","imageURLs","find","remove","delete","handleUploadOpen","isAuthenticated","_this$state2","dropZone","mediaTemplate","noMediaMessage","dist_es","multiple","accept","_ref","getRootProps","getInputProps","isDragActive","StyledDropArea","classNames","dropzone--isActive","selectedLabel","IsMediaModal","ImgGridList","placeholder","Divider_default","UI_Modal","Media_templateObject","Media_templateObject2","Template","changeTemplateState","handlesubmit","templateChangeSubmit","buttonStyle","_this$props$template","navButtons","siteButtons","transparentHeader","navLightTheme","siteLogo","version","StyledTemplate","Grid","colsLarge","colsMed","Template_templateObject","Homepage","previewOpen","changeHomepageState","homepageChangeSubmit","homePage","_this$props$homePage$","mainTextPosition","mainTextCenterTitle","mainTextRightSide","mainTextBackColour","mainTextImg","mainTextImgAlign","mainTextImgWidth","mainTextImgHeight","StyledHomePage","Homepage_Preview","Homepage_templateObject","Homepage_templateObject2","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","MultiSelect","StyledSelect","FormControl_default","InputLabel_default","htmlFor","Select_default","input","Input_default","renderValue","selected","Chip_default","MenuItem_default","React","MultiSelect_templateObject","minwidth","ContactUsPlugin","plugin","_props$plugin","contactUsActive","contactUsPages","contactUsEmail","parentObj","UI_MultiSelect","BookingPlugin","bookingActive","bookingPages","bookingEmail","bookingForm","bookingCalendarID","bookingApiKey","bookingTimeSlotsAvailable","bookingTimeSlots","bookingSessions","Plugins","contactUsPlugin","accordianClick","changePluginState","pluginsChangeSubmit","route","split","pop","unshift","StyledPlugins","contactUsPlugin_ContactUsPlugin","contactUs","bookingPlugin_BookingPlugin","booking","Plugins_templateObject","AuthModal","email","password","onFormChange","submitHandler","onAuth","admin","backToHome","history","errorMessage","connect","mainState","userId","dispatch","actions","Admin","homepage_accordian","navigation_accordian","template_accordian","media_accordian","showSignIn","newPageOpen","deletePageModal","pageToDelete","mediaModalTabItemRef","mediaImages","newPageToast","logoutHandler","signOut","onLogoutClick","parentKey","closeMediaModal","handleNewPageButton","submitNewPage","newPage_State","toLowerCase","defaultContent","Date","now","newPageObj","subpageIndex","newPage","code","onInitWebsiteState","handleDeletePageModal","submitDeletePage","_this$state$pageToDel","updatePage","eventTarget","URL","onUpdatePageSubmit","timedOutUser","plugins_accordian","StyledAdminPage","Auth_AuthModal","Accordian","media_Media","images","template_Template","onRevertChanges","homepage_Homepage","home","Forms_NewPageForm","plugins_Plugins","updatePageToast","Admin_templateObject","state_copy","pageUpdateToast","routes","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","_components_page__WEBPACK_IMPORTED_MODULE_2__","_containers_Admin_Admin__WEBPACK_IMPORTED_MODULE_3__","noCrawl","_components_page__WEBPACK_IMPORTED_MODULE_1__","_containers_Admin_Admin__WEBPACK_IMPORTED_MODULE_2__","Admin_TEST"],"mappings":"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","file":"static/js/admin.a4449ef9.chunk.js","sourcesContent":["import React from \"react\";\n\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nimport styled from \"styled-components\";\n\nconst accordian = props => (\n  <StyledAccordian>\n    <ExpansionPanel onChange={() => props.onClick(props.name)}>\n      <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n        <div>{props.title}</div>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        {props.children ? props.children : <div />}\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  </StyledAccordian>\n);\n\nconst StyledAccordian = styled.div`\n    margin: 15px 5px;\n  \n    /* > div {\n        height: 20px !important;\n        width: 20px !important;\n        margin: \"theme.spacing.unit * 2\";\n        color: ${props => props.theme.primaryBackGroundColour};\n\n    } */\n`;\n\nexport default accordian;\n","import React, { Component } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport styled from \"styled-components\";\n\nclass Toast extends Component {\n  state = {\n    open: false\n  };\n\n  componentDidMount() {\n    this.setState({ open: true });\n  }\n\n  handleClick = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    this.setState({ open: false });\n  };\n\n  render() {\n    let toastColour = \"rgb(49, 49, 49)\";\n    if (this.props.error) toastColour = \"rgb(220, 52, 54)\";\n    if (this.props.success) toastColour = \"rgb(70,154,16)\";\n\n    return (\n      <StyledSnackBar toastColour={toastColour}>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\"\n          }}\n          open={this.state.open}\n          autoHideDuration={6000}\n          onClose={this.handleClose}\n          ContentProps={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          message={<span id=\"message-id\">{this.props.message}</span>}\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              onClick={this.handleClose}\n            >\n              <CloseIcon />\n            </IconButton>\n          ]}\n        />\n      </StyledSnackBar>\n    );\n  }\n}\n\nconst StyledSnackBar = styled.div`\n  > div div {\n    background-color: ${props => props.toastColour};\n    font-weight: ${props => (props.error ? \"bold\" : \"initial\")};\n  }\n`;\n\nexport default Toast;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Box = props => {\n  const boxOpacity = props.opacity || false;\n\n  return (\n    <StyledBox margin={props.margin} opacity={boxOpacity ? \"0.5\" : \"1\"}>\n      {props.children}\n    </StyledBox>\n  );\n};\n\nconst StyledBox = styled.div`\n  margin: ${props => props.margin || \"20px\"};\n  opacity: ${props => props.opacity};\n`;\n\nexport default Box;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport AddIcon from \"@material-ui/icons/AddCircle\";\nimport MinusIcon from \"@material-ui/icons/RemoveCircle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Flex from \"./Flex\";\nimport Collapse from \"@material-ui/core/Collapse\";\n\nclass Minimizer extends Component {\n  state = {\n    isOpen: false\n  };\n\n  handleMinimizer = () => {\n    this.setState({ isOpen: !this.state.isOpen });\n  };\n\n  render() {\n    const { isOpen } = this.state;\n\n    return (\n      <StyledMinimizer padding={this.props.padding}>\n        <Flex margin=\"0\">\n          <IconButton\n            aria-label=\"Add\"\n            color=\"primary\"\n            onClick={this.handleMinimizer}\n          >\n            {isOpen ? <MinusIcon /> : <AddIcon />}\n          </IconButton>\n          {isOpen ? (\n            <small onClick={this.handleMinimizer}>\n              Click to minimise options\n            </small>\n          ) : (\n            <small onClick={this.handleMinimizer}>\n              Click to expand further options\n            </small>\n          )}\n        </Flex>\n        <Collapse in={isOpen}>\n          {isOpen ? (\n            <div className=\"minimized_children\">{this.props.children}</div>\n          ) : (\n            <Emtpy emptyHeight={this.props.emptyHeight} />\n          )}\n        </Collapse>\n      </StyledMinimizer>\n    );\n  }\n}\n\nconst Emtpy = styled.div`\n  height: ${props => props.emptyHeight || \"500px\"};\n`;\n\nconst StyledMinimizer = styled.div`\n  border: 2px solid rgba(0, 0, 0, 0.2);\n  border-top: 0;\n  border-bottom-left-radius: 8px;\n  border-bottom-right-radius: 8px;\n  margin-bottom: 35px;\n\n  > div small {\n    cursor: pointer;\n  }\n\n  .minimized_children {\n    padding: ${props => props.padding || \"auto\"};\n  }\n`;\n\nexport default Minimizer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Input from \"../../../../components/UI/Input\";\nimport TabMenu from \"../TabsMenu\";\nimport Button from \"../../../../components/UI/Buttons/Button\";\nimport Flex from \"../../../../components/UI/Wrappers/Flex\";\nimport Box from \"../../../../components/UI/Wrappers/Box\";\nimport Spinner from \"../../../../components/UI/Spinner\";\nimport Minimizer from \"../../../../components/UI/Wrappers/Minimizer\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport Dashboard from \"../../../Dashboard/Dashboard\";\n\nconst TabItems = props => {\n  console.log(\"tabItems props\", props);\n  if (props.itemProps.dropdownPages) {\n    return (\n      <TabMenu\n        navigationItems={props.itemProps.dropdownPages}\n        parentId={props.pageId}\n        parent={props.children}\n        onChange={props.onChange}\n        handlePageDelete={props.handlePageDelete}\n        openMediaModal={props.openMediaModal}\n        updatePageSubmit={props.updatePageSubmit}\n        isUpdating={props.isUpdating}\n        cancelUpdate={props.cancelUpdate}\n        stateBackup={props.stateBackup}\n        availableRoutes={props.availableRoutes}\n        template={props.template}\n        plugins={props.plugins}\n      />\n    );\n  }\n\n  const handleChange = event => {\n    event.preventDefault();\n    props.onChange(event.target, props.pageId, props.parentId);\n  };\n\n  const handleCheckbox = check => event => {\n    console.log(check, event.target.checked);\n    const newevent = {\n      name: event.target.name,\n      value: event.target.checked\n    };\n    props.onChange(newevent, props.pageId, props.parentId);\n  };\n\n  const handleMediaModal = event => {\n    event.preventDefault();\n    props.openMediaModal(event.target, props.pageId, props.parentId);\n  };\n\n  const handleColourPicker = event => {\n    props.onChange(event.target, props.pageId, props.parentId);\n  };\n\n  const handlesubmit = event => {\n    event.preventDefault();\n    props.updatePageSubmit(\n      props.itemProps.content,\n      props.pageId,\n      props.parentId\n    );\n  };\n\n  const clearInput = inputName => {\n    const event = { name: inputName, value: \"\" };\n    props.onChange(event, props.pageId, props.parentId);\n  };\n\n  const deletePage = () => {\n    props.handlePageDelete(props.pageId, props.parentId);\n  };\n\n  const {\n    topBanner,\n    topBannerHalfwidth,\n    topBannerImgSize,\n    topBannerHWbackImg,\n    topBannerHWBackColour,\n    topBannerTxtRightSide,\n    topBannerTxtLightTheme,\n    topBannerLogo,\n    topBannerfade,\n    topBannerTitle,\n    topBannerSubtitle,\n    topBannerDescription,\n    topBannerBtnText,\n    topBannerLink,\n    midBanner,\n    midBannerHalfwidth,\n    midBannerImgSize,\n    midBannerHWbackImg,\n    midBannerHWBackColour,\n    midBannerTxtRightSide,\n    midBannerTxtLightTheme,\n    midBannerLogo,\n    midBannerfade,\n    midBannerTitle,\n    midBannerSubtitle,\n    midBannerDescription,\n    midBannerBtnText,\n    midBannerLink,\n    bottomBanner,\n    mainText\n  } = props.itemProps.content;\n\n  return (\n    <Paper elevation={20}>\n      <StyledTabItems>\n        <div>\n          {props.children}\n          <Input\n            inputtype=\"inputSelector\"\n            label={`${\n              topBannerHalfwidth\n                ? \"Top Banner Image (Inside Banner)\"\n                : \"Top Banner Image\"\n            }`}\n            name=\"topBanner\"\n            value={topBanner}\n            onChange={handleChange}\n            onClick={handleMediaModal}\n            clearInput={clearInput}\n          />\n          {topBanner && (\n            <Minimizer>\n              <Box>\n                <Flex>\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Use the Top Banner image inside the Banner \"\n                    name=\"topBannerHalfwidth\"\n                    checked={topBannerHalfwidth}\n                    handleChange={handleCheckbox}\n                  />\n                </Flex>\n                {topBannerHalfwidth && (\n                  <>\n                    <Input\n                      inputtype=\"inputSelector\"\n                      label=\"Banner Background Image\"\n                      name=\"topBannerHWbackImg\"\n                      value={topBannerHWbackImg}\n                      onChange={handleChange}\n                      onClick={handleMediaModal}\n                      clearInput={clearInput}\n                    />\n                    <Flex>\n                      <Input\n                        inputtype=\"input\"\n                        type=\"number\"\n                        label=\"Banner Image Size\"\n                        name=\"topBannerImgSize\"\n                        value={topBannerImgSize}\n                        onChange={handleChange}\n                      />\n                      <Input\n                        inputtype=\"inputColourPicker\"\n                        label=\"Banner Background Colour\"\n                        name=\"topBannerHWBackColour\"\n                        value={topBannerHWBackColour}\n                        changeColour={handleColourPicker}\n                        pageId={\"home\"}\n                      />\n                    </Flex>\n                  </>\n                )}\n                <Flex>\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Banner Text Right Side\"\n                    name=\"topBannerTxtRightSide\"\n                    checked={topBannerTxtRightSide}\n                    handleChange={handleCheckbox}\n                  />\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Banner Light Text Color\"\n                    name=\"topBannerTxtLightTheme\"\n                    checked={topBannerTxtLightTheme}\n                    handleChange={handleCheckbox}\n                  />\n                </Flex>\n                <Flex>\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Use Logo in banner\"\n                    name=\"topBannerLogo\"\n                    checked={topBannerLogo}\n                    handleChange={handleCheckbox}\n                  />\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Banner content fade in effect\"\n                    name=\"topBannerfade\"\n                    checked={topBannerfade}\n                    handleChange={handleCheckbox}\n                  />\n                </Flex>\n                <Input\n                  inputtype=\"input\"\n                  label=\"Banner Title\"\n                  name=\"topBannerTitle\"\n                  value={topBannerTitle}\n                  onChange={handleChange}\n                />\n                <Input\n                  inputtype=\"input\"\n                  label=\"Banner Subtitle\"\n                  name=\"topBannerSubtitle\"\n                  value={topBannerSubtitle}\n                  onChange={handleChange}\n                />\n                <Input\n                  inputtype=\"input\"\n                  label=\"Banner Description\"\n                  name=\"topBannerDescription\"\n                  value={topBannerDescription}\n                  onChange={handleChange}\n                />\n                <Flex>\n                  <Input\n                    inputtype=\"input\"\n                    label=\"Banner Button Text\"\n                    name=\"topBannerBtnText\"\n                    value={topBannerBtnText}\n                    onChange={handleChange}\n                  />\n                  <Input\n                    inputtype=\"select\"\n                    label=\"Banner Link\"\n                    name=\"topBannerLink\"\n                    value={topBannerLink}\n                    items={props.availableRoutes}\n                    onSelectChange={handleChange}\n                  />\n                </Flex>\n              </Box>\n            </Minimizer>\n          )}\n          <Input\n            inputtype=\"inputSelector\"\n            label={`${\n              midBannerHalfwidth\n                ? \"Middle Banner Image (Inside Banner)\"\n                : \"Middle Banner Image\"\n            }`}\n            name=\"midBanner\"\n            value={midBanner}\n            onChange={handleChange}\n            onClick={handleMediaModal}\n            clearInput={clearInput}\n          />\n          {midBanner && (\n            <Minimizer>\n              <Box>\n                <Flex>\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Use the Middle Banner image inside the Banner\"\n                    name=\"midBannerHalfwidth\"\n                    checked={midBannerHalfwidth}\n                    handleChange={handleCheckbox}\n                  />\n                </Flex>\n                {midBannerHalfwidth && (\n                  <>\n                    <Input\n                      inputtype=\"inputSelector\"\n                      label=\"Banner Background Image\"\n                      name=\"midBannerHWbackImg\"\n                      value={midBannerHWbackImg}\n                      onChange={handleChange}\n                      onClick={handleMediaModal}\n                      clearInput={clearInput}\n                    />\n                    <Flex>\n                      <Input\n                        inputtype=\"input\"\n                        type=\"number\"\n                        label=\"Banner Image Size\"\n                        name=\"midBannerImgSize\"\n                        value={midBannerImgSize}\n                        onChange={handleChange}\n                      />\n                      <Input\n                        inputtype=\"inputColourPicker\"\n                        label=\"Banner Background Colour\"\n                        name=\"midBannerHWBackColour\"\n                        value={midBannerHWBackColour}\n                        changeColour={handleColourPicker}\n                        pageId={\"home\"}\n                      />\n                    </Flex>\n                  </>\n                )}\n                <Flex>\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Banner Text Right Side\"\n                    name=\"midBannerTxtRightSide\"\n                    checked={midBannerTxtRightSide}\n                    handleChange={handleCheckbox}\n                  />\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Banner Light Text Color\"\n                    name=\"midBannerTxtLightTheme\"\n                    checked={midBannerTxtLightTheme}\n                    handleChange={handleCheckbox}\n                  />\n                </Flex>\n                <Flex>\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Use Logo in banner\"\n                    name=\"midBannerLogo\"\n                    checked={midBannerLogo}\n                    handleChange={handleCheckbox}\n                  />\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Banner content fade in effect\"\n                    name=\"midBannerfade\"\n                    checked={midBannerfade}\n                    handleChange={handleCheckbox}\n                  />\n                </Flex>\n                <Input\n                  inputtype=\"input\"\n                  label=\"Banner Title\"\n                  name=\"midBannerTitle\"\n                  value={midBannerTitle}\n                  onChange={handleChange}\n                />\n                <Input\n                  inputtype=\"input\"\n                  label=\"Banner Subtitle\"\n                  name=\"midBannerSubtitle\"\n                  value={midBannerSubtitle}\n                  onChange={handleChange}\n                />\n                <Input\n                  inputtype=\"input\"\n                  label=\"Banner Description\"\n                  name=\"midBannerDescription\"\n                  value={midBannerDescription}\n                  onChange={handleChange}\n                />\n                <Flex>\n                  <Input\n                    inputtype=\"input\"\n                    label=\"Banner Button Text\"\n                    name=\"midBannerBtnText\"\n                    value={midBannerBtnText}\n                    onChange={handleChange}\n                  />\n                  <Input\n                    inputtype=\"select\"\n                    label=\"Banner Link\"\n                    name=\"midBannerLink\"\n                    value={midBannerLink}\n                    items={props.availableRoutes}\n                    onSelectChange={handleChange}\n                  />\n                </Flex>\n              </Box>\n            </Minimizer>\n          )}\n          <Input\n            inputtype=\"textarea\"\n            label=\"Main Body Text\"\n            name=\"mainText\"\n            value={mainText}\n            onChange={handleChange}\n          />\n        </div>\n        <Preview>\n          <Dashboard\n            pageInfo={props.itemProps}\n            {...props}\n            template={props.template}\n            plugins={props.plugins}\n            overlayBlocker={true}\n          />\n        </Preview>\n      </StyledTabItems>\n      <Flex justifyContent={\"space-between\"}>\n        <div>\n          <Flex justifyContent=\"flex-start\">\n            <Button margin=\"2px 5px 15px 20px\" onClick={handlesubmit}>\n              Update\n            </Button>\n            {props.isUpdating && <Spinner />}\n            {props.stateBackup && (\n              <Button margin=\"2px 20px 15px 20px\" onClick={props.cancelUpdate}>\n                Undo Changes\n              </Button>\n            )}\n          </Flex>\n        </div>\n        <DeletePageIcon>\n          <IconButton onClick={deletePage}>\n            <DeleteIcon fontSize=\"large\" />\n          </IconButton>\n        </DeletePageIcon>\n      </Flex>\n    </Paper>\n  );\n};\n\nconst StyledTabItems = styled.div`\n  padding: 3vh;\n  display: grid;\n  grid-template-columns: 65% 35%;\n  grid-gap: 8px;\n`;\n\nconst Preview = styled.div`\n  display: block;\n  zoom: 30%;\n  padding-top: 56px;\n  box-shadow: 2px 2px 2px;\n\n  @media (max-width: 500px) {\n    display: none;\n  }\n`;\n\nconst DeletePageIcon = styled.div`\n  padding: 5px;\n`;\n\nexport default TabItems;\n","import React, { Component } from \"react\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport styled from \"styled-components\";\n\nimport Toast from \"../../../components/UI/Toast\";\n\nimport TabItems from \"./TabItems.js/TabItems\";\n\nexport default class TabMenu extends Component {\n  state = {\n    value: 0,\n    disableTabText: \"\",\n    topBannerOptions: true,\n    midBannerOptions: true,\n    bottomBannerOptions: true\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.stateBackup !== prevProps.stateBackup) {\n      if (this.props.stateBackup) {\n        this.setState({\n          disableTabText:\n            \"You have made updates to this page, please save or undo your changes before selecting a new page\"\n        });\n      } else {\n        this.setState({ disableTabText: \"\" });\n      }\n    }\n  }\n\n  handleChange = (event, value) => {\n    if (!this.props.stateBackup) {\n      this.setState({ value });\n    }\n  };\n\n  render() {\n    const { value } = this.state;\n    const { navigationItems, parent, parentId } = this.props;\n    console.log(\"tabMenu props\", this.props);\n    let tabLabels = null;\n    let tabitems = null;\n\n    if (navigationItems !== null) {\n      tabLabels = Object.keys(navigationItems).map((key, index) => {\n        const item = navigationItems[key];\n        //passes the item title down to tabItems, which then runs tabs again if there is a drop down, and passes a parent value back\n        return (\n          <Tab\n            key={index}\n            label={\n              parent ? parent.props.children + \" - \" + item.title : item.title\n            }\n          />\n        );\n      });\n\n      tabitems = Object.keys(navigationItems).map((key, index) => {\n        return (\n          value === index && (\n            <TabItems\n              key={index}\n              pageId={key}\n              parentId={parentId || null}\n              itemProps={navigationItems[key]}\n              onChange={this.props.onChange}\n              handlePageDelete={this.props.handlePageDelete}\n              openMediaModal={this.props.openMediaModal}\n              updatePageSubmit={this.props.updatePageSubmit}\n              isUpdating={this.props.isUpdating}\n              cancelUpdate={this.props.cancelUpdate}\n              stateBackup={this.props.stateBackup}\n              availableRoutes={this.props.availableRoutes}\n              template={this.props.template}\n              plugins={this.props.plugins}\n            >\n              <h2>{navigationItems[key].title}</h2>\n            </TabItems>\n          )\n        );\n      });\n\n      // tabLabels = navigationItems.map( (item, index) => {\n      //     //passes the item title down to tabItems, which then runs tabs again if there is a drop down, and passes a parent value back\n      //     return <Tab key={index} label={ parent ? parent+' - '+item.title : item.title} />\n      // })\n      // tabitems = navigationItems.map( (item, index) => {\n      //     return( value === index && <TabItems key={index} itemProps={item}>{item.title }</TabItems> )\n      // })\n    }\n\n    if (tabitems === null && tabLabels === null) return <div />;\n    return (\n      <StyledTabs>\n        <Tooltip title={this.state.disableTabText}>\n          <AppBar position=\"static\">\n            <Tabs\n              value={value}\n              onChange={this.handleChange}\n              variant=\"scrollable\"\n              scrollButtons=\"auto\"\n            >\n              {tabLabels}\n            </Tabs>\n          </AppBar>\n        </Tooltip>\n        {tabitems}\n        {this.props.isError && (\n          <Toast message={this.props.isError} error={true} />\n        )}\n      </StyledTabs>\n    );\n  }\n}\n\nconst StyledTabs = styled.div`\n  > header {\n    background-color: ${props => props.theme.primaryBackGroundColour};\n    z-index: 20;\n  }\n`;\n","import React from \"react\";\n\n//import TextField from '@material-ui/core/TextField';\nimport Dialog from \"@material-ui/core/Dialog\";\n// import DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst Modal = props => {\n  // const childrenWithProps = React.Children.map()\n  const width = props.fullWidth ? props.fullWidth : true;\n  const maxWidth = props.maxWidth ? props.maxWidth : \"lg\";\n\n  return (\n    <div>\n      <Dialog\n        open={props.open}\n        onClose={props.handleClose}\n        aria-labelledby=\"form-dialog-title\"\n        fullWidth={width}\n        maxWidth={maxWidth}\n      >\n        <DialogTitle id=\"form-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>{props.description}</DialogContentText>\n          <br />\n          <br />\n          {/* {React.cloneElement(props.children, { handleSubmit: props.handleSubmit })} */}\n          {props.children}\n        </DialogContent>\n        {/* <DialogActions>\n            <button onClick={props.handleClose} >\n              Cancel\n            </button>\n            <button onClick={props.handleSubmit} >\n              Confirm\n            </button>\n          </DialogActions> */}\n      </Dialog>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { Component } from \"react\";\nimport Input from \"../UI/Input\";\nimport Flex from \"../UI/Wrappers/Flex\";\nimport Button from \"../UI/Buttons/Button\";\nimport Spinner from \"../UI/Spinner\";\n\nexport class NewPageForm extends Component {\n  state = {\n    title: \"\",\n    checked: false,\n    selectVal: null\n  };\n\n  componentDidMount() {\n    if (this.props.navigationItems !== null) {\n      // this.setState({selectVal: this.props.navigationItems[0].title})\n      let title = \"\";\n      for (var prop in this.props.navigationItems) {\n        title = this.props.navigationItems[prop].title;\n        break;\n      }\n\n      this.setState({ selectVal: title });\n    }\n  }\n\n  handleCheckbox = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  onSelectChange = event => {\n    this.setState({ selectVal: event.target.value });\n  };\n\n  onInputChange = event => {\n    const { value, name } = event.target;\n    const scrubbedVal = value.replace(/[^\\w\\s]/gi, \"\");\n\n    this.setState({ [name]: scrubbedVal });\n  };\n\n  render() {\n    console.log(\"newpageForm props\", this.props);\n    return (\n      <div>\n        <form>\n          <Input\n            inputtype=\"input\"\n            label=\"Page Title\"\n            name=\"title\"\n            value={this.state.title}\n            onChange={this.onInputChange}\n          />\n          {this.props.navigationItems !== null && (\n            <div>\n              <Input\n                inputtype=\"checkbox\"\n                sideLabel=\"Is this a dropdown SubPage\"\n                checked={this.state.checked}\n                handleChange={this.handleCheckbox}\n              />\n              <br />\n              {this.state.checked && (\n                <Input\n                  inputtype=\"select\"\n                  value={this.state.selectVal}\n                  label=\"Choose the parent page for this Subpage\"\n                  items={this.props.navigationItems}\n                  onSelectChange={this.onSelectChange}\n                />\n              )}\n            </div>\n          )}\n        </form>\n        <Flex justifyContent=\"flex-end\" margin=\"5px\">\n          <Button onClick={this.props.handleClose}>Cancel</Button>\n          <Button\n            onClick={() => this.props.handleSubmit(this.state)}\n            disabled={this.state.title === \"\" ? true : false}\n          >\n            Confirm\n          </Button>\n          {this.props.loading && <Spinner />}\n        </Flex>\n      </div>\n    );\n  }\n}\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//       //updateNewPageData: () => dispatch(actions.newPageData()),\n//   }\n// }\n\n//export default connect(null, mapDispatchToProps)(NewPageForm)\nexport default NewPageForm;\n","import React, { Component } from \"react\";\n\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport styled from \"styled-components\";\n\nclass TitlebarGridList extends Component {\n  state = {\n    columns: 5,\n    spacing: 20,\n    activeIndex: null,\n    selectedValue: \"\",\n    selectedName: \"\"\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.handleResize);\n    this.handleResize();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n\n  handleResize = () => {\n    const windowSize = window.innerWidth;\n    const columns = (windowSize > 768 && 5) || (windowSize <= 480 && 1) || 3;\n    const spacing = (windowSize > 768 && 20) || 8;\n\n    this.setState({\n      columns,\n      spacing\n    });\n  };\n\n  handleSelect = (event, index, tile) => {\n    this.props.selectedImage(index, tile);\n  };\n\n  render() {\n    const { tileData } = this.props;\n    if (!tileData || !tileData.length) return <div />;\n\n    return (\n      <StyledGrid>\n        <GridList\n          cellHeight={180}\n          className=\"gridList\"\n          cols={this.state.columns}\n          spacing={this.state.spacing}\n        >\n          <GridListTile\n            key=\"Subheader\"\n            cols={this.state.columns}\n            style={{ height: \"auto\" }}\n          >\n            <ListSubheader component=\"div\">\n              This is where your current websites images located.\n            </ListSubheader>\n          </GridListTile>\n          {tileData.map((tile, index) => {\n            const gridTileClass =\n              this.props.selectedIndex === index ? \"media active\" : \"media\";\n\n            return (\n              <GridListTile\n                key={tile.title}\n                className={gridTileClass}\n                onClick={e => this.handleSelect(e, index, tile)}\n              >\n                <img src={tile.img} alt={tile.title} />\n                <GridListTileBar\n                  title={tile.title}\n                  actionIcon={\n                    !this.props.isModal ? (\n                      <IconButton\n                        className=\"gridIcon\"\n                        onClick={() =>\n                          this.props.deleteImage(tile.img, tile.title)\n                        }\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    ) : (\n                      false\n                    )\n                  }\n                />\n              </GridListTile>\n            );\n          })}\n        </GridList>\n      </StyledGrid>\n    );\n  }\n}\n\nconst StyledGrid = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  /* justify-content: space-around; */\n  overflow: hidden;\n  margin: 20px 0;\n  padding: 10px;\n\n  .gridlist {\n    width: 100%;\n    height: 450px;\n  }\n\n  .media {\n    padding: 3px;\n    cursor: pointer;\n    -webkit-transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n    -moz-transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n    -ms-transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n    -o-transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n    transition: border 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n  }\n\n  .media.active {\n    border: 1px solid #09c;\n    border-radius: 5px;\n    box-shadow: 1px 1px 7px rgba(0, 200, 204, 0.7);\n    outline: none;\n  }\n\n  .gridIcon {\n    color: rgba(255, 255, 255, 0.54);\n  }\n`;\n\nexport default TitlebarGridList;\n","import React, { Component } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/storage\";\n\nimport classNames from \"classnames\";\n\nimport styled from \"styled-components\";\nimport Button from \"../../../components/UI/Buttons/Button\";\nimport Input from \"../../../components/UI/Input\";\nimport Flex from \"../../../components/UI/Wrappers/Flex\";\nimport Box from \"../../../components/UI/Wrappers/Box\";\nimport Modal from \"../../../components/UI/Modal\";\nimport Spinner from \"../../../components/UI/Spinner\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ImgGridList from \"./ImgGridList\";\n\nclass Media extends Component {\n  state = {\n    uploadOpen: false,\n    error: null,\n    customURL: false,\n    customURLtext: \"\",\n    activeIndex: null,\n    selectedValue: \"\",\n    selectedName: \"\",\n    deleteImgOpen: false\n  };\n\n  componentDidMount() {\n    console.log(\"mounted\");\n    this.getImageUrls();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.currentImages === null) return;\n\n    if (\n      this.props.currentImages !== prevProps.currentImages ||\n      this.props.isAuthenticated !== prevProps.isAuthenticated\n    ) {\n      this.getImageUrls();\n    }\n  }\n\n  getImageUrls = () => {\n    const that = this;\n    let imageContainer = [];\n    let imageCount = Object.keys(this.props.currentImages).length;\n    let returnedCount = 0;\n    const siteName = process.env.REACT_APP_SITENAME;\n\n    let storageRef = firebase.storage().ref();\n\n    Object.keys(this.props.currentImages).map((key, i) => {\n      const img = this.props.currentImages[key];\n      return storageRef\n        .child(`${siteName}/${img}`)\n        .getDownloadURL()\n        .then(url => {\n          imageContainer = [...imageContainer, { title: img, img: url, key }];\n          returnedCount++;\n\n          if (imageCount === returnedCount) {\n            that.props.setMediaImages(imageContainer);\n          }\n        })\n        .catch(error => {\n          // Handle any errors\n          console.log(error);\n        });\n    });\n  };\n\n  onDrop = (acceptedFiles, rejectedFiles) => {\n    // Do something with files\n    console.log(\"accepted\", acceptedFiles);\n    console.log(\"rejected\", rejectedFiles);\n    if (rejectedFiles.length !== 0) {\n      this.setState({ error: \"Rejected upload, incompatable file detected\" });\n      return;\n    }\n    const siteName = process.env.REACT_APP_SITENAME;\n    const user = firebase.auth().currentUser;\n\n    if (user) {\n      console.log(\"user is signed in\");\n      const file = acceptedFiles[0];\n      if (this.checkFileAlreadyExists(file)) {\n        this.setState({\n          error: `${\n            file.name\n          } already exists, please remove the old image first`\n        });\n        return;\n      }\n      firebase\n        .storage()\n        .ref()\n        .child(`${siteName}/${file.name}`)\n        .put(file)\n        .then(snapshot => {\n          console.log(\"Uploaded a blob or file!\");\n          console.log(snapshot);\n          this.addImageRefToDb(file);\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    } else {\n      // No user is signed in.\n      console.log(\" No user is signed in.\");\n      this.props.isTimedOut();\n    }\n  };\n\n  checkFileAlreadyExists = file => {\n    if (this.props.currentImages === null) return;\n\n    \n\n    const findImageRef = Object.keys(this.props.currentImages).filter(\n      (key, i) => {\n        const img = this.props.currentImages[key];\n        return img === file.name;\n      }\n    );\n\n    return !findImageRef.length ? false : true;\n  };\n  \n\n  addImageRefToDb = file => {\n    const siteName = process.env.REACT_APP_SITENAME;\n\n    var newPostKey = firebase\n      .database()\n      .ref()\n      .child(`${siteName}/site/images`)\n      .push().key;\n    var updates = { [newPostKey]: file.name };\n    const that = this;\n\n    return firebase\n      .database()\n      .ref()\n      .child(`${siteName}/site/images`)\n      .update(updates, function(error) {\n        if (error) {\n          // The write failed...\n          console.log(\"image ref in db write failed...\", error);\n        } else {\n          // Data saved successfully!\n          console.log(\"image ref in db saved successfully\");\n          that.props.refreshState();\n        }\n      });\n  };\n\n  selectedImage = (index, tile) => {\n    this.setState({\n      customURLtext: \"\",\n      activeIndex: index,\n      selectedValue: tile.img,\n      selectedName: tile.title\n    });\n  };\n\n  handleCustomURL = event => {\n    this.setState({\n      customURLtext: event.target.value,\n      activeIndex: null,\n      selectedValue: \"\",\n      selectedName: \"\"\n    });\n  };\n\n  confirmImage = () => {\n    const { customURLtext, selectedValue } = this.state;\n    const { tabItemReference } = this.props;\n    let image = customURLtext ? customURLtext : selectedValue;\n\n    this.props.onChangePageState(\n      { name: tabItemReference[0].name, value: image },\n      tabItemReference[1],\n      tabItemReference[2]\n    );\n    this.props.handleClose();\n  };\n\n  deleteImage = (imgUrl, name) => {\n    console.log(imgUrl, name);\n    this.setState({ deleteImgOpen: true });\n  };\n\n  confirmDelete = () => {\n    console.log(this.state, this.props);\n    const that = this;\n    const siteName = process.env.REACT_APP_SITENAME;\n\n    const img = this.props.imageURLs.find(\n      img => img.title === this.state.selectedName\n    );\n    let storageRef = firebase.storage().ref();\n\n    console.log(\"pre delete\");\n    firebase\n      .database()\n      .ref()\n      .child(`${siteName}/site/images/${img.key}`)\n      .remove()\n      .then(() => {\n        console.log(\"db delete succeeded!\");\n        storageRef\n          .child(`${siteName}/${img.title}`)\n          .delete()\n          .then(function() {\n            // File deleted successfully\n            console.log(\"storage img deleted\");\n            that.setState({ deleteImgOpen: false });\n            that.props.refreshState();\n          })\n          .catch(function(error) {\n            // Uh-oh, an error occurred!\n            console.log(\"storage error\", error);\n          });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  handleUploadOpen = () => {\n    this.setState({ uploadOpen: !this.state.uploadOpen });\n  };\n\n  render() {\n    console.log(\"media props\", this.props);\n    const {\n      error,\n      uploadOpen,\n      customURL,\n      activeIndex,\n      customURLtext,\n      selectedName,\n      selectedValue\n    } = this.state;\n    const { imageURLs, currentImages } = this.props;\n\n    let dropZone = null;\n    let mediaTemplate = null;\n    let noMediaMessage = null;\n\n    if (imageURLs.length === 0 && currentImages) {\n      noMediaMessage = (\n        <div>\n          <p>\n            <i>\n              Loading media, if nothing appears after ten seconds. Please\n              refresh the page{\" \"}\n            </i>\n          </p>\n          <Spinner />\n        </div>\n      );\n    } else if (currentImages === null) {\n      noMediaMessage = (\n        <div>\n          <p>\n            <i>\n              Here is where you can add images to your website, Click upload\n              media to create your media library\n            </i>\n          </p>\n        </div>\n      );\n    }\n\n    if (uploadOpen && !this.props.isModal) {\n      dropZone = (\n        <Dropzone onDrop={this.onDrop} multiple={false} accept=\"image/*\">\n          {({ getRootProps, getInputProps, isDragActive }) => {\n            return (\n              <StyledDropArea\n                {...getRootProps()}\n                className={classNames(\"dropzone\", {\n                  \"dropzone--isActive\": isDragActive\n                })}\n              >\n                <input {...getInputProps()} />\n                {isDragActive ? (\n                  <p>Drop files here...</p>\n                ) : (\n                  <p>\n                    Try dropping some files here, or click to select files to\n                    upload.\n                  </p>\n                )}\n              </StyledDropArea>\n            );\n          }}\n        </Dropzone>\n      );\n    }\n\n    if (!this.props.isModal) {\n      mediaTemplate = (\n        <div>\n          {noMediaMessage}\n          <Button onClick={this.handleUploadOpen}>\n            {uploadOpen ? \"Close DropZone\" : \"Upload Media\"}\n          </Button>\n          {dropZone}\n          {error && <div>{error}</div>}\n          <Paper elevation={7}>\n            <ImgGridList\n              tileData={this.props.imageURLs}\n              isModal={false}\n              selectedIndex={activeIndex}\n              selectedImage={this.selectedImage}\n              deleteImage={this.deleteImage}\n            />\n          </Paper>\n        </div>\n      );\n    } else {\n      const selectedLabel = `Current Selection:  ${selectedName}`;\n      mediaTemplate = (\n        <IsMediaModal>\n          {noMediaMessage}\n          <Flex>\n            <Box opacity={customURL}>\n              <Button\n                onClick={() => {\n                  this.setState({ customURL: false });\n                }}\n              >\n                Use Media Library\n              </Button>\n            </Box>\n            <h2>OR ..</h2>\n            <Box opacity={!customURL}>\n              <Button\n                onClick={() => {\n                  this.setState({ customURL: true });\n                }}\n              >\n                {\" \"}\n                {!customURL ? \"Use\" : \"Close\"} custom URL location?\n              </Button>\n            </Box>\n          </Flex>\n          {/* <Fade in={customURL}> */}\n          {customURL ? (\n            <Input\n              inputtype=\"input\"\n              label=\"If you want to use an image stored elsewhere, enter the Url address below\"\n              value={customURLtext}\n              onChange={this.handleCustomURL}\n            />\n          ) : (\n            <div>\n              <Paper elevation={5}>\n                <ImgGridList\n                  tileData={this.props.imageURLs}\n                  isModal={true}\n                  selectedIndex={activeIndex}\n                  selectedImage={this.selectedImage}\n                />\n              </Paper>\n              <Input\n                inputtype=\"input\"\n                label={`${\n                  selectedValue ? selectedLabel : \"Select Media Image URL above\"\n                }`}\n                value={selectedValue}\n                disabled={true}\n                placeholder=\"No Media image selected\"\n              />\n            </div>\n          )}\n          {/* </Fade> */}\n          <Divider />\n          <br />\n          <Flex>\n            <Button onClick={this.props.handleClose}>Cancel</Button>\n            <Button onClick={this.confirmImage}>Confirm Image</Button>\n          </Flex>\n          <br />\n        </IsMediaModal>\n      );\n    }\n\n    return (\n      <>\n        {mediaTemplate}\n        <Modal\n          open={this.state.deleteImgOpen}\n          handleClose={() => this.setState({ deleteImgOpen: false })}\n          title=\"Delete image\"\n          description={`Are you sure you would like to delete the image ${\n            this.state.selectedName\n          }. \\n Please note that anywhere this image is used on the website will no longer work once the image is deleted.`}\n        >\n          <Flex>\n            <Button onClick={this.confirmDelete}>Confirm Delete</Button>\n            <Button onClick={() => this.setState({ deleteImgOpen: false })}>\n              Cancel\n            </Button>\n          </Flex>\n        </Modal>\n      </>\n    );\n  }\n}\n\nconst StyledDropArea = styled.div`\n  border-style: dotted;\n  padding: 5px 20px;\n  margin: 20px 5px;\n  cursor: pointer;\n\n  /* desktop */\n  @media (min-width: 500px) {\n    min-width: 455px;\n  }\n`;\n\nconst IsMediaModal = styled.div`\n  margin-top: -40px;\n`;\n\nexport default Media;\n","import React, { Component } from \"react\";\n\nimport Input from \"../../../components/UI/Input\";\nimport Button from \"../../../components/UI/Buttons/Button\";\nimport Flex from \"../../../components/UI/Wrappers/Flex\";\nimport Grid from \"../../../components/UI/Wrappers/Grid\";\nimport Spinner from \"../../../components/UI/Spinner\";\n\nimport styled from \"styled-components\";\n\nclass Template extends Component {\n  handleChange = event => {\n    event.preventDefault();\n    this.props.changeTemplateState(event.target, \"template\", null);\n  };\n\n  handlesubmit = event => {\n    event.preventDefault();\n    const siteName = process.env.REACT_APP_SITENAME;\n\n    const url = `/${siteName}/site/template`;\n    this.props.templateChangeSubmit(url, this.props.template);\n  };\n\n  handleCheckbox = check => event => {\n    console.log(check, event.target.checked);\n    const newevent = {\n      name: event.target.name,\n      value: event.target.checked\n    };\n    this.props.changeTemplateState(newevent, \"template\", null);\n  };\n\n  handleMediaModal = event => {\n    event.preventDefault();\n    this.props.openMediaModal(event.target, \"template\", null);\n  };\n\n  clearInput = inputName => {\n    const event = { name: inputName, value: \"\" };\n    this.props.changeTemplateState(event, \"template\", null);\n  };\n\n  render() {\n    if (!this.props.template) return <div />;\n    //console.log('templateProps', this.props)\n    const buttonStyle = [{ value: \"contained\" }, { value: \"outlined\" }];\n    const {\n      navButtons,\n      siteButtons,\n      transparentHeader,\n      navLightTheme,\n      siteLogo,\n      version\n    } = this.props.template;\n\n    return (\n      <StyledTemplate>\n        <Flex>\n          <Input\n            inputtype=\"checkbox\"\n            sideLabel=\"Is the header toolbar transparent\"\n            name=\"transparentHeader\"\n            checked={transparentHeader}\n            handleChange={this.handleCheckbox}\n          />\n          <Input\n            inputtype=\"checkbox\"\n            sideLabel=\"Use Light theme for navigation Bar\"\n            name=\"navLightTheme\"\n            checked={navLightTheme}\n            handleChange={this.handleCheckbox}\n          />\n        </Flex>\n        <Input\n          inputtype=\"inputSelector\"\n          label=\"Website Logo\"\n          name=\"siteLogo\"\n          value={siteLogo}\n          onChange={this.handleChange}\n          onClick={this.handleMediaModal}\n          clearInput={this.clearInput}\n        />\n        <br />\n        <Grid cols=\"25% 25%\" colsLarge={\"35% 35%\"} colsMed={\"50% 50%\"}>\n          <Input\n            inputtype=\"select\"\n            label=\"Header Navigation button style\"\n            name=\"navButtons\"\n            value={navButtons}\n            items={buttonStyle}\n            onSelectChange={this.handleChange}\n          />\n          <Input\n            inputtype=\"select\"\n            label=\"Webpage button style\"\n            name=\"siteButtons\"\n            value={siteButtons}\n            items={buttonStyle}\n            onSelectChange={this.handleChange}\n          />\n          <Button variant={navButtons}>\n            {navButtons === \"contained\" ? \"Contained Style\" : \"Outlined Style\"}\n          </Button>\n          <Button variant={siteButtons}>\n            {siteButtons === \"contained\" ? \"Contained Style\" : \"Outlined Style\"}\n          </Button>\n        </Grid>\n        <br />\n        <hr />\n        <br />\n        <Flex justifyContent=\"flex-start\">\n          <Button margin=\"2px 5px 15px 20px\" onClick={this.handlesubmit}>\n            Update\n          </Button>\n          {this.props.isUpdating && <Spinner />}\n          {this.props.stateBackup && (\n            <Button\n              margin=\"2px 20px 15px 20px\"\n              onClick={this.props.cancelUpdate}\n            >\n              Undo Changes\n            </Button>\n          )}\n        </Flex>\n      </StyledTemplate>\n    );\n  }\n}\n\nconst StyledTemplate = styled.div`\n  width: 100%;\n`;\n\nexport default Template;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport Input from \"../../../components/UI/Input\";\nimport Button from \"../../../components/UI/Buttons/Button\";\nimport Flex from \"../../../components/UI/Wrappers/Flex\";\nimport Grid from \"../../../components/UI/Wrappers/Grid\";\nimport Box from \"../../../components/UI/Wrappers/Box\";\nimport Spinner from \"../../../components/UI/Spinner\";\nimport Minimizer from \"../../../components/UI/Wrappers/Minimizer\";\n\nimport Dashboard from \"../../Dashboard/Dashboard\";\n\nclass Homepage extends Component {\n  state = {\n    previewOpen: false\n  };\n\n  handleChange = event => {\n    event.preventDefault();\n    this.props.changeHomepageState(event.target, \"home\", null);\n  };\n\n  handlesubmit = event => {\n    event.preventDefault();\n    const siteName = process.env.REACT_APP_SITENAME;\n\n    const url = `/${siteName}/site/home/content`;\n    this.props.homepageChangeSubmit(url, this.props.homePage.content);\n  };\n\n  handleCheckbox = check => event => {\n    console.log(check, event.target.checked);\n    const newevent = {\n      name: event.target.name,\n      value: event.target.checked\n    };\n    this.props.changeHomepageState(newevent, \"home\", null);\n  };\n\n  handleMediaModal = event => {\n    event.preventDefault();\n    this.props.openMediaModal(event.target, \"home\", null);\n  };\n\n  handleColourPicker = event => {\n    this.props.changeHomepageState(event.target, \"home\", null);\n  };\n\n  clearInput = inputName => {\n    const event = { name: inputName, value: \"\" };\n    this.props.changeHomepageState(event, \"home\", null);\n  };\n\n  render() {\n    if (!this.props.homePage) return <div />;\n    const positionArray = [\n      { value: \"Top\" },\n      { value: \"Middle\" },\n      { value: \"Bottom\" }\n    ];\n    const floatArray = [{ value: \"left\" }, { value: \"right\" }];\n\n    const {\n      topBanner,\n      topBannerHalfwidth,\n      topBannerImgSize,\n      topBannerHWbackImg,\n      topBannerHWBackColour,\n      topBannerTxtRightSide,\n      topBannerTxtLightTheme,\n      topBannerLogo,\n      topBannerfade,\n      topBannerTitle,\n      topBannerSubtitle,\n      topBannerDescription,\n      topBannerBtnText,\n      topBannerLink,\n      midBanner,\n      midBannerHalfwidth,\n      midBannerImgSize,\n      midBannerHWbackImg,\n      midBannerHWBackColour,\n      midBannerTxtRightSide,\n      midBannerTxtLightTheme,\n      midBannerLogo,\n      midBannerfade,\n      midBannerTitle,\n      midBannerSubtitle,\n      midBannerDescription,\n      midBannerBtnText,\n      midBannerLink,\n      bottomBanner,\n      mainText,\n      mainTextPosition,\n      mainTextCenterTitle,\n      mainTextRightSide,\n      mainTextBackColour,\n      mainTextImg,\n      mainTextImgAlign,\n      mainTextImgWidth,\n      mainTextImgHeight\n    } = this.props.homePage.content;\n    console.log(\"Homepage Props\", this.props);\n\n    return (\n      <div className=\"fullwidth\">\n        <StyledHomePage>\n          <div>\n            <Input\n              inputtype=\"inputSelector\"\n              label={`${\n                topBannerHalfwidth\n                  ? \"Top Banner Image (Inside Banner)\"\n                  : \"Top Banner Image\"\n              }`}\n              name=\"topBanner\"\n              value={topBanner}\n              onChange={this.handleChange}\n              onClick={this.handleMediaModal}\n              clearInput={this.clearInput}\n            />\n            {topBanner && (\n              <Minimizer>\n                <Box>\n                  <Flex>\n                    <Input\n                      inputtype=\"checkbox\"\n                      sideLabel=\"Use the Top Banner image inside the Banner \"\n                      name=\"topBannerHalfwidth\"\n                      checked={topBannerHalfwidth}\n                      handleChange={this.handleCheckbox}\n                    />\n                  </Flex>\n                  {topBannerHalfwidth && (\n                    <>\n                      <Input\n                        inputtype=\"inputSelector\"\n                        label=\"Banner Background Image\"\n                        name=\"topBannerHWbackImg\"\n                        value={topBannerHWbackImg}\n                        onChange={this.handleChange}\n                        onClick={this.handleMediaModal}\n                        clearInput={this.clearInput}\n                      />\n                      <Flex>\n                        <Input\n                          inputtype=\"input\"\n                          type=\"number\"\n                          label=\"Banner Image Size\"\n                          name=\"topBannerImgSize\"\n                          value={topBannerImgSize}\n                          onChange={this.handleChange}\n                        />\n                        <Input\n                          inputtype=\"inputColourPicker\"\n                          label=\"Banner Background Colour\"\n                          name=\"topBannerHWBackColour\"\n                          value={topBannerHWBackColour}\n                          changeColour={this.handleColourPicker}\n                          pageId={\"home\"}\n                        />\n                      </Flex>\n                    </>\n                  )}\n                  <Flex>\n                    <Input\n                      inputtype=\"checkbox\"\n                      sideLabel=\"Banner Text Right Side\"\n                      name=\"topBannerTxtRightSide\"\n                      checked={topBannerTxtRightSide}\n                      handleChange={this.handleCheckbox}\n                    />\n                    <Input\n                      inputtype=\"checkbox\"\n                      sideLabel=\"Banner Light Text Color\"\n                      name=\"topBannerTxtLightTheme\"\n                      checked={topBannerTxtLightTheme}\n                      handleChange={this.handleCheckbox}\n                    />\n                  </Flex>\n                  <Flex>\n                    <Input\n                      inputtype=\"checkbox\"\n                      sideLabel=\"Use Logo in banner\"\n                      name=\"topBannerLogo\"\n                      checked={topBannerLogo}\n                      handleChange={this.handleCheckbox}\n                    />\n                    <Input\n                      inputtype=\"checkbox\"\n                      sideLabel=\"Banner content fade in effect\"\n                      name=\"topBannerfade\"\n                      checked={topBannerfade}\n                      handleChange={this.handleCheckbox}\n                    />\n                  </Flex>\n                  <Input\n                    inputtype=\"input\"\n                    label=\"Banner Title\"\n                    name=\"topBannerTitle\"\n                    value={topBannerTitle}\n                    onChange={this.handleChange}\n                  />\n                  <Input\n                    inputtype=\"input\"\n                    label=\"Banner Subtitle\"\n                    name=\"topBannerSubtitle\"\n                    value={topBannerSubtitle}\n                    onChange={this.handleChange}\n                  />\n                  <Input\n                    inputtype=\"input\"\n                    label=\"Banner Description\"\n                    name=\"topBannerDescription\"\n                    value={topBannerDescription}\n                    onChange={this.handleChange}\n                  />\n                  <Flex>\n                    <Input\n                      inputtype=\"input\"\n                      label=\"Banner Button Text\"\n                      name=\"topBannerBtnText\"\n                      value={topBannerBtnText}\n                      onChange={this.handleChange}\n                    />\n                    <Input\n                      inputtype=\"select\"\n                      label=\"Banner Link\"\n                      name=\"topBannerLink\"\n                      value={topBannerLink}\n                      items={this.props.availableRoutes}\n                      onSelectChange={this.handleChange}\n                    />\n                  </Flex>\n                </Box>\n              </Minimizer>\n            )}\n            <Input\n              inputtype=\"inputSelector\"\n              label={`${\n                midBannerHalfwidth\n                  ? \"Middle Banner Image (Inside Banner)\"\n                  : \"Middle Banner Image\"\n              }`}\n              name=\"midBanner\"\n              value={midBanner}\n              onChange={this.handleChange}\n              onClick={this.handleMediaModal}\n              clearInput={this.clearInput}\n            />\n            {midBanner && (\n              <Minimizer>\n                <Box>\n                  <Flex>\n                    <Input\n                      inputtype=\"checkbox\"\n                      sideLabel=\"Use the Middle Banner image inside the Banner\"\n                      name=\"midBannerHalfwidth\"\n                      checked={midBannerHalfwidth}\n                      handleChange={this.handleCheckbox}\n                    />\n                  </Flex>\n                  {midBannerHalfwidth && (\n                    <>\n                      <Input\n                        inputtype=\"inputSelector\"\n                        label=\"Banner Background Image\"\n                        name=\"midBannerHWbackImg\"\n                        value={midBannerHWbackImg}\n                        onChange={this.handleChange}\n                        onClick={this.handleMediaModal}\n                        clearInput={this.clearInput}\n                      />\n                      <Flex>\n                        <Input\n                          inputtype=\"input\"\n                          type=\"number\"\n                          label=\"Banner Image Size\"\n                          name=\"midBannerImgSize\"\n                          value={midBannerImgSize}\n                          onChange={this.handleChange}\n                        />\n                        <Input\n                          inputtype=\"inputColourPicker\"\n                          label=\"Banner Background Colour\"\n                          name=\"midBannerHWBackColour\"\n                          value={midBannerHWBackColour}\n                          changeColour={this.handleColourPicker}\n                          pageId={\"home\"}\n                        />\n                      </Flex>\n                    </>\n                  )}\n                  <Flex>\n                    <Input\n                      inputtype=\"checkbox\"\n                      sideLabel=\"Banner Text Right Side\"\n                      name=\"midBannerTxtRightSide\"\n                      checked={midBannerTxtRightSide}\n                      handleChange={this.handleCheckbox}\n                    />\n                    <Input\n                      inputtype=\"checkbox\"\n                      sideLabel=\"Banner Light Text Color\"\n                      name=\"midBannerTxtLightTheme\"\n                      checked={midBannerTxtLightTheme}\n                      handleChange={this.handleCheckbox}\n                    />\n                  </Flex>\n                  <Flex>\n                    <Input\n                      inputtype=\"checkbox\"\n                      sideLabel=\"Use Logo in banner\"\n                      name=\"midBannerLogo\"\n                      checked={midBannerLogo}\n                      handleChange={this.handleCheckbox}\n                    />\n                    <Input\n                      inputtype=\"checkbox\"\n                      sideLabel=\"Banner content fade in effect\"\n                      name=\"midBannerfade\"\n                      checked={midBannerfade}\n                      handleChange={this.handleCheckbox}\n                    />\n                  </Flex>\n                  <Input\n                    inputtype=\"input\"\n                    label=\"Banner Title\"\n                    name=\"midBannerTitle\"\n                    value={midBannerTitle}\n                    onChange={this.handleChange}\n                  />\n                  <Input\n                    inputtype=\"input\"\n                    label=\"Banner Subtitle\"\n                    name=\"midBannerSubtitle\"\n                    value={midBannerSubtitle}\n                    onChange={this.handleChange}\n                  />\n                  <Input\n                    inputtype=\"input\"\n                    label=\"Banner Description\"\n                    name=\"midBannerDescription\"\n                    value={midBannerDescription}\n                    onChange={this.handleChange}\n                  />\n                  <Flex>\n                    <Input\n                      inputtype=\"input\"\n                      label=\"Banner Button Text\"\n                      name=\"midBannerBtnText\"\n                      value={midBannerBtnText}\n                      onChange={this.handleChange}\n                    />\n                    <Input\n                      inputtype=\"select\"\n                      label=\"Banner Link\"\n                      name=\"midBannerLink\"\n                      value={midBannerLink}\n                      items={this.props.availableRoutes}\n                      onSelectChange={this.handleChange}\n                    />\n                  </Flex>\n                </Box>\n              </Minimizer>\n            )}\n            <Input\n              inputtype=\"textarea\"\n              label=\"Main Body Text\"\n              name=\"mainText\"\n              value={mainText}\n              onChange={this.handleChange}\n            />\n            <Minimizer>\n              <Box>\n                <Flex>\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Center Header text\"\n                    name=\"mainTextCenterTitle\"\n                    checked={mainTextCenterTitle}\n                    handleChange={this.handleCheckbox}\n                  />\n                  <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Align Text Right Side\"\n                    name=\"mainTextRightSide\"\n                    checked={mainTextRightSide}\n                    handleChange={this.handleCheckbox}\n                  />\n                </Flex>\n                <Input\n                  inputtype=\"select\"\n                  label=\"Main Text Page Position\"\n                  name=\"mainTextPosition\"\n                  value={mainTextPosition}\n                  items={positionArray}\n                  onSelectChange={this.handleChange}\n                />\n                <Input\n                  inputtype=\"inputSelector\"\n                  label=\"Add a Small Image\"\n                  name=\"mainTextImg\"\n                  value={mainTextImg}\n                  onChange={this.handleChange}\n                  onClick={this.handleMediaModal}\n                  clearInput={this.clearInput}\n                />\n                <Grid cols={\"33% 33% 33%\"} margin={\"0 15px 0 0\"}>\n                  <Input\n                    inputtype=\"select\"\n                    label=\"Image align position\"\n                    name=\"mainTextImgAlign\"\n                    value={mainTextImgAlign}\n                    items={floatArray}\n                    onSelectChange={this.handleChange}\n                  />\n                  <Input\n                    inputtype=\"input\"\n                    type=\"number\"\n                    label=\"Banner Image Width\"\n                    name=\"mainTextImgWidth\"\n                    value={mainTextImgWidth || 200}\n                    onChange={this.handleChange}\n                  />\n                  <Input\n                    inputtype=\"input\"\n                    type=\"number\"\n                    label=\"Banner Image Height\"\n                    name=\"mainTextImgHeight\"\n                    value={mainTextImgHeight || 135}\n                    onChange={this.handleChange}\n                  />\n                </Grid>\n                <Input\n                  inputtype=\"inputColourPicker\"\n                  label=\"Banner Background Colour\"\n                  name=\"mainTextBackColour\"\n                  value={mainTextBackColour}\n                  changeColour={this.handleColourPicker}\n                  pageId={\"home\"}\n                />\n              </Box>\n            </Minimizer>\n          </div>\n          <Preview>\n            <Dashboard\n              pageInfo={this.props.homePage}\n              {...this.props}\n              template={this.props.template}\n              overlayBlocker={true}\n            />\n          </Preview>\n        </StyledHomePage>\n        <Flex justifyContent=\"flex-start\">\n          <Button margin=\"2px 5px 15px 20px\" onClick={this.handlesubmit}>\n            Update\n          </Button>\n          {this.props.isUpdating && <Spinner />}\n          {this.props.stateBackup && (\n            <Button\n              margin=\"2px 20px 15px 20px\"\n              onClick={this.props.cancelUpdate}\n            >\n              Undo Changes\n            </Button>\n          )}\n        </Flex>\n      </div>\n    );\n  }\n}\n\nconst Preview = styled.div`\n  display: block;\n  zoom: 30%;\n  padding-top: 56px;\n  box-shadow: 2px 2px 2px;\n\n  @media (max-width: 500px) {\n    display: none;\n  }\n`;\n\nconst StyledHomePage = styled.div`\n  padding: 3vh;\n  display: grid;\n  grid-gap: 8px;\n  grid-template-columns: 65% 35%;\n`;\n\nexport default Homepage;\n","import React from \"react\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Chip from \"@material-ui/core/Chip\";\n\nimport styled from \"styled-components\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nclass MultiSelect extends React.Component {\n  state = {\n    name: []\n  };\n\n  handleChange = event => {\n    this.setState({ name: event.target.value });\n    if (this.props.handleChange) {\n      this.props.handleChange(event);\n    }\n  };\n\n  render() {\n    const { label, items, name, value, margin, width } = this.props;\n\n    return (\n      <StyledSelect margin={margin} width={width}>\n        <FormControl>\n          <InputLabel htmlFor=\"select-multiple-chip\">{label}</InputLabel>\n          <Select\n            multiple\n            value={value || this.state.name}\n            onChange={this.handleChange}\n            input={<Input id=\"select-multiple-chip\" />}\n            name={name}\n            renderValue={selected => (\n              <div className={\"chips\"}>\n                {selected.map(value => (\n                  <Chip key={value} label={value} className={\"chip\"} />\n                ))}\n              </div>\n            )}\n            MenuProps={MenuProps}\n          >\n            {items.map(name => (\n              <MenuItem key={name} value={name}>\n                {name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </StyledSelect>\n    );\n  }\n}\n\nconst StyledSelect = styled.div`\n    display: flex;\n    flex-wrap: wrap;    \n    margin: ${props => props.margin || \"8px\"};\n\n    div {\n      /* margin: ${props => props.margin || \"8px\"}; */\n      width: ${props => props.width || \"400px\"};\n      /* min-width: ${props => props.minwidth || \"200px\"}; */\n      max-width: ${props => props.minwidth || \"450px\"};\n\n      .chips {\n        min-width:auto;\n        display: flex;\n        flex-wrap: wrap;\n        \n\n        .chip{\n          margin: 2px;\n          flex-wrap: wrap;\n          width: auto;\n        }\n\n      }\n\n    }\n\n`;\n\nexport default MultiSelect;\n","import React from \"react\";\nimport Input from \"../../../../components/UI/Input\";\nimport Minimizer from \"../../../../components/UI/Wrappers/Minimizer\";\nimport Flex from \"../../../../components/UI/Wrappers/Flex\";\n\nimport MultiSelect from \"../../../../components/UI/MultiSelect\";\n\nconst ContactUsPlugin = props => {\n  if (!props.plugin) return <div />;\n\n  const { contactUsActive, contactUsPages, contactUsEmail } = props.plugin;\n  console.log(\"contact us settings props\", props);\n  return (\n    <div>\n      <Flex>\n        <Input\n          inputtype=\"checkbox\"\n          sideLabel=\"Contact Us Plugin\"\n          parentObj={props.parentObj}\n          name=\"contactUsActive\"\n          checked={contactUsActive}\n          handleChange={props.handleCheckbox}\n        />\n        {contactUsActive && (\n          <MultiSelect\n            label=\"Select the pages where this plugin is available\"\n            items={props.availableRoutes}\n            name=\"contactUsPages\"\n            value={contactUsPages}\n            handleChange={props.handleChange}\n            margin={\"0 10px 20px 15px\"}\n          />\n        )}\n      </Flex>\n\n      {contactUsActive && (\n        <Minimizer padding={\"20px\"}>\n          <div>\n            <Input\n              inputtype=\"input\"\n              label=\"Enter Business email where contact requests are received\"\n              parentObj={props.parentObj}\n              name=\"contactUsEmail\"\n              value={contactUsEmail}\n              onChange={props.handleChange}\n            />\n          </div>\n        </Minimizer>\n      )}\n    </div>\n  );\n};\n\nexport default ContactUsPlugin;\n","import React from \"react\";\nimport Input from \"../../../../components/UI/Input\";\nimport Minimizer from \"../../../../components/UI/Wrappers/Minimizer\";\nimport Flex from \"../../../../components/UI/Wrappers/Flex\";\n\nimport MultiSelect from \"../../../../components/UI/MultiSelect\";\n\nconst BookingPlugin = props => {\n    if (!props.plugin) return <div />;\n\n    const { bookingActive, bookingPages, bookingEmail, bookingForm, bookingCalendarID, bookingApiKey, bookingTimeSlotsAvailable, bookingTimeSlots, bookingSessions } = props.plugin;\n    console.log(\"booking settings props\", props);\n    return (\n        <div>\n            <Flex>\n                <Input\n                    inputtype=\"checkbox\"\n                    sideLabel=\"Booking Plugin\"\n                    parentObj={props.parentObj}\n                    name=\"bookingActive\"\n                    checked={bookingActive}\n                    handleChange={props.handleCheckbox}\n                />\n                {bookingActive && (\n                    <MultiSelect\n                        label=\"Select the pages where this plugin is available\"\n                        items={props.availableRoutes}\n                        name=\"bookingPages\"\n                        value={bookingPages}\n                        handleChange={props.handleChange}\n                        margin={\"0 10px 20px 15px\"}\n                    />\n                )}\n            </Flex>\n\n            {bookingActive && (\n                <Minimizer emptyHeight={\"200px\"} padding={\"20px\"}>\n                    <div>\n                        <Input\n                            inputtype=\"input\"\n                            label=\"Enter Business email where bookings are received\"\n                            parentObj={props.parentObj}\n                            name=\"bookingEmail\"\n                            value={bookingEmail}\n                            onChange={props.handleChange}\n                        />\n                        <Input\n                            inputtype=\"checkbox\"\n                            sideLabel=\"Include Contact form with booking calendar\"\n                            parentObj={props.parentObj}\n                            name=\"bookingForm\"\n                            checked={bookingForm}\n                            handleChange={props.handleCheckbox}\n                        />\n                        <Input\n                            inputtype=\"input\"\n                            label=\"Google Calendar Id\"\n                            parentObj={props.parentObj}\n                            name=\"bookingCalendarID\"\n                            value={bookingCalendarID}\n                            onChange={props.handleChange}\n                        />\n                        <Input\n                            inputtype=\"input\"\n                            label=\"Google Calendar Api Key\"\n                            parentObj={props.parentObj}\n                            name=\"bookingApiKey\"\n                            value={bookingApiKey}\n                            onChange={props.handleChange}\n                        />\n                        <br/>\n                        <Input\n                            inputtype=\"checkbox\"\n                            sideLabel=\"Timeslots available (leave unticked if booking times do not repeat)\"\n                            parentObj={props.parentObj}\n                            name=\"bookingTimeSlotsAvailable\"\n                            checked={bookingTimeSlotsAvailable}\n                            handleChange={props.handleCheckbox}\n                        />\n                        { bookingTimeSlotsAvailable &&\n                        <Input\n                            inputtype=\"input\"\n                            label=\"Enter the timeslots when events can be booked on a daily bases\"\n                            parentObj={props.parentObj}\n                            name=\"bookingTimeSlots\"\n                            value={bookingTimeSlots}\n                            placeholder={'eg 24 hour format..  09:30-10:00, 10:00-10:30, 14:30-15:00'}\n                            onChange={props.handleChange}\n                        />\n                        }\n\n                        <Input\n                            inputtype=\"input\"\n                            type=\"number\"\n                            label={bookingTimeSlotsAvailable ? 'Booking sessions available per timeslot' : 'Booking sessions available per day'}\n                            parentObj={props.parentObj}\n                            name=\"bookingSessions\"\n                            value={bookingSessions}\n                            placeholder={bookingTimeSlotsAvailable ? 'eg. Entering \"6\" will allow 6 bookings per timeslot' : 'eg. Entering \"6\" will allow 6 bookings per day'}\n                            onChange={props.handleChange}\n                        />\n\n\n                    </div>\n                </Minimizer>\n            )}\n        </div>\n    );\n};\n\nexport default BookingPlugin;\n","import React, { Component } from \"react\";\n\nimport styled from \"styled-components\";\n\nimport Spinner from \"../../../components/UI/Spinner\";\nimport Flex from \"../../../components/UI/Wrappers/Flex\";\nimport Button from \"../../../components/UI/Buttons/Button\";\n\nimport ContactUsPlugin from \"./contactUsPlugin/ContactUsPlugin\";\nimport BookingPlugin from \"./bookingPlugin/BookingPlugin\";\n\nclass Plugins extends Component {\n  state = {\n    contactUsPlugin: false\n  };\n\n  accordianClick = name => {\n    this.setState({ [name]: !this.state[name] });\n  };\n\n  handleChange = (event, parentObj) => {\n    //event.preventDefault();\n    this.props.changePluginState(event.target, \"plugins\", parentObj);\n  };\n\n  handleCheckbox = (check, parentObj) => event => {\n    console.log(check, parentObj, event.target.checked);\n    const newevent = {\n      name: event.target.name,\n      value: event.target.checked\n    };\n    this.props.changePluginState(newevent, \"plugins\", parentObj);\n  };\n\n  handlesubmit = event => {\n    event.preventDefault();\n    const siteName = process.env.REACT_APP_SITENAME;\n\n    const url = `/${siteName}/site/plugins`;\n    this.props.pluginsChangeSubmit(url, this.props.plugins);\n  };\n\n  render() {\n    if (!this.props.plugins)\n      return (\n        <div>\n          <Spinner />\n        </div>\n      );\n\n    console.log(\"plugins props\", this.props);\n\n    let availableRoutes = this.props.availableRoutes.map(route => {\n      const value = route.value === \"/\" ? \"home\" : route.value;\n      let str = value.split(\"/\").pop();\n      return str;\n    });\n\n    availableRoutes.unshift(\"All Pages\");\n\n    return (\n      <div>\n        <StyledPlugins>\n          <ContactUsPlugin\n            plugin={this.props.plugins.contactUs}\n            name={\"contactUsPlugin\"}\n            parentObj=\"contactUs\"\n            availableRoutes={availableRoutes}\n            accordianClick={this.accordianClick}\n            handleCheckbox={this.handleCheckbox}\n            handleChange={e => this.handleChange(e, \"contactUs\")}\n          />\n          <br/><br/>\n          <BookingPlugin\n            plugin={this.props.plugins.booking}\n            name={\"bookingPlugin\"}\n            parentObj=\"booking\"\n            availableRoutes={availableRoutes}\n            accordianClick={this.accordianClick}\n            handleCheckbox={this.handleCheckbox}\n            handleChange={e => this.handleChange(e, \"booking\")}\n          />\n        </StyledPlugins>\n        <Flex justifyContent=\"flex-start\">\n          <Button margin=\"2px 5px 15px 20px\" onClick={this.handlesubmit}>\n            Update\n          </Button>\n          {this.props.isUpdating && <Spinner />}\n          {this.props.stateBackup && (\n            <Button\n              margin=\"2px 20px 15px 20px\"\n              onClick={this.props.cancelUpdate}\n            >\n              Undo Changes\n            </Button>\n          )}\n        </Flex>\n      </div>\n    );\n  }\n}\n\nconst StyledPlugins = styled.div`\n  width: 100%;\n`;\nexport default Plugins;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../store/actions/index\";\n\nimport Spinner from \"../../components/UI/Spinner\";\nimport Button from \"../../components/UI/Buttons/Button\";\nimport Input from \"../../components/UI/Input\";\nimport Flex from \"../../components/UI/Wrappers/Flex\";\n\nclass AuthModal extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  componentDidUpdate(prevProps) {\n    if (this.props.isAuthenticated !== prevProps.isAuthenticated) {\n      this.props.isTimedOut();\n    }\n  }\n\n  onFormChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  submitHandler = event => {\n    event.preventDefault();\n    this.props.onAuth(this.state.email, this.state.password, this.props.admin);\n  };\n\n  backToHome = () => {\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    console.log(\"AuthModal page props\", this.props);\n\n    let errorMessage = null;\n\n    if (this.props.error) {\n      // const errorCode={\n      //   EMAIL_NOT_FOUND: 'There is no user record corresponding to this email address',\n      //   INVALID_PASSWORD: 'The password entered was invalid - please try again',\n      //   USER_DISABLED: 'The user account has been disabled by an administrator.',\n      //   INVALID_EMAIL: 'The email address entered is invalid'\n      // }\n      errorMessage = (\n        // <p>{ errorCode[this.props.error.message] }</p>\n        <p>{this.props.error}</p>\n      );\n    }\n\n    return (\n      <div>\n        <div>Administrator Login</div>\n        <br />\n        <Input\n          inputtype=\"input\"\n          placeholder=\"email\"\n          name=\"email\"\n          value={this.state.email}\n          onChange={this.onFormChange}\n        />\n        <Input\n          inputtype=\"input\"\n          placeholder=\"password\"\n          name=\"password\"\n          value={this.state.password}\n          onChange={this.onFormChange}\n        />\n        {errorMessage}\n        <br />\n        <Flex>\n          <Button onClick={this.backToHome}>Cancel</Button>\n          <Button onClick={this.submitHandler}>Submit</Button>\n        </Flex>\n\n        {this.props.loading && <Spinner />}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    admin: state.mainState.admin,\n    isAuthenticated: state.auth.userId !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (email, password, admin) =>\n      dispatch(actions.auth(email, password, admin))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AuthModal);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../store/actions/index\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\n\nimport styled from \"styled-components\";\n\nimport Accordian from \"../../components/UI/Accordian\";\nimport TabsMenu from \"./Navigation/TabsMenu\";\nimport Modal from \"../../components/UI/Modal\";\nimport Button from \"../../components/UI/Buttons/Button\";\nimport Toast from \"../../components/UI/Toast\";\nimport Flex from \"../../components/UI/Wrappers/Flex\";\n\nimport NewPageForm from \"../../components/Forms/NewPageForm\";\nimport Media from \"./media/Media\";\nimport Template from \"./template/Template\";\nimport Homepage from \"./homepage/Homepage\";\nimport Plugins from \"./plugins/Plugins\";\nimport AuthModal from \"../Auth/AuthModal\";\n\nclass Admin extends Component {\n  state = {\n    homepage_accordian: false,\n    navigation_accordian: false,\n    template_accordian: false,\n    media_accordian: false,\n\n    showSignIn: false,\n    newPageOpen: false,\n    deletePageModal: false,\n    pageToDelete: null,\n    openMediaModal: false,\n    mediaModalTabItemRef: [],\n    mediaImages: [],\n    newPageToast: null,\n    loading: false,\n    error: null\n  };\n\n  componentWillMount() {\n    console.log('adminPage - sitename', process.env.REACT_APP_SITENAME)\n\n    if (!this.props.isAuthenticated && process.env.NODE_ENV === \"production\"){\n      this.props.history.push('/authenticate-admin')\n    }\n\n    const user = firebase.auth().currentUser;\n\n    if (user) {\n      // User is signed in.\n      console.log(\"user is signed in\");\n    } else {\n      // No user is signed in.\n      console.log(\" No user is signed in.\");\n      // firebase.auth().signInWithCustomToken(token).catch(function(error) {\n      //     // Handle Errors here.\n      //     var errorCode = error.code;\n      //     var errorMessage = error.message;\n      //     // ...\n      // });\n    }\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isAuthenticated && !this.props.isAuthenticated && process.env.NODE_ENV === \"production\"){\n      this.props.history.push('/authenticate-admin')\n    }\n  }\n\n  logoutHandler = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(\n        function() {\n          console.log(\"Signed Out\");\n        },\n        function(error) {\n          console.error(\"Sign Out Error\", error);\n        }\n      );\n    this.props.onLogoutClick();\n  };\n\n  openMediaModal = (pageInfo, key, parentKey) => {\n    console.log(\"opneMedia Modal\", pageInfo, key, parentKey);\n    this.setState({\n      openMediaModal: true,\n      mediaModalTabItemRef: [pageInfo, key, parentKey]\n    });\n  };\n\n  closeMediaModal = () => {\n    this.setState({ openMediaModal: false });\n  };\n\n  setMediaImages = mediaImages => {\n    this.setState({ mediaImages });\n  };\n\n  handleNewPageButton = event => {\n    event.preventDefault();\n    this.setState({ newPageOpen: !this.state.newPageOpen });\n  };\n\n  submitNewPage = newPage_State => {\n    console.log(\"newPage_State\", newPage_State);\n    const { title, checked, selectVal } = newPage_State;\n    const { navigationItems } = this.props;\n    const siteName = process.env.REACT_APP_SITENAME\n\n    const route = title.replace(/ /g, \"-\").toLowerCase();\n\n    const defaultContent = {\n      id: Date.now(),\n      mainText: `This is your newly added ${title} page`\n    };\n    let url = `/${siteName}/site/navigationItems`;\n\n    let newPageObj = {\n      title,\n      route,\n      selected: false,\n      content: defaultContent\n    };\n\n    if (checked) {\n      // const subpageIndex = this.props.navigationItems.findIndex(page => page.title === selectVal);\n\n      let subpageIndex = null;\n      for (let key in navigationItems) {\n        if (navigationItems[key].title === selectVal) {\n          subpageIndex = key;\n        }\n      }\n\n      url = `/${siteName}/site/navigationItems/${subpageIndex}/dropdownPages`;\n\n      newPageObj = {\n        title,\n        route,\n        content: defaultContent\n      };\n    }\n\n    this.setState({ loading: true, error: null }, () => {\n      const that = this;\n      const newPostKey = firebase\n        .database()\n        .ref()\n        .child(url)\n        .push().key;\n      const newPage = { [newPostKey]: newPageObj };\n\n      firebase\n        .database()\n        .ref()\n        .child(url)\n        .update(newPage, function(err) {\n          if (err) {\n            // The write failed...\n            that.setState({\n              loading: false,\n              error: err.code,\n              newPageOpen: false,\n              showSignIn: true\n            });\n          } else {\n            // Data saved successfully!\n            console.log(\"new page added successfully!\");\n            that.setState({\n              loading: false,\n              error: null,\n              newPageOpen: false,\n              newPageToast: \"New Page added successfully\"\n            });\n            that.props.onInitWebsiteState();\n          }\n\n          // axios.post(url, newPageObj)\n          //   .then(response => {\n          //     console.log(response)\n          //     this.props.onInitWebsiteState()\n          //   })\n          //   .then(() =>{\n          //     this.setState({loading: false, error: null, newPageOpen: false, newPageToast: 'New Page added successfully' })\n          //   })\n          //   .then(() => {\n          //     setTimeout(() => {\n          //         this.setState({newPageToast: null});\n          //     }, 7000 );\n          //   })\n          //   .catch(err => {\n          //     console.log(err);\n          //     this.setState({loading: false, error: err.response.data.error, newPageOpen: false, showSignIn: true})\n        });\n    });\n  };\n\n  handleDeletePageModal = (pageId, parentId) => {\n    if (this.state.deletePageModal) {\n      this.setState({ deletePageModal: false, pageToDelete: null });\n    } else {\n      this.setState({\n        deletePageModal: true,\n        pageToDelete: { id: pageId, parentId: parentId }\n      });\n    }\n  };\n\n  submitDeletePage = () => {\n    console.log(this.state.pageToDelete);\n    const that = this;\n    const { id, parentId } = this.state.pageToDelete;\n    const siteName = process.env.REACT_APP_SITENAME;\n\n    let url = `/${siteName}/site/navigationItems/${id}`;\n\n    if (parentId) {\n      url = `/${siteName}/site/navigationItems/${parentId}/dropdownPages/${id}`;\n    }\n\n    firebase\n      .database()\n      .ref(url)\n      .remove()\n      .then(function() {\n        console.log(\"Remove succeeded.\");\n        that.props.onInitWebsiteState();\n        that.setState({ deletePageModal: false, pageToDelete: null });\n      })\n      .catch(function(error) {\n        console.log(\"Remove failed: \" + error.message);\n      });\n  };\n\n  updatePage = (eventTarget, key, parent) => {\n    console.log(eventTarget.value, key, parent);\n    this.props.onChangePageState(eventTarget, key, parent);\n  };\n\n  updatePageSubmit = (pageInfo, key, parentKey) => {\n    console.log(pageInfo, key, parentKey);\n    const siteName = process.env.REACT_APP_SITENAME;\n\n    const URL = !parentKey\n      ? `/${siteName}/site/navigationItems/${key}/content`\n      : `/${siteName}/site/navigationItems/${parentKey}/dropdownPages/${key}/content`;\n\n    const user = firebase.auth().currentUser;\n\n    if (user) {\n      // User is signed in.\n      console.log(\"user is signed in\");\n      this.props.onUpdatePageSubmit(URL, pageInfo);\n    } else {\n      // No user is signed in.\n      console.log(\" No user is signed in.\");\n      this.setState({\n        showSignIn: true,\n        error: \"Permission denied. Please sign in again to Re-authenticate\"\n      });\n    }\n  };\n\n  timedOutUser = () => {\n    const user = firebase.auth().currentUser;\n    if (user) {\n      // User is signed in\n      this.setState({ showSignIn: false });\n    } else {\n      // No user is signed in.\n      console.log(\" No user is signed in.\");\n      this.setState({ showSignIn: true });\n    }\n  };\n\n  accordianClick = name => {\n    this.setState({ [name]: !this.state[name] });\n  };\n\n  // this.props.addPage(url, newPageObj)\n\n  render() {\n    console.log(\"Admin Page props\", this.props);\n    const {\n      media_accordian,\n      template_accordian,\n      homepage_accordian,\n      navigation_accordian,\n      plugins_accordian\n    } = this.state;\n\n    return (\n      <StyledAdminPage>\n        <Flex justifyContent=\"space-between\">\n          <h1 className=\"admin-title\">Admin Page</h1>\n          <Button onClick={this.logoutHandler}>logout</Button>\n        </Flex>\n        <Modal\n          open={this.state.showSignIn}\n          title=\"You have been logged out\"\n          description=\"Your administrator session has expired you will need to log back in to continue\"\n        >\n          <AuthModal\n            history={this.props.history}\n            isTimedOut={this.timedOutUser}\n          />\n        </Modal>\n        <div>\n          <Accordian\n            title={\"Media\"}\n            name={\"media_accordian\"}\n            onClick={e => this.accordianClick(e)}\n          >\n            {media_accordian && (\n              <Media\n                isAuthenticated={this.props.isAuthenticated}\n                isTimedOut={this.timedOutUser}\n                currentImages={this.props.images}\n                refreshState={this.props.onInitWebsiteState}\n                isModal={false}\n                imageURLs={this.state.mediaImages}\n                setMediaImages={this.setMediaImages}\n              />\n            )}\n          </Accordian>\n          <br />\n\n          <Accordian\n            title={\"Template\"}\n            name={\"template_accordian\"}\n            onClick={e => this.accordianClick(e)}\n          >\n            {template_accordian && (\n              <Template\n                template={this.props.template}\n                changeTemplateState={this.props.onChangePageState}\n                templateChangeSubmit={this.props.onUpdatePageSubmit}\n                isUpdating={this.props.isUpdating}\n                isError={this.props.isError}\n                stateBackup={this.props.stateBackup}\n                cancelUpdate={this.props.onRevertChanges}\n                openMediaModal={this.openMediaModal}\n              />\n            )}\n          </Accordian>\n          <br />\n\n          <Accordian\n            title={\"Homepage\"}\n            name={\"homepage_accordian\"}\n            onClick={e => this.accordianClick(e)}\n          >\n            {homepage_accordian && (\n              <Homepage\n                homePage={this.props.home}\n                changeHomepageState={this.props.onChangePageState}\n                homepageChangeSubmit={this.props.onUpdatePageSubmit}\n                isUpdating={this.props.isUpdating}\n                isError={this.props.isError}\n                stateBackup={this.props.stateBackup}\n                cancelUpdate={this.props.onRevertChanges}\n                openMediaModal={this.openMediaModal}\n                availableRoutes={this.props.availableRoutes}\n                template={this.props.template}\n                plugins={this.props.plugins}\n              />\n            )}\n          </Accordian>\n          <br />\n\n          <Accordian\n            title=\"Navigation and Pages\"\n            name={\"navigation_accordian\"}\n            onClick={e => this.accordianClick(e)}\n          >\n            {navigation_accordian && (\n              <div className=\"fullwidth\">\n                <Button onClick={this.handleNewPageButton}>\n                  Add a new page\n                </Button>\n\n                <Modal\n                  open={this.state.newPageOpen}\n                  navigationItems={this.props.navigationItems}\n                  handleClose={this.handleNewPageButton}\n                  title=\"Add a new Webpage\"\n                  description=\"Here you can add a new page to your website which will show in the header navigation. You can also make the new page a subpage of another navigation link\"\n                >\n                  <NewPageForm\n                    loading={this.state.loading}\n                    navigationItems={this.props.navigationItems}\n                    handleClose={this.handleNewPageButton}\n                    handleSubmit={this.submitNewPage}\n                  />\n                </Modal>\n\n                <Modal\n                  open={this.state.deletePageModal}\n                  navigationItems={this.props.navigationItems}\n                  handleClose={this.handleDeletePageModal}\n                  title=\"Delete Webpage\"\n                  description=\"You are about to delete selected page this is a permanent action, would you like to continue with deleting this page\"\n                >\n                  <Flex>\n                    <Button onClick={this.submitDeletePage}>Delete</Button>\n                    <Button onClick={this.handleDeletePageModal}>Cancel</Button>\n                  </Flex>\n                </Modal>\n\n                <br />\n                <br />\n                <TabsMenu\n                  navigationItems={this.props.navigationItems}\n                  updatePageSubmit={this.updatePageSubmit}\n                  onChange={this.updatePage}\n                  openMediaModal={this.openMediaModal}\n                  handlePageDelete={this.handleDeletePageModal}\n                  isUpdating={this.props.isUpdating}\n                  cancelUpdate={this.props.onRevertChanges}\n                  isError={this.props.isError}\n                  stateBackup={this.props.stateBackup}\n                  availableRoutes={this.props.availableRoutes}\n                  template={this.props.template}\n                  plugins={this.props.plugins}\n                />\n                <br />\n              </div>\n            )}\n          </Accordian>\n          <br />\n\n          <Accordian\n            title={\"Plugins\"}\n            name={\"plugins_accordian\"}\n            onClick={e => this.accordianClick(e)}\n          >\n            {plugins_accordian && (\n              <Plugins\n                plugins={this.props.plugins}\n                changePluginState={this.props.onChangePageState}\n                pluginsChangeSubmit={this.props.onUpdatePageSubmit}\n                availableRoutes={this.props.availableRoutes}\n                isUpdating={this.props.isUpdating}\n                isError={this.props.isError}\n                stateBackup={this.props.stateBackup}\n                cancelUpdate={this.props.onRevertChanges}\n              />\n            )}\n          </Accordian>\n\n          <Modal\n            open={this.state.openMediaModal}\n            title=\"Choose an image\"\n            description=\"Select the media location you would like to use\"\n            handleClose={this.closeMediaModal}\n          >\n            <Media\n              isModal={true}\n              isAuthenticated={this.props.isAuthenticated}\n              handleClose={this.closeMediaModal}\n              currentImages={this.props.images}\n              imageURLs={this.state.mediaImages}\n              setMediaImages={this.setMediaImages}\n              tabItemReference={this.state.mediaModalTabItemRef}\n              onChangePageState={this.props.onChangePageState}\n            />\n          </Modal>\n        </div>\n        {this.state.newPageToast !== null && (\n          <Toast message={this.state.newPageToast} />\n        )}\n        {this.props.updatePageToast !== null && (\n          <Toast message={this.props.updatePageToast} />\n        )}\n        {this.state.error && <Toast message={this.state.error} error={true} />}\n      </StyledAdminPage>\n    );\n  }\n}\n\nconst StyledAdminPage = styled.div`\n  background-color: #424242;\n  min-height: 100vh;\n  padding: 100px 50px;\n  margin-top: -75px;\n\n  .admin-title {\n    color: #f5f5f5;\n  }\n`;\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.userId !== null,\n    userId: state.auth.userId,\n    home: state.mainState.home,\n    navigationItems: state.mainState.navigationItems,\n    images: state.mainState.images,\n    stateBackup: state.mainState.state_copy,\n    updatePageToast: state.admin.pageUpdateToast,\n    isUpdating: state.admin.loading,\n    isError: state.admin.error,\n    availableRoutes: state.admin.routes,\n    template: state.mainState.template,\n    plugins: state.mainState.plugins\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onInitWebsiteState: () => dispatch(actions.initWebsiteState()),\n    onLogoutClick: () => dispatch(actions.logout()),\n    onChangePageState: (eventTarget, key, parent) =>\n      dispatch(actions.changePageState(eventTarget, key, parent)),\n    onUpdatePageSubmit: (pageInfo, url) =>\n      dispatch(actions.updatePageSubmit(pageInfo, url)),\n    onRevertChanges: () => dispatch(actions.revertStateChange())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Admin);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Page from \"../../components/page\";\n\nimport Admin from \"../../containers/Admin/Admin\";\n\nconst AdminRoute = ({ currentUser }) => (\n  <Page id=\"admin\" title=\"Admin\" noCrawl>\n    <Admin />\n  </Page>\n);\n\nconst mapStateToProps = state => ({\n  currentUser: state.auth.currentUser\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(AdminRoute);\n","import React from \"react\";\nimport Page from \"../../components/page\";\n\nimport Admin from \"../../containers/Admin/Admin\";\n\nconst Admin_TEST = props => {\n  console.log(\"admin_TEST.props\", props);\n  return (\n    <Page id=\"admin\" title=\"Admin\" noCrawl>\n      <Admin {...props}/>\n    </Page>\n  );\n};\n\nexport default Admin_TEST;\n"],"sourceRoot":""}